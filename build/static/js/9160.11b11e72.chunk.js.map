{"version":3,"file":"static/js/9160.11b11e72.chunk.js","mappings":"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","sources":["components/Scrollbar.tsx","layouts/TwoColumn/IconMenu.tsx","layouts/TwoColumn/MainMenu.tsx","layouts/TwoColumn/LeftSidebar.tsx"],"sourcesContent":["import React from \"react\";\nimport SimpleBar from \"simplebar-react\";\n\ninterface ScrollbarProps extends SimpleBar.Props {\n  className?: string;\n  style?: any;\n  children?: any;\n}\n\nconst Scrollbar = ({\n  className,\n  style,\n  children,\n  ...otherProps\n}: ScrollbarProps) => {\n  return (\n    <SimpleBar className={className} style={style} {...otherProps}>\n      {children}\n    </SimpleBar>\n  );\n};\n\nexport default Scrollbar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FeatherIcon from \"feather-icons-react\";\nimport classNames from \"classnames\";\n\n// components\nimport Scrollbar from \"../../components/Scrollbar\";\n\n// images\nimport logo from \"../../assets/images/logo-sm-light.png\";\n\n/**\n * Renders the application menu\n */\ninterface Item {\n  key: string;\n  label: string;\n  isTitle?: boolean;\n  icon?: string;\n  url?: string;\n  badge?: {\n    variant: string;\n    text: string;\n  };\n  parentKey?: string;\n  target?: string;\n  children?: Item[];\n}\n\ninterface AppMenuProps {\n  menuItems: Item[];\n  toggleMenu: (item: Item, show: boolean) => void;\n  activeMenuItems: string[];\n}\n\nconst IconMenu = ({ menuItems, toggleMenu, activeMenuItems }: AppMenuProps) => {\n  const onMenuItemClick = (e: any, menuItem: Item) => {\n    const hasChildren = menuItem.children! && menuItem.children.length;\n    if (hasChildren) {\n      e.preventDefault();\n    }\n    toggleMenu(menuItem, true);\n  };\n\n  return (\n    <>\n      <div className=\"sidebar-icon-menu h-100\">\n        <Scrollbar\n          style={{ maxHeight: \"100%\" }}\n          timeout={500}\n          scrollbarMaxSize={320}\n        >\n          <Link to=\"/\" className=\"logo\">\n            <span>\n              <img src={logo} alt=\"\" height=\"28\" />\n            </span>\n          </Link>\n\n          <nav className=\"nav flex-column\" id=\"two-col-sidenav-main\">\n            {(menuItems || []).map((item, index) => {\n              const activeParent =\n                activeMenuItems &&\n                activeMenuItems.length &&\n                activeMenuItems[activeMenuItems.length - 1] === item[\"key\"];\n              return (\n                <Link\n                  key={index}\n                  className={classNames(\"nav-link\", \"nav-link-ref\", {\n                    active: activeParent,\n                  })}\n                  to={item.children! ? \"/#\" : item.url!}\n                  title={item.label}\n                  data-menu-key={item.key}\n                  onClick={(e: any) => {\n                    onMenuItemClick(e, item);\n                  }}\n                >\n                  <FeatherIcon icon={item.icon} />\n                </Link>\n              );\n            })}\n          </nav>\n        </Scrollbar>\n      </div>\n    </>\n  );\n};\n\nexport default IconMenu;\n","import React, { useEffect, useState } from \"react\";\nimport { Collapse } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// constants\nimport { MenuItemTypes } from \"../../constants/menu\";\n\n// components\nimport Scrollbar from \"../../components/Scrollbar\";\n\ninterface SubMenus {\n  item: MenuItemTypes;\n  linkClassName?: string;\n  subMenuClassNames?: string;\n  activeMenuItems?: Array<string>;\n  toggleMenu?: (item: any, status: boolean) => void;\n  className?: string;\n}\n\nconst MenuItemWithChildren = ({\n  item,\n  linkClassName,\n  subMenuClassNames,\n  activeMenuItems,\n  toggleMenu,\n}: SubMenus) => {\n  const [open, setOpen] = useState<boolean>(\n    activeMenuItems!.includes(item.key)\n  );\n\n  useEffect(() => {\n    setOpen(activeMenuItems!.includes(item.key));\n  }, [activeMenuItems, item]);\n\n  const toggleMenuItem = (e: any) => {\n    e.preventDefault();\n    const status = !open;\n    setOpen(status);\n    if (toggleMenu) toggleMenu(item, status);\n    return false;\n  };\n\n  return (\n    <>\n      <li className={classNames(\"nav-item\", { \"menuitem-active\": open })}>\n        <Link\n          to=\"#\"\n          onClick={toggleMenuItem}\n          data-menu-key={item.key}\n          aria-expanded={open}\n          className={classNames(linkClassName, {\n            \"menuitem-active\": activeMenuItems!.includes(item.key)\n              ? \"active\"\n              : \"\",\n          })}\n        >\n          {!item.badge ? (\n            <span className=\"menu-arrow\"></span>\n          ) : (\n            <span\n              className={`badge bg-${item.badge.variant} rounded-pill float-end`}\n            >\n              {item.badge.text}\n            </span>\n          )}\n          <span> {item.label} </span>\n        </Link>\n        <Collapse in={open}>\n          <div>\n            <ul className={classNames(subMenuClassNames)}>\n              {(item.children || []).map((child, i) => {\n                return (\n                  <React.Fragment key={i}>\n                    {child.children ? (\n                      <>\n                        {/* parent */}\n                        <MenuItemWithChildren\n                          item={child}\n                          linkClassName={\n                            activeMenuItems!.includes(child.key) ? \"active\" : \"\"\n                          }\n                          activeMenuItems={activeMenuItems}\n                          subMenuClassNames=\"nav-second-level\"\n                          toggleMenu={toggleMenu}\n                        />\n                      </>\n                    ) : (\n                      <>\n                        {/* child */}\n                        <MenuItem\n                          item={child}\n                          className={\n                            activeMenuItems!.includes(child.key)\n                              ? \"menuitem-active\"\n                              : \"\"\n                          }\n                          linkClassName={\n                            activeMenuItems!.includes(child.key) ? \"active\" : \"\"\n                          }\n                        />\n                      </>\n                    )}\n                  </React.Fragment>\n                );\n              })}\n            </ul>\n          </div>\n        </Collapse>\n      </li>\n    </>\n  );\n};\n\nconst MenuItem = ({ item, className, linkClassName }: SubMenus) => {\n  return (\n    <>\n      <li className={classNames(\"nav-item\", className)}>\n        <MenuItemLink item={item} className={linkClassName} />\n      </li>\n    </>\n  );\n};\n\nconst MenuItemLink = ({ item, className }: SubMenus) => {\n  return (\n    <Link\n      to={item.url!}\n      target={item.target}\n      className={classNames(\"nav-link-ref\", className)}\n      data-menu-key={item.key}\n    >\n      {item.badge && (\n        <span className={`badge bg-${item.badge.variant} float-end`}>\n          {item.badge.text}\n        </span>\n      )}\n      <span> {item.label} </span>\n    </Link>\n  );\n};\n\ninterface MainMenuProps {\n  menuItems: MenuItemTypes[];\n  toggleMenu: (item: MenuItemTypes, show: boolean) => void;\n  activeMenuItems: string[];\n}\n\nconst MainMenu = ({\n  menuItems,\n  toggleMenu,\n  activeMenuItems,\n}: MainMenuProps) => {\n  return (\n    <>\n      {activeMenuItems && (\n        <div className=\"sidebar-main-menu\">\n          <div id=\"two-col-menu\" className=\"h-100\">\n            <Scrollbar style={{ maxHeight: \"100%\" }}>\n              {(menuItems || []).map((menuItem, key) => {\n                const activeParent =\n                  activeMenuItems &&\n                  activeMenuItems.length &&\n                  activeMenuItems[activeMenuItems.length - 1] ===\n                    menuItem[\"key\"];\n                return (\n                  <div\n                    key={key}\n                    className={classNames(\"twocolumn-menu-item\", {\n                      \"d-block\": activeParent,\n                    })}\n                  >\n                    <div className=\"title-box\">\n                      {menuItem.isTitle && (\n                        <h5 className=\"menu-title\">{menuItem.label}</h5>\n                      )}\n                      <ul className=\"nav flex-column\">\n                        {(menuItem.children || []).map((item, idx) => {\n                          return (\n                            <React.Fragment key={idx}>\n                              {item.children ? (\n                                <MenuItemWithChildren\n                                  item={item}\n                                  toggleMenu={toggleMenu}\n                                  subMenuClassNames=\"nav-second-level\"\n                                  activeMenuItems={activeMenuItems}\n                                  linkClassName=\"nav-link\"\n                                />\n                              ) : (\n                                <MenuItem\n                                  item={item}\n                                  linkClassName=\"nav-link\"\n                                  className={\n                                    activeMenuItems!.includes(item.key)\n                                      ? \"menuitem-active\"\n                                      : \"\"\n                                  }\n                                />\n                              )}\n                            </React.Fragment>\n                          );\n                        })}\n                      </ul>\n                    </div>\n                  </div>\n                );\n              })}\n            </Scrollbar>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MainMenu;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// actions\nimport { changeSidebarType } from \"../../redux/actions\";\n\n//constants\nimport { SideBarTypes } from \"../../constants/layout\";\n\n// store\nimport { RootState, AppDispatch } from \"../../redux/store\";\n\n// helpers\nimport {\n  findAllParent,\n  findMenuItem,\n  getTwoColumnMenuItems,\n} from \"../../helpers/menu\";\n\n// components\nimport IconMenu from \"./IconMenu\";\nimport MainMenu from \"./MainMenu\";\n\ninterface Item {\n  key: string;\n  label: string;\n  isTitle?: boolean;\n  icon?: string;\n  url?: string;\n  badge?: {\n    variant: string;\n    text: string;\n  };\n  parentKey?: string;\n  target?: string;\n  children?: Item[];\n}\n\nconst LeftSidebar = () => {\n  const location = useLocation();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const menuItems = getTwoColumnMenuItems();\n\n  const [activeMenuItems, setActiveMenuItems] = useState<Array<string>>([]);\n\n  const { leftSideBarType } = useSelector((state: RootState) => ({\n    leftSideBarType: state.Layout.leftSideBarType,\n  }));\n\n  /*\n   * toggle the menus\n   */\n  const toggleMenu = (menuItem: Item, show: boolean) => {\n    if (menuItem.children) {\n      if (leftSideBarType === \"condensed\")\n        dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT));\n    }\n\n    if (show)\n      setActiveMenuItems([\n        menuItem[\"key\"],\n        ...findAllParent(menuItems, menuItem),\n      ]);\n  };\n\n  /**\n   * activate the menuitems\n   */\n\n  const activeMenu = useCallback(() => {\n    const div = document.getElementById(\"sidebar-content\");\n    let matchingMenuItem = null;\n\n    if (div) {\n      let items: any = div.getElementsByClassName(\"nav-link-ref\");\n      for (let i = 0; i < items.length; ++i) {\n        let trimmedURL = location?.pathname?.replaceAll(process.env.PUBLIC_URL, \"\");\n        if (trimmedURL === items[i]?.pathname?.replaceAll(process.env.PUBLIC_URL, \"\")) {\n          matchingMenuItem = items[i];\n          break;\n        }\n      }\n\n      if (matchingMenuItem) {\n        const mid = matchingMenuItem.getAttribute(\"data-menu-key\");\n        const activeMt = findMenuItem(menuItems, mid);\n        if (activeMt) {\n          setActiveMenuItems([\n            activeMt[\"key\"],\n            ...findAllParent(menuItems, activeMt),\n          ]);\n        }\n      }\n    }\n  }, [location, menuItems]);\n\n  useEffect(() => {\n    activeMenu();\n  }, [activeMenu]);\n\n  useEffect(() => {\n    if (\n      activeMenuItems &&\n      activeMenuItems.length &&\n      activeMenuItems.length === 1\n    ) {\n      const parentLevel0 = findMenuItem(menuItems, activeMenuItems[0]);\n      const hasChildren =\n        parentLevel0 &&\n        parentLevel0[\"children\"] &&\n        parentLevel0[\"children\"].length;\n\n      if (\n        !hasChildren &&\n        (leftSideBarType === \"default\" || leftSideBarType === \"compact\")\n      ) {\n        dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED));\n      } else {\n        dispatch(changeSidebarType(leftSideBarType));\n      }\n    }\n  }, [activeMenuItems, leftSideBarType, dispatch, menuItems]);\n\n  return (\n    <>\n      <div className=\"left-side-menu\">\n        <div className=\"h-100\">\n          <div className=\"sidebar-content\" id=\"sidebar-content\">\n            <IconMenu\n              menuItems={getTwoColumnMenuItems()}\n              toggleMenu={toggleMenu}\n              activeMenuItems={activeMenuItems}\n            />\n\n            <MainMenu\n              menuItems={menuItems}\n              activeMenuItems={activeMenuItems}\n              toggleMenu={toggleMenu}\n            />\n          </div>\n\n          <div className=\"clearfix\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LeftSidebar;\n"],"names":["_ref","className","style","children","otherProps","_objectWithoutProperties","_excluded","_jsx","SimpleBar","_objectSpread","menuItems","toggleMenu","activeMenuItems","_Fragment","_jsxs","Scrollbar","maxHeight","timeout","scrollbarMaxSize","Link","to","src","alt","height","id","map","item","index","activeParent","length","classNames","active","url","title","label","key","onClick","e","menuItem","preventDefault","onMenuItemClick","FeatherIcon","icon","MenuItemWithChildren","linkClassName","subMenuClassNames","_useState","useState","includes","_useState2","_slicedToArray","open","setOpen","useEffect","status","badge","concat","variant","text","Collapse","in","child","i","React","MenuItem","_ref2","MenuItemLink","_ref3","target","_ref4","isTitle","idx","location","useLocation","dispatch","useDispatch","getTwoColumnMenuItems","setActiveMenuItems","leftSideBarType","useSelector","state","Layout","show","changeSidebarType","SideBarTypes","_toConsumableArray","findAllParent","activeMenu","useCallback","div","document","getElementById","matchingMenuItem","items","getElementsByClassName","_location$pathname","_items$i","_items$i$pathname","pathname","replaceAll","process","mid","getAttribute","activeMt","findMenuItem","parentLevel0","hasChildren","IconMenu","MainMenu"],"sourceRoot":""}