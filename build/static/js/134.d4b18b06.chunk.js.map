{"version":3,"file":"static/js/134.d4b18b06.chunk.js","mappings":"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","sources":["components/Scrollbar.tsx","layouts/Menu.tsx","layouts/LeftSidebar.tsx","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/InputGroupContext.js"],"sourcesContent":["import React from \"react\";\nimport SimpleBar from \"simplebar-react\";\n\ninterface ScrollbarProps extends SimpleBar.Props {\n  className?: string;\n  style?: any;\n  children?: any;\n}\n\nconst Scrollbar = ({\n  className,\n  style,\n  children,\n  ...otherProps\n}: ScrollbarProps) => {\n  return (\n    <SimpleBar className={className} style={style} {...otherProps}>\n      {children}\n    </SimpleBar>\n  );\n};\n\nexport default Scrollbar;\n","import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Collapse } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport FeatherIcon from \"feather-icons-react\";\n\n//helpers\nimport { findAllParent, findMenuItem } from \"../helpers/menu\";\n\n// constants\nimport { MenuItemTypes } from \"../constants/menu\";\n\ninterface SubMenus {\n  item: MenuItemTypes;\n  linkClassName?: string;\n  subMenuClassNames?: string;\n  activeMenuItems?: Array<string>;\n  toggleMenu?: (item: any, status: boolean) => void;\n  className?: string;\n}\n\nconst MenuItemWithChildren = ({\n  item,\n  linkClassName,\n  subMenuClassNames,\n  activeMenuItems,\n  toggleMenu,\n}: SubMenus) => {\n  const [open, setOpen] = useState<boolean>(\n    activeMenuItems!.includes(item.key)\n  );\n\n  useEffect(() => {\n    setOpen(activeMenuItems!.includes(item.key));\n  }, [activeMenuItems, item]);\n\n  const toggleMenuItem = (e: any) => {\n    e.preventDefault();\n    const status = !open;\n    setOpen(status);\n    if (toggleMenu) toggleMenu(item, status);\n    return false;\n  };\n\n  return (\n    <li className={classNames({ \"menuitem-active\": open })}>\n      <Link\n        to=\"#\"\n        onClick={toggleMenuItem}\n        data-menu-key={item.key}\n        aria-expanded={open}\n        className={classNames(\"side-sub-nav-link\", linkClassName, {\n          \"menuitem-active\": activeMenuItems!.includes(item.key)\n            ? \"active\"\n            : \"\",\n        })}\n      >\n        {item.icon && <FeatherIcon icon={item.icon} />}\n        {!item.badge ? (\n          <span className=\"menu-arrow\"></span>\n        ) : (\n          <span className={`badge bg-${item.badge.variant} float-end`}>\n            {item.badge.text}\n          </span>\n        )}\n        <span> {item.label} </span>\n      </Link>\n      <Collapse in={open}>\n        <div>\n          <ul className={classNames(subMenuClassNames)}>\n            {(item.children || []).map((child, i) => {\n              return (\n                <React.Fragment key={i}>\n                  {child.children ? (\n                    <>\n                      {/* parent */}\n                      <MenuItemWithChildren\n                        item={child}\n                        linkClassName={\n                          activeMenuItems!.includes(child.key) ? \"active\" : \"\"\n                        }\n                        activeMenuItems={activeMenuItems}\n                        subMenuClassNames=\"side-nav-third-level\"\n                        toggleMenu={toggleMenu}\n                      />\n                    </>\n                  ) : (\n                    <>\n                      {/* child */}\n                      <MenuItem\n                        item={child}\n                        className={\n                          activeMenuItems!.includes(child.key)\n                            ? \"menuitem-active\"\n                            : \"\"\n                        }\n                        linkClassName={\n                          activeMenuItems!.includes(child.key) ? \"active\" : \"\"\n                        }\n                      />\n                    </>\n                  )}\n                </React.Fragment>\n              );\n            })}\n          </ul>\n        </div>\n      </Collapse>\n    </li>\n  );\n};\n\nconst MenuItem = ({ item, className, linkClassName }: SubMenus) => {\n  return (\n    <li className={classNames(\"side-nav-item\", className)}>\n      <MenuItemLink item={item} className={linkClassName} />\n    </li>\n  );\n};\n\nconst MenuItemLink = ({ item, className }: SubMenus) => {\n  return (\n    <Link\n      to={item.url!}\n      target={item.target}\n      className={classNames(\"side-nav-link-ref\", className)}\n      data-menu-key={item.key}\n    >\n      {item.icon && <FeatherIcon icon={item.icon} />}\n      {item.badge && (\n        <span className={`badge bg-${item.badge.variant} float-end`}>\n          {item.badge.text}\n        </span>\n      )}\n      <span> {item.label} </span>\n    </Link>\n  );\n};\n\n/**\n * Renders the application menu\n */\ninterface AppMenuProps {\n  menuItems: MenuItemTypes[];\n}\n\nconst AppMenu = ({ menuItems }: AppMenuProps) => {\n  let location = useLocation();\n\n  const menuRef: any = useRef(null);\n\n  const [activeMenuItems, setActiveMenuItems] = useState<Array<string>>([]);\n\n  /*\n   * toggle the menus\n   */\n  const toggleMenu = (menuItem: MenuItemTypes, show: boolean) => {\n    if (show)\n      setActiveMenuItems([\n        menuItem[\"key\"],\n        ...findAllParent(menuItems, menuItem),\n      ]);\n  };\n\n  /**\n   * activate the menuitems\n   */\n  const activeMenu = useCallback(() => {\n    const div = document.getElementById(\"side-menu\");\n    let matchingMenuItem = null;\n\n    if (div) {\n      let items: any = div.getElementsByClassName(\"side-nav-link-ref\");\n      for (let i = 0; i < items.length; ++i) {\n        let trimmedURL = location?.pathname?.replaceAll(process.env.PUBLIC_URL, \"\");\n        if (trimmedURL === items[i]?.pathname?.replaceAll(process.env.PUBLIC_URL, \"\")) {\n          matchingMenuItem = items[i];\n          break;\n        }\n      }\n\n      if (matchingMenuItem) {\n        const mid = matchingMenuItem.getAttribute(\"data-menu-key\");\n        const activeMt = findMenuItem(menuItems, mid);\n        if (activeMt) {\n          setActiveMenuItems([\n            activeMt[\"key\"],\n            ...findAllParent(menuItems, activeMt),\n          ]);\n        }\n      }\n    }\n  }, [location, menuItems]);\n\n  useEffect(() => {\n    activeMenu();\n  }, [activeMenu]);\n\n  return (\n    <>\n      <ul className=\"side-menu\" ref={menuRef} id=\"side-menu\">\n        {(menuItems || []).map((item, idx) => {\n          return (\n            <React.Fragment key={idx}>\n              {item.isTitle ? (\n                <li\n                  className={classNames(\"menu-title\", {\n                    \"mt-2\": idx !== 0,\n                  })}\n                >\n                  {item.label}\n                </li>\n              ) : (\n                <>\n                  {item.children ? (\n                    <MenuItemWithChildren\n                      item={item}\n                      toggleMenu={toggleMenu}\n                      subMenuClassNames=\"nav-second-level\"\n                      activeMenuItems={activeMenuItems}\n                    />\n                  ) : (\n                    <MenuItem\n                      item={item}\n                      className={\n                        activeMenuItems!.includes(item.key)\n                          ? \"menuitem-active\"\n                          : \"\"\n                      }\n                    />\n                  )}\n                </>\n              )}\n            </React.Fragment>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default AppMenu;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport FeatherIcon from \"feather-icons-react\";\n\nimport { getMenuItems } from \"../helpers/menu\";\n\n// components\nimport Scrollbar from \"../components/Scrollbar\";\n\nimport AppMenu from \"./Menu\";\n\n// images\nimport profileImg from \"../assets/images/users/avatar-1.jpg\";\n\n/* user box */\nconst UserBox = () => {\n  // get the profilemenu\n  const ProfileMenus = [\n    {\n      label: \"My Account\",\n      icon: \"user\",\n      redirectTo: \"/pages/profile\",\n    },\n    {\n      label: \"Settings\",\n      icon: \"settings\",\n      redirectTo: \"/\",\n    },\n    {\n      label: \"Support\",\n      icon: \"help-circle\",\n      redirectTo: \"/\",\n    },\n    {\n      label: \"Lock Screen\",\n      icon: \"lock\",\n      redirectTo: \"/auth/lock-screen\",\n    },\n    {\n      label: \"Logout\",\n      icon: \"log-out\",\n      redirectTo: \"/auth/logout\",\n    },\n  ];\n\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n  /*\n   * toggle dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return (\n    <div className=\"user-box text-center\">\n      <img\n        src={profileImg}\n        alt=\"\"\n        title=\"Mat Helme\"\n        className=\"rounded-circle avatar-md\"\n      />\n      <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n        <Dropdown.Toggle\n          id=\"dropdown-notification\"\n          as=\"a\"\n          onClick={toggleDropdown}\n          className=\"cursor-pointer text-dark h5 mt-2 mb-1 d-block\"\n        >\n          Nik Patel\n        </Dropdown.Toggle>\n        <Dropdown.Menu className=\"user-pro-dropdown m-0\">\n          {/* <div onClick={toggleDropdown}> */}\n          {(ProfileMenus || []).map((item, index) => {\n            return (\n              <React.Fragment key={index + \"-profile-menu\"}>\n                {index === ProfileMenus.length - 1 && (\n                  <div className=\"dropdown-divider\"></div>\n                )}\n                <Link\n                  to={item.redirectTo}\n                  className=\"dropdown-item notify-item\"\n                >\n                  <FeatherIcon\n                    icon={item.icon}\n                    className=\"icon-dual icon-xs me-1\"\n                  />\n                  <span>{item.label}</span>\n                </Link>\n              </React.Fragment>\n            );\n          })}\n          {/* </div> */}\n        </Dropdown.Menu>\n      </Dropdown>\n      <p className=\"text-muted\">Admin Head</p>\n    </div>\n  );\n};\n\n/* sidebar content */\nconst SideBarContent = () => {\n  return (\n    <>\n      <UserBox />\n\n      <div id=\"sidebar-menu\">\n        <AppMenu menuItems={getMenuItems()} />\n      </div>\n\n      <div className=\"clearfix\" />\n    </>\n  );\n};\n\ninterface LeftSidebarProps {\n  isCondensed: boolean;\n}\n\nconst LeftSidebar = ({ isCondensed }: LeftSidebarProps) => {\n  const menuNodeRef: any = useRef(null);\n\n  /**\n   * Handle the click anywhere in doc\n   */\n  const handleOtherClick = (e: any) => {\n    if (\n      menuNodeRef &&\n      menuNodeRef.current &&\n      menuNodeRef.current.contains(e.target)\n    )\n      return;\n    // else hide the menubar\n    if (document.body) {\n      document.body.classList.remove(\"sidebar-enable\");\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleOtherClick, false);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOtherClick, false);\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div className=\"left-side-menu\" ref={menuNodeRef}>\n        {!isCondensed && (\n          <Scrollbar\n            style={{ maxHeight: \"100%\" }}\n            timeout={500}\n            scrollbarMaxSize={320}\n          >\n            <SideBarContent />\n          </Scrollbar>\n        )}\n        {isCondensed && <SideBarContent />}\n      </div>\n    </React.Fragment>\n  );\n};\n\nLeftSidebar.defaultProps = {\n  isCondensed: false,\n};\n\nexport default LeftSidebar;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;"],"names":["_ref","className","style","children","otherProps","_objectWithoutProperties","_excluded","_jsx","SimpleBar","_objectSpread","MenuItemWithChildren","item","linkClassName","subMenuClassNames","activeMenuItems","toggleMenu","_useState","useState","includes","key","_useState2","_slicedToArray","open","setOpen","useEffect","_jsxs","classNames","Link","to","onClick","e","preventDefault","status","icon","FeatherIcon","badge","concat","variant","text","label","Collapse","in","map","child","i","React","_Fragment","MenuItem","_ref2","MenuItemLink","_ref3","url","target","_ref4","menuItems","location","useLocation","menuRef","useRef","_useState3","_useState4","setActiveMenuItems","menuItem","show","_toConsumableArray","findAllParent","activeMenu","useCallback","div","document","getElementById","matchingMenuItem","items","getElementsByClassName","length","_location$pathname","_items$i","_items$i$pathname","pathname","replaceAll","process","mid","getAttribute","activeMt","findMenuItem","ref","id","idx","isTitle","UserBox","ProfileMenus","redirectTo","dropdownOpen","setDropdownOpen","toggleDropdown","src","profileImg","alt","title","Dropdown","onToggle","as","index","SideBarContent","AppMenu","getMenuItems","LeftSidebar","isCondensed","menuNodeRef","handleOtherClick","current","contains","body","classList","remove","addEventListener","removeEventListener","Scrollbar","maxHeight","timeout","scrollbarMaxSize","defaultProps","Button","bsPrefix","size","active","props","prefix","useBootstrapPrefix","_useButtonProps","useButtonProps","tagName","_useButtonProps2","buttonProps","Component","href","disabled","displayName","context"],"sourceRoot":""}