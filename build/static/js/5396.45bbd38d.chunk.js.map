{"version":3,"file":"static/js/5396.45bbd38d.chunk.js","mappings":"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","sources":["hooks/useViewPort.ts","layouts/Horizontal/Menu.tsx","layouts/Horizontal/Navbar.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useViewport = () => {\n  const [width, setWidth] = useState(window.innerWidth);\n  const [height, setHeight] = useState(window.innerHeight);\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      setWidth(window.innerWidth);\n      setHeight(window.innerHeight);\n    };\n\n    window.addEventListener(\"resize\", handleWindowResize);\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []);\n  return { width, height };\n};\n\nexport { useViewport };\n","import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport FeatherIcon from \"feather-icons-react\";\n\n// helpers\nimport { findAllParent, findMenuItem } from \"../../helpers/menu\";\n\n// constants\nimport { MenuItemTypes } from \"../../constants/menu\";\n\n// custom hook\nimport { useViewport } from \"../../hooks/useViewPort\";\n\ninterface MenuItems {\n  item: MenuItemTypes;\n  tag?: string;\n  linkClassName?: string;\n  className?: string;\n  subMenuClassNames?: string;\n  activeMenuItems?: string[];\n  toggleMenu?: (item: any, status: boolean) => void;\n}\n\nconst MenuItemWithChildren = ({\n  item,\n  tag,\n  linkClassName,\n  className,\n  subMenuClassNames,\n  activeMenuItems,\n  toggleMenu,\n}: MenuItems) => {\n  const Tag: any = tag;\n  const { width } = useViewport();\n\n  const [open, setOpen] = useState<boolean>(\n    activeMenuItems!.includes(item.key)\n  );\n\n  const showMenu = width <= 768 && open;\n\n  useEffect(() => {\n    setOpen(activeMenuItems!.includes(item.key));\n  }, [activeMenuItems, item]);\n\n  /**\n   * toggles the menu\n   */\n  const toggleMenuItem = (e: any) => {\n    e.preventDefault();\n    const status = !open;\n    setOpen(status);\n    if (toggleMenu) toggleMenu(item, status);\n    return false;\n  };\n\n  return (\n    <Tag\n      className={classNames(\n        \"dropdown\",\n        className,\n        activeMenuItems!.includes(item.key) ? \"active\" : \"\"\n      )}\n    >\n      <Link\n        to=\"/#\"\n        onClick={toggleMenuItem}\n        data-menu-key={item.key}\n        className={classNames(\"dropdown-toggle\", \"arrow-none\", linkClassName, {\n          active: activeMenuItems!.includes(item.key),\n        })}\n        id={item.key}\n        role=\"button\"\n        data-bs-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded={open}\n      >\n        {item.icon && (\n          <FeatherIcon icon={item.icon} className=\"hori-icon me-1\" />\n        )}\n        <span> {item.label} </span>\n        <div className=\"arrow-down\"></div>\n      </Link>\n\n      {item.children && (\n        <div\n          className={classNames(subMenuClassNames, { show: showMenu })}\n          aria-labelledby={item.key}\n        >\n          {(item.children || []).map((child, i) => {\n            return (\n              <React.Fragment key={i}>\n                {child.children ? (\n                  <>\n                    {/* parent */}\n                    <MenuItemWithChildren\n                      item={child}\n                      tag=\"div\"\n                      linkClassName={classNames(\n                        \"dropdown-item\",\n                        activeMenuItems!.includes(child.key) ? \"active\" : \"\"\n                      )}\n                      activeMenuItems={activeMenuItems}\n                      className=\"\"\n                      subMenuClassNames=\"dropdown-menu\"\n                      toggleMenu={toggleMenu}\n                    />\n                  </>\n                ) : (\n                  <>\n                    {/* child */}\n                    <MenuItemLink\n                      item={child}\n                      className={classNames(\"dropdown-item\", {\n                        active: activeMenuItems!.includes(child.key),\n                      })}\n                    />\n                  </>\n                )}\n              </React.Fragment>\n            );\n          })}\n        </div>\n      )}\n    </Tag>\n  );\n};\n\nconst MenuItem = ({ item, className, linkClassName }: MenuItems) => {\n  return (\n    <li className={classNames(\"nav-item\", className)}>\n      <MenuItemLink item={item} className={linkClassName} />\n    </li>\n  );\n};\n\nconst MenuItemLink = ({ item, className }: MenuItems) => {\n  return (\n    <Link\n      to={item.url!}\n      target={item.target}\n      className={classNames(className)}\n      data-menu-key={item.key}\n    >\n      <span> {item.label} </span>\n    </Link>\n  );\n};\n\n/**\n * Renders the application menu\n */\n\ninterface AppMenuProps {\n  menuItems: MenuItemTypes[];\n}\n\nconst AppMenu = ({ menuItems }: AppMenuProps) => {\n  let location = useLocation();\n  const menuRef = useRef(null);\n\n  const [topnavMenuItems] = useState<MenuItemTypes[]>(menuItems);\n  const [activeMenuItems, setActiveMenuItems] = useState<string[]>([]);\n\n  /*\n   * toggle the menus\n   */\n  const toggleMenu = (menuItem: MenuItemTypes, show: boolean) => {\n    if (show)\n      setActiveMenuItems([\n        menuItem[\"key\"],\n        ...findAllParent(topnavMenuItems, menuItem),\n      ]);\n  };\n\n  /**\n   * activate the menuitems\n   */\n  const activeMenu = useCallback(() => {\n    const div = document.getElementById(\"main-side-menu\");\n    let matchingMenuItem = null;\n\n    if (div) {\n      let items: any = div.getElementsByTagName(\"a\");\n      for (let i: number = 0; i < items.length; ++i) {\n        let trimmedURL = location?.pathname?.replaceAll(process.env.PUBLIC_URL, \"\");\n        if (trimmedURL === items[i]?.pathname?.replaceAll(process.env.PUBLIC_URL, \"\")) {\n          matchingMenuItem = items[i];\n          break;\n        }\n      }\n\n      if (matchingMenuItem) {\n        const mid = matchingMenuItem.getAttribute(\"data-menu-key\");\n        const activeMt = findMenuItem(topnavMenuItems, mid);\n        if (activeMt) {\n          setActiveMenuItems([\n            activeMt[\"key\"],\n            ...findAllParent(topnavMenuItems, activeMt),\n          ]);\n        }\n      }\n    }\n  }, [location.pathname, topnavMenuItems]);\n\n  useEffect(() => {\n    if (topnavMenuItems && topnavMenuItems.length > 0) activeMenu();\n  }, [activeMenu, topnavMenuItems]);\n\n  return (\n    <>\n      <ul className=\"navbar-nav\" ref={menuRef} id=\"main-side-menu\">\n        {(topnavMenuItems || []).map((item, idx) => {\n          return (\n            <React.Fragment key={idx}>\n              {item.children ? (\n                <MenuItemWithChildren\n                  item={item}\n                  tag=\"li\"\n                  className=\"nav-item\"\n                  subMenuClassNames=\"dropdown-menu\"\n                  activeMenuItems={activeMenuItems}\n                  linkClassName=\"nav-link\"\n                  toggleMenu={toggleMenu}\n                />\n              ) : (\n                <MenuItem\n                  item={item}\n                  linkClassName={classNames(\"nav-link\", \"dropdown-toggle\", {\n                    active: activeMenuItems.includes(item.key),\n                  })}\n                />\n              )}\n            </React.Fragment>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default AppMenu;\n","import React from \"react\";\nimport { Collapse } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\n// helpers\nimport { getHorizontalMenuItems } from \"../../helpers/menu\";\n\n// components\nimport AppMenu from \"./Menu\";\n\ninterface NavbarProps {\n  isMenuOpened?: boolean;\n}\n\nconst Navbar = ({ isMenuOpened }: NavbarProps) => {\n  // change the inputTheme value to light for creative theme\n  const inputTheme = \"light\";\n\n  return (\n    <div className=\"topnav\">\n      <div className=\"container-fluid\">\n        <nav\n          className={classNames(\n            \"navbar\",\n            \"navbar-expand-lg\",\n            \"topnav-menu\",\n            \"navbar-\" + inputTheme\n          )}\n        >\n          <Collapse in={isMenuOpened} className=\"navbar-collapse\">\n            <div id=\"topnav-menu-content\">\n              <AppMenu menuItems={getHorizontalMenuItems()} />\n            </div>\n          </Collapse>\n        </nav>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n"],"names":["useViewport","_useState","useState","window","innerWidth","_useState2","_slicedToArray","width","setWidth","_useState3","innerHeight","_useState4","height","setHeight","useEffect","handleWindowResize","addEventListener","removeEventListener","MenuItemWithChildren","_ref","item","tag","linkClassName","className","subMenuClassNames","activeMenuItems","toggleMenu","Tag","includes","key","open","setOpen","showMenu","_jsxs","classNames","children","Link","to","onClick","e","preventDefault","status","active","id","role","icon","_jsx","FeatherIcon","label","show","map","child","i","React","_Fragment","MenuItemLink","MenuItem","_ref2","_ref3","url","target","_ref4","menuItems","location","useLocation","menuRef","useRef","topnavMenuItems","_useState5","_useState6","setActiveMenuItems","menuItem","concat","_toConsumableArray","findAllParent","activeMenu","useCallback","div","document","getElementById","matchingMenuItem","items","getElementsByTagName","length","_location$pathname","_items$i","_items$i$pathname","pathname","replaceAll","process","mid","getAttribute","activeMt","findMenuItem","ref","idx","isMenuOpened","Collapse","in","AppMenu","getHorizontalMenuItems"],"sourceRoot":""}