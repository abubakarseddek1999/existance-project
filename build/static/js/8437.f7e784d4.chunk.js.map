{"version":3,"file":"static/js/8437.f7e784d4.chunk.js","mappings":"kLA8CA,IA7BkB,SAACA,GACjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAAAC,UACFF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAAD,UACFE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBH,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,aAAYH,SAAEH,EAAMO,SAClCN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,mBAAkBH,UAC/BE,EAAAA,EAAAA,MAACG,EAAAA,EAAU,CAACC,UAAW,CAAEH,UAAW,gBAAiBH,SAAA,EACnDF,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,KAAe,CAACE,KAAK,IAAGP,SAAC,YAExBH,EAAMW,iBAAmB,IAAIC,KAAI,SAACC,EAAMC,GACxC,OAAOD,EAAKE,QACVd,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,KAAe,CAACO,QAAM,EAAAZ,SACpBU,EAAKG,OADqBF,IAI7Bb,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,KAAe,CAAaE,KAAMG,EAAKI,KAAKd,SAC1CU,EAAKG,OADcF,EAI1B,eAOd,C,sKCoKA,EApMmB,SAAHI,GAA0D,IAApDC,EAAUD,EAAVC,WAAYC,EAAeF,EAAfE,gBAIhCC,GAAkCC,EAAAA,EAAAA,UAAiBH,EAAWI,WAAUC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAjEE,EAASC,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAkCL,EAAAA,EAAAA,UAChCH,EAAWS,MAAMC,WAClBC,GAAAL,EAAAA,EAAAA,GAAAE,EAAA,GAFME,EAASC,EAAA,GAAEC,EAAYD,EAAA,IAI9BE,EAAAA,EAAAA,YAAU,WACRN,EAAaP,EAAWI,WACxBQ,EAAaZ,EAAWS,MAAMC,UAChC,GAAG,CAACV,EAAWI,UAAWJ,EAAWS,MAAMC,YAK3C,IAAMI,GAAcC,EAAAA,EAAAA,cAClB,SAACC,EAAmBC,GAClB,OAAOD,EAAaE,QAAO,SAACC,GAAS,OAAKA,GAAQf,CAAS,GAC7D,GACA,CAACA,IAMGgB,GAAkBL,EAAAA,EAAAA,cACtB,SAACI,EAAqBE,GACpB,OAAIA,EAAQ,EACHP,EAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIO,GAEnCF,EAAQ,GAAK,GAAKA,EAAQ,GAAKA,EAAQ,EAAIE,EACtC,CAAC,EAAGF,EAAQ,EAAGA,EAAOA,EAAQ,EAAGE,GAC/BF,EAAQ,GAAK,GAAKA,EAAQ,GAAKA,EAAQ,GAAKE,EAC9C,CAAC,EAAGA,EAAQ,EAAGA,EAAQ,EAAGA,EAAQ,EAAGA,GAErC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAGA,EAG7B,GACA,CAACP,IAQGQ,EAAa,SAACH,GAGlB,GAAIA,IAFeT,EAAY,EAE/B,CAIA,IAAMM,EAAeI,EAAgBD,EAAMf,GAC3CmB,EAAgBT,EAAYE,EAAcZ,IAE1CJ,EAAWwB,SAASL,EAAO,EAL3B,CAMF,GAEAN,EAAAA,EAAAA,YAAU,WACR,IAAMG,EAAeI,EAAgB,KAAMhB,GAC3CmB,EAAgBP,EAClB,GAAG,CAACZ,EAAWgB,IAEf,IAAAK,GAAwCtB,EAAAA,EAAAA,UACtCiB,EAAgB,KAAMhB,IACvBsB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAFMT,EAAYU,EAAA,GAAEH,EAAeG,EAAA,GAG9BC,EAAqBjB,EAAY,EAEvC,OACE5B,EAAAA,EAAAA,KAAA8C,EAAAA,SAAA,CAAA5C,UACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gDAA+CH,SAAA,CAC3DiB,EAAgB4B,OAAS,IACxB3C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBH,SAAA,EAClCF,EAAAA,EAAAA,KAAA,SAAOK,UAAU,OAAMH,SAAC,eACxBF,EAAAA,EAAAA,KAAA,UACEgD,MAAO9B,EAAWS,MAAMsB,SACxBC,SAAU,SAACC,GACTjC,EAAWkC,YAAYC,OAAOF,EAAEG,OAAON,OACzC,EACA3C,UAAU,oCAAmCH,UAE3CiB,GAAmB,IAAIR,KAAI,SAACsC,EAAUpC,GACtC,OACEb,EAAAA,EAAAA,KAAA,UAAoBgD,MAAOC,EAASD,MAAM9C,SACvC+C,EAASM,MADC1C,EAIjB,UAKNT,EAAAA,EAAAA,MAAA,QAAMC,UAAU,OAAMH,SAAA,CAAC,OAChB,KACLE,EAAAA,EAAAA,MAAA,UAAAF,SAAA,CACG0B,EAAY,EAAE,OAAKV,EAAWsC,YAAYT,UACnC,QAGZ3C,EAAAA,EAAAA,MAAA,QAAMC,UAAU,2EAA0EH,SAAA,EACxFF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,mBACPF,EAAAA,EAAAA,KAAA,SACEyD,KAAK,SACLT,MAAOpB,EAAY,EACnB8B,IAAI,IACJR,SAAU,SAACC,GACT,IAAMd,EAAOc,EAAEG,OAAON,MAAQK,OAAOF,EAAEG,OAAON,OAAS,EAAI,EAC3D9B,EAAWwB,SAASL,GACpBP,EAAaZ,EAAWS,MAAMC,UAChC,EACAvB,UAAU,8CAIdD,EAAAA,EAAAA,MAAA,MAAIC,UAAU,sDAAqDH,SAAA,EACjEF,EAAAA,EAAAA,KAAA,MAEEK,UAAWsD,IAAW,YAAa,kBAAmB,WAAY,CAChEC,SAAyB,IAAff,IAEZgB,QAAS,WACY,IAAfhB,GACJL,EAAWK,EAAa,EAC1B,EAAE3C,UAEFF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CAACC,GAAG,IAAI1D,UAAU,YAAWH,UAChCF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,0BAVX,aAaJ6B,GAAgB,IAAIvB,KAAI,SAAC0B,EAAMxB,EAAOmD,GACtC,OAAOA,EAAMnD,EAAQ,GAAK,EAAIwB,GAC5BjC,EAAAA,EAAAA,MAAC6D,EAAAA,SAAc,CAAA/D,SAAA,EACbF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,8CAA6CH,UACzDF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CAACC,GAAG,IAAI1D,UAAU,YAAWH,SAAC,WAIrCF,EAAAA,EAAAA,KAAA,MACEK,UAAWsD,IACT,YACA,SACA,oBACA,CACE7C,OAAQ+B,IAAeR,IAG3BwB,QAAS,SAACV,GAAM,OAAKX,EAAWH,EAAK,EAACnC,UAEtCF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CAACC,GAAG,IAAI1D,UAAU,YAAWH,SAC/BmC,QAlBcA,IAuBrBrC,EAAAA,EAAAA,KAAA,MAEEK,UAAWsD,IACT,YACA,SACA,oBACA,CACE7C,OAAQ+B,IAAeR,IAG3BwB,QAAS,SAACV,GAAM,OAAKX,EAAWH,EAAK,EAACnC,UAEtCF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CAACC,GAAG,IAAI1D,UAAU,YAAWH,SAC/BmC,KAZEA,EAgBX,KACArC,EAAAA,EAAAA,KAAA,MAEEK,UAAWsD,IAAW,YAAa,kBAAmB,OAAQ,CAC5DC,SAAUf,IAAe3B,EAAWI,YAEtCuC,QAAS,WACHhB,IAAe3B,EAAWI,WAC9BkB,EAAWK,EAAa,EAC1B,EAAE3C,UAEFF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CAACC,GAAG,IAAI1D,UAAU,YAAWH,UAChCF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,2BAVX,mBAiBhB,E,oBCvLM6D,EAAe,SAAHjD,GAKQ,IAJxBkD,EAAqBlD,EAArBkD,sBACAC,EAAYnD,EAAZmD,aACAC,EAAepD,EAAfoD,gBACAC,EAAcrD,EAAdqD,eAEMC,EAAQJ,EAAsBpB,OACpC3B,GAA0BC,EAAAA,EAAAA,UAAc+C,GAAa7C,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA9C4B,EAAKzB,EAAA,GAAEiD,EAAQjD,EAAA,GAChB2B,GAAWuB,EAAAA,EAAAA,mBAAiB,SAACzB,GACjCqB,EAAgBrB,QAAS0B,EAC3B,GAAG,KAEH,OACE1E,EAAAA,EAAAA,KAAA,OAAKK,UAAWsD,IAAWW,GAAgBpE,UACzCE,EAAAA,EAAAA,MAAA,QAAMC,UAAU,4BAA2BH,SAAA,CAAC,WACjC,KACTF,EAAAA,EAAAA,KAAA,SACEyD,KAAK,SACLT,MAAOA,GAAS,GAChBE,SAAU,SAACC,GACTqB,EAASrB,EAAEG,OAAON,OAClBE,EAASC,EAAEG,OAAON,MACpB,EACA2B,YAAW,GAAAC,OAAKL,EAAK,eACrBlE,UAAU,iCAKpB,EAOMwE,GAAwBC,EAAAA,EAAAA,aAG5B,SAAAC,EAA6BC,GAAS,IAAnCC,EAAaF,EAAbE,cAAkBC,GAAIC,EAAAA,EAAAA,GAAAJ,EAAAK,GACnBC,GAAaC,EAAAA,EAAAA,UACbC,EAAmBP,GAAOK,EAMhC,OAJAtD,EAAAA,EAAAA,YAAU,WACRwD,EAAYC,QAAQP,cAAgBA,CACtC,GAAG,CAACM,EAAaN,KAGfjF,EAAAA,EAAAA,KAAA8C,EAAAA,SAAA,CAAA5C,UACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYH,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAAyF,EAAAA,EAAAA,GAAA,CACEhC,KAAK,WACLpD,UAAU,mBACV2E,IAAKO,GACDL,KAENlF,EAAAA,EAAAA,KAAA,SAAO0F,QAAQ,mBAAmBrF,UAAU,yBAIpD,IAuMA,EA7Kc,SAACN,GACb,IAAM4F,EAAe5F,EAAoB,eAAK,EACxC6F,EAAa7F,EAAkB,aAAK,EACpC8F,EAAa9F,EAAkB,aAAK,EACpC+F,EAAe/F,EAAoB,eAAK,EACxCgG,EAAehG,EAAoB,eAAK,EACxCoB,EAAkBpB,EAAuB,iBAAK,GAEhDiG,EAAkB,CAAC,EAEnBL,IACFK,EAA4B,gBAAIC,EAAAA,iBAE9BL,IACFI,EAAsB,UAAIE,EAAAA,WAExBH,IACFC,EAAwB,YAAIG,EAAAA,aAE1BN,IACFG,EAA0B,cAAII,EAAAA,eAE5BN,IACFE,EAAyB,aAAIK,EAAAA,cAG/B,IAAMC,GAAYC,EAAAA,EAAAA,UAChB,CACEC,QAASzG,EAAe,QACxB0G,KAAM1G,EAAY,KAClB2G,aAAc,CAAEzD,SAAUlD,EAAgB,UAAK,KAEjDiG,EAAWW,eAAe,oBACxBX,EAA4B,gBAC9BA,EAAWW,eAAe,cAAgBX,EAAsB,UAChEA,EAAWW,eAAe,gBAAkBX,EAAwB,YACpEA,EAAWW,eAAe,kBAAoBX,EAA0B,cACxEA,EAAWW,eAAe,iBAAmBX,EAAyB,cACtE,SAACY,GACCd,GACEc,EAAMC,eAAeC,MAAK,SAACN,GAAY,OAErC,CACEO,GAAI,YAGJC,OAAQ,SAAAC,GAAA,IAAGC,EAAiCD,EAAjCC,kCAAiC,OAC1ClH,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAC6E,GAAqBY,EAAAA,EAAAA,GAAA,GAChByB,OAEF,EAIRC,KAAM,SAAAC,GAAA,IAAGC,EAAGD,EAAHC,IAAG,OACVrH,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAC6E,GAAqBY,EAAAA,EAAAA,GAAA,GAAK4B,EAAIC,+BAC3B,IAET1C,QAAA2C,EAAAA,EAAAA,GACEf,GAAO,IAGdT,GACEa,EAAMC,eAAeC,MAAK,SAACN,GAAY,OAErC,CAEEO,GAAI,WACJC,OAAQ,SAAAQ,GAAA,IACNC,EAA6BD,EAA7BC,8BACAC,EAAiBF,EAAjBE,kBAAiB,OAEjB1H,EAAAA,EAAAA,KAAA,QAAAyF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUgC,KAA+B,IAAAvH,SACtCwH,EAAoB,IAAM,MACtB,EAETP,KAAM,SAAAQ,GAAA,IAAGN,EAAGM,EAAHN,IAAG,OAGVA,EAAIO,WACF5H,EAAAA,EAAAA,KAAA,QAAAyF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACM4B,EAAIQ,0BAA0B,CAChCC,MAAO,CAILC,YAAY,GAADnD,OAAiB,EAAZyC,EAAIW,MAAS,WAE/B,IAAA9H,SAEDmH,EAAIY,WAAa,IAAM,OAExB,IAAI,IACXrD,QAAA2C,EAAAA,EAAAA,GACEf,GAAO,GAEhB,IAGE0B,EAAOrC,EAAaS,EAAUjE,KAAOiE,EAAU4B,KAEnD,OACE9H,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAA5C,SAAA,CACGyF,IACC3F,EAAAA,EAAAA,KAACkE,EAAY,CACXC,sBAAuBmC,EAAUnC,sBACjCC,aAAckC,EAAU3E,MAAMyC,aAC9BC,gBAAiBiC,EAAUjC,gBAC3BC,eAAgBvE,EAAsB,kBAI1CC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,mBAAkBH,UAC/BE,EAAAA,EAAAA,MAAA,SAAAqF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMa,EAAU6B,iBAAe,IAC7B9H,UAAWsD,IACT,mCACA5D,EAAkB,YAClBG,SAAA,EAEFF,EAAAA,EAAAA,KAAA,SAAOK,UAAWN,EAAkB,WAAEG,UAClCoG,EAAU8B,cAAgB,IAAIzH,KAAI,SAAC0H,GAAgB,OACnDrI,EAAAA,EAAAA,KAAA,MAAAyF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ4C,EAAYC,uBAAqB,IAAApI,UACrCmI,EAAYE,SAAW,IAAI5H,KAAI,SAAC6H,GAAW,OAC3CxI,EAAAA,EAAAA,KAAA,MAAAyF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACM+C,EAAOC,eACTD,EAAOE,MAAQF,EAAOG,yBACvB,IACDtI,UAAWsD,IAAW,CACpBiF,cAAsC,IAAxBJ,EAAOK,aACrBC,aAAqC,IAAxBN,EAAOK,aACpBE,UAA0B,IAAhBP,EAAOE,OAChBxI,SAEFsI,EAAOQ,OAAO,YACZ,MAEJ,OAGThJ,EAAAA,EAAAA,KAAA,SAAAyF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWa,EAAU2C,qBAAmB,IAAA/I,UACpCgI,GAAQ,IAAIvH,KAAI,SAAC0G,EAAU6B,GAE3B,OADA5C,EAAU6C,WAAW9B,IAEnBrH,EAAAA,EAAAA,KAAA,MAAAyF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ4B,EAAI+B,eAAa,IAAAlJ,UACrBmH,EAAIgC,OAAS,IAAI1I,KAAI,SAAC2I,GACtB,OACEtJ,EAAAA,EAAAA,KAAA,MAAAyF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACM6D,EAAKC,aAAa,CACpB,CACElJ,UAAWiJ,EAAKd,OAAOnI,cAEzB,IAAAH,SAEDoJ,EAAKN,OAAO,UAGnB,MAGN,aAILnD,IACC7F,EAAAA,EAAAA,KAACwJ,EAAU,CAACtI,WAAYoF,EAAWnF,gBAAiBA,MAI5D,C,8HCpOA,EAzCqB,SAAHF,GAQqB,IALrCwI,EAAaxI,EAAbwI,cACAC,EAAQzI,EAARyI,SACAxJ,EAAQe,EAARf,SACAyJ,EAAQ1I,EAAR0I,SACAC,EAAS3I,EAAT2I,UAKMC,GAAUC,EAAAA,EAAAA,IAAqB,CAAEL,cAAAA,EAAeC,SAAAA,IAEpDK,EAIEF,EAJFE,aACAC,EAGEH,EAHFG,SACAC,EAEEJ,EAFFI,QACaC,EACXL,EADFM,UAAaD,OAGf,OACElK,EAAAA,EAAAA,KAAA,QAAM2J,SAAUI,EAAaJ,GAAWtJ,UAAWuJ,EAAWQ,YAAU,EAAAlK,SACrEmK,MAAMC,QAAQpK,GACXA,EAASS,KAAI,SAAC4J,GACZ,OAAOA,EAAMxK,OAASwK,EAAMxK,MAAMyK,KAC9BvG,EAAAA,cAAoBsG,EAAM9G,MAAIgC,EAAAA,EAAAA,GAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEvB8E,EAAMxK,OAAK,IACdiK,SAAAA,EACAS,IAAKF,EAAMxK,MAAMyK,KACjBN,OAAAA,EACAD,QAAAA,MAGJM,CACN,IACArK,GAGV,E,0mBCzBMwK,EAAe,SAAHzJ,GAWK,IAVrBwC,EAAIxC,EAAJwC,KACA+G,EAAIvJ,EAAJuJ,KACA7F,EAAW1D,EAAX0D,YACAqF,EAAQ/I,EAAR+I,SACAE,EAAMjJ,EAANiJ,OACAS,EAAI1J,EAAJ0J,KACAzC,EAAIjH,EAAJiH,KACA7H,EAASY,EAATZ,UACAuK,EAAW3J,EAAX2J,YACG5E,GAAUb,EAAAA,EAAAA,GAAAlE,EAAAmE,GAEb,OACEhF,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAA5C,SAAA,EACEF,EAAAA,EAAAA,KAAC6K,EAAAA,EAAAA,SAAYpF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACXhC,KAAMA,EACNkB,YAAaA,EACb6F,KAAMA,EACNM,GAAIH,EACJ5D,GAAIyD,EACJxF,IAAK,SAAC+F,GACAH,GAAaA,EAAYG,EAC/B,EACA1K,UAAWA,EACX2K,aAAWd,IAAUA,EAAOM,KACvBR,EAAWA,EAASQ,GAAQ,CAAC,GAAC,IACnCtC,KAAMA,GACFlC,IAGLkE,GAAUA,EAAOM,IAChBxK,EAAAA,EAAAA,KAAC6K,EAAAA,EAAAA,QAAAA,SAAqB,CAACpH,KAAK,UAAUpD,UAAU,UAASH,SACtDgK,EAAOM,GAAe,UAEvB,OAGV,EAGMS,EAAa,SAAHlG,GAYO,IAXrBtB,EAAIsB,EAAJtB,KACA1C,EAAKgE,EAALhE,MACAyJ,EAAIzF,EAAJyF,KAEAR,GADWjF,EAAXJ,YACQI,EAARiF,UACAE,EAAMnF,EAANmF,OAGA7J,GAFI0E,EAAJ4F,KACI5F,EAAJmD,KACSnD,EAAT1E,WACAuK,EAAW7F,EAAX6F,YACG5E,GAAUb,EAAAA,EAAAA,GAAAJ,EAAAmG,GAEb,OACE9K,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAA5C,SAAA,EACEF,EAAAA,EAAAA,KAAC6K,EAAAA,EAAAA,OAAUpF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACThC,KAAMA,EACN1C,MAAOA,EACPyJ,KAAMA,EACNzD,GAAIyD,EACJxF,IAAK,SAAC+F,GACAH,GAAaA,EAAYG,EAC/B,EACA1K,UAAWA,EACX2K,aAAWd,IAAUA,EAAOM,KACvBR,EAAWA,EAASQ,GAAQ,CAAC,GAC9BxE,IAGLkE,GAAUA,EAAOM,IAChBxK,EAAAA,EAAAA,KAAC6K,EAAAA,EAAAA,QAAAA,SAAqB,CAACpH,KAAK,UAASvD,SAClCgK,EAAOM,GAAe,UAEvB,OAGV,EAGMW,EAAc,SAAHlE,GAYM,IAXrBxD,EAAIwD,EAAJxD,KACA1C,EAAKkG,EAALlG,MACAyJ,EAAIvD,EAAJuD,KAEAR,GADW/C,EAAXtC,YACQsC,EAAR+C,UACAE,EAAMjD,EAANiD,OAGA7J,GAFI4G,EAAJ0D,KACI1D,EAAJiB,KACSjB,EAAT5G,WACAuK,EAAW3D,EAAX2D,YACG5E,GAAUb,EAAAA,EAAAA,GAAA8B,EAAAmE,GAEb,OACEhL,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAA5C,SAAA,EACEF,EAAAA,EAAAA,KAAC6K,EAAAA,EAAAA,QAAWpF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACVhC,KAAMA,EACN1C,MAAOA,EACPyJ,KAAMA,EACNzD,GAAIyD,EACJxF,IAAK,SAAC+F,GACAH,GAAaA,EAAYG,EAC/B,EACA1K,UAAWA,EACX2K,aAAWd,IAAUA,EAAOM,KACvBR,EAAWA,EAASQ,GAAQ,CAAC,GAC9BxE,IAGLkE,GAAUA,EAAOM,IAChBxK,EAAAA,EAAAA,KAAC6K,EAAAA,EAAAA,QAAAA,SAAqB,CAACpH,KAAK,UAASvD,SAClCgK,EAAOM,GAAe,UAEvB,OAGV,EAGMa,EAAiB,SAAHjE,GAaG,IAZrBkE,EAASlE,EAATkE,UACA7H,EAAI2D,EAAJ3D,KACA+G,EAAIpD,EAAJoD,KACA7F,EAAWyC,EAAXzC,YACAgG,EAAIvD,EAAJuD,KACAX,EAAQ5C,EAAR4C,SACAE,EAAM9C,EAAN8C,OACAhC,EAAId,EAAJc,KACA7H,EAAS+G,EAAT/G,UACAkL,EAAanE,EAAbmE,cACAX,EAAWxD,EAAXwD,YACG5E,GAAUb,EAAAA,EAAAA,GAAAiC,EAAAoE,GAEb,OACEpL,EAAAA,EAAAA,MAACqL,EAAAA,EAAU,CAAAvL,SAAA,EACTF,EAAAA,EAAAA,KAACyL,EAAAA,EAAAA,KAAe,CAACpL,UAAWkL,EAAcrL,SAAEoL,IAClC,WAAT7H,GACCzD,EAAAA,EAAAA,KAACmL,GAAW1F,EAAAA,EAAAA,GAAA,CACVhC,KAAMA,EACN+G,KAAMA,EACN7F,YAAaA,EACbiG,YAAaA,EACbD,KAAMA,EACNT,OAAQA,EACRF,SAAUA,EACV3J,UAAWA,EACX6H,KAAMA,GACFlC,KAGNhG,EAAAA,EAAAA,KAAC0K,GAAYjF,EAAAA,EAAAA,GAAA,CACXhC,KAAMA,EACN+G,KAAMA,EACN7F,YAAaA,EACbiG,YAAaA,EACbD,KAAMA,EACNT,OAAQA,EACRF,SAAUA,EACV3J,UAAWA,EACX6H,KAAMA,GACFlC,MAKd,EAsIA,EApIkB,SAAHwB,GAiBQ,IAhBrB8D,EAAS9D,EAAT8D,UACAvK,EAAKyG,EAALzG,MACA0C,EAAI+D,EAAJ/D,KACA+G,EAAIhD,EAAJgD,KACA7F,EAAW6C,EAAX7C,YACAqF,EAAQxC,EAARwC,SACAE,EAAM1C,EAAN0C,OAEA7J,GADOmH,EAAPyC,QACSzC,EAATnH,WACAqL,EAAclE,EAAdkE,eACAC,EAAcnE,EAAdmE,eACAJ,EAAa/D,EAAb+D,cACAX,EAAWpD,EAAXoD,YACAgB,EAAMpE,EAANoE,OACA1D,EAAIV,EAAJU,KACGlC,GAAUb,EAAAA,EAAAA,GAAAqC,EAAAqE,GAGPlB,EACK,aAATlH,EAAsB,WAAsB,WAATA,EAAoB,SAAW,QAEpE,OACEzD,EAAAA,EAAAA,KAAA8C,EAAAA,SAAA,CAAA5C,SACY,WAATuD,GACCzD,EAAAA,EAAAA,KAAA,SAAAyF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEhC,KAAMA,EACN+G,KAAMA,GACDR,EAAWA,EAASQ,GAAQ,CAAC,GAC9BxE,KAGNhG,EAAAA,EAAAA,KAAA8C,EAAAA,SAAA,CAAA5C,SACY,aAATuD,GAAgC,UAATA,GACtBzD,EAAAA,EAAAA,KAAC6K,EAAAA,EAAAA,MAAU,CAACxK,UAAWsL,EAAezL,UACpCF,EAAAA,EAAAA,KAACiL,GAAUxF,EAAAA,EAAAA,GAAA,CACThC,KAAMA,EACN1C,MAAOA,EACPyJ,KAAMA,EACN7F,YAAaA,EACbiG,YAAaA,EACbV,OAAQA,EACRF,SAAUA,EACVW,KAAMA,EACNtK,UAAWA,EACX6H,KAAMA,GACFlC,MAGG,WAATvC,GACFrD,EAAAA,EAAAA,MAACyK,EAAAA,EAAAA,MAAU,CAACxK,UAAWsL,EAAezL,SAAA,CACnCa,GACCX,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAA5C,SAAA,EACEF,EAAAA,EAAAA,KAAC6K,EAAAA,EAAAA,MAAU,CAACxK,UAAWqL,EAAexL,SAAEa,IACvC6K,GAAUA,KAEX,KACHN,GACCtL,EAAAA,EAAAA,KAACqL,GAAc5F,EAAAA,EAAAA,GAAA,CACbhC,KAAMA,EACN6H,UAAWA,EACXd,KAAMA,EACNG,KAAMA,EACNY,cAAeA,EACf5G,YAAaA,EACbiG,YAAaA,EACbV,OAAQA,EACRF,SAAUA,EACV3J,UAAWA,EACX6H,KAAMA,GACFlC,KAGNhG,EAAAA,EAAAA,KAACmL,GAAW1F,EAAAA,EAAAA,GAAA,CACVhC,KAAMA,EACN+G,KAAMA,EACN7F,YAAaA,EACbiG,YAAaA,EACbV,OAAQA,EACRF,SAAUA,EACVW,KAAMA,EACNtK,UAAWA,EACX6H,KAAMA,GACFlC,QAKV5F,EAAAA,EAAAA,MAACyK,EAAAA,EAAAA,MAAU,CAACxK,UAAWsL,EAAezL,SAAA,CACnCa,GACCX,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAA5C,SAAA,EACEF,EAAAA,EAAAA,KAAC6K,EAAAA,EAAAA,MAAU,CAACxK,UAAWqL,EAAexL,SAAEa,IACvC6K,GAAUA,KAEX,KACHN,GACCtL,EAAAA,EAAAA,KAACqL,GAAc5F,EAAAA,EAAAA,GAAA,CACbhC,KAAMA,EACN6H,UAAWA,EACXd,KAAMA,EACNG,KAAMA,EACNY,cAAeA,EACf5G,YAAaA,EACbiG,YAAaA,EACbV,OAAQA,EACRF,SAAUA,EACV3J,UAAWA,EACX6H,KAAMA,GACFlC,KAGNhG,EAAAA,EAAAA,KAAC0K,GAAYjF,EAAAA,EAAAA,GAAA,CACXhC,KAAMA,EACN+G,KAAMA,EACN7F,YAAaA,EACbiG,YAAaA,EACbV,OAAQA,EACRF,SAAUA,EACVW,KAAMA,EACNtK,UAAWA,EACX6H,KAAMA,GACFlC,UAStB,C,4GClOA,UA9E8C,SAAH/E,GAAiB,IAAX6K,EAAG7K,EAAH6K,IAIvCC,GAAiBC,EAAAA,EAAAA,GACnBC,EAAAA,KAAaC,MAAM,CACfC,SAAUF,EAAAA,KAAaG,SAAS,yBAChCC,MAAOJ,EAAAA,KAAaG,SAAS,8BAC7BE,SAAUL,EAAAA,KAAaG,SAAS,yBAChCG,gBAAiBN,EAAAA,KAEZO,MAAM,CAACP,EAAAA,GAAQ,YAAa,MAAO,yBACnCG,SAAS,2BACdK,SAAUR,EAAAA,KAAWO,MAAM,EAAC,OAKpC,OACIxM,EAAAA,EAAAA,KAAA,OAAKK,UAAU,iBAAgBH,UAC3BF,EAAAA,EAAAA,KAAC0M,EAAAA,EAAI,CAAAxM,UACDF,EAAAA,EAAAA,KAAC0M,EAAAA,EAAAA,KAAS,CAAAxM,UACNE,EAAAA,EAAAA,MAACuM,EAAAA,EAAY,CACThD,SAAU,WAAQ,EAClBD,SAAUqC,EACVtC,cAAe,CAAE0C,SAAU,QAASjM,SAAA,EAEpCF,EAAAA,EAAAA,KAAC4M,EAAAA,EAAS,CACN7L,MAAO,OACP0C,KAAK,OACL+G,KAAK,WACL7F,YAAY,kBACZgH,eAAgB,UAEpB3L,EAAAA,EAAAA,KAAC4M,EAAAA,EAAS,CACN7L,MAAO,gBACP0C,KAAK,QACL+G,KAAK,QACL7F,YAAY,cACZgH,eAAgB,UAEpB3L,EAAAA,EAAAA,KAAC4M,EAAAA,EAAS,CACN7L,MAAO,SACP0C,KAAK,SACL+G,KAAK,SACL7F,YAAY,SACZgH,eAAgB,UAEpB3L,EAAAA,EAAAA,KAAC4M,EAAAA,EAAS,CACN7L,MAAO,OACP0C,KAAK,OACL+G,KAAK,OACL7F,YAAY,OACZgH,eAAgB,UAEpB3L,EAAAA,EAAAA,KAAC4M,EAAAA,EAAS,CACN7L,MAAO,WACP0C,KAAK,OACL+G,KAAK,OACLmB,eAAgB,UAGpBvL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBH,SAAA,EAC7BF,EAAAA,EAAAA,KAAC6M,EAAAA,EAAM,CAACC,QAAQ,UAAUzM,UAAU,OAAOoD,KAAK,SAAQvD,SACnD4L,KAEL9L,EAAAA,EAAAA,KAAC6M,EAAAA,EAAM,CAACC,QAAQ,YAAYrJ,KAAK,QAAOvD,SAAC,sBAUrE,C,wKCtEM6M,EAAqB,CACzB,CACEhG,GAAI,EACJyD,KAAM,WACN6B,MAAO,uBACPW,KAAM,aACNC,KAAM,qBACNC,OAAQ,IACRC,QAAS,oBACTvB,OAAQ,QAEV,CACE7E,GAAI,EACJyD,KAAM,aACN6B,MAAO,yBACPW,KAAM,aACNC,KAAM,kBACNC,OAAQ,IACRC,QAAS,oBACTvB,OAAQ,QAEV,CACE7E,GAAI,EACJyD,KAAM,gBACN6B,MAAO,4BACPW,KAAM,aACNC,KAAM,qBACNC,OAAQ,KACRC,QAAS,oBACTvB,OAAQ,QAEV,CACE7E,GAAI,EACJyD,KAAM,YACN6B,MAAO,wBACPW,KAAM,aACNC,KAAM,iBACNC,OAAQ,KACRC,QAAS,oBACTvB,OAAQ,QAEV,CACE7E,GAAI,EACJyD,KAAM,cACN6B,MAAO,0BACPW,KAAM,aACNC,KAAM,qBACNC,OAAQ,IACRC,QAAS,oBACTvB,OAAQ,QAEV,CACE7E,GAAI,EACJyD,KAAM,iBACN6B,MAAO,6BACPW,KAAM,aACNC,KAAM,iBACNC,OAAQ,IACRC,QAAS,oBACTvB,OAAQ,QAEV,CACE7E,GAAI,EACJyD,KAAM,iBACN6B,MAAO,6BACPW,KAAM,aACNC,KAAM,kBACNC,OAAQ,KACRC,QAAS,oBACTvB,OAAQ,QAEV,CACE7E,GAAI,EACJyD,KAAM,eACN6B,MAAO,2BACPW,KAAM,aACNC,KAAM,iBACNC,OAAQ,IACRC,QAAS,oBACTvB,OAAQ,QAEV,CACE7E,GAAI,EACJyD,KAAM,kBACN6B,MAAO,8BACPW,KAAM,aACNC,KAAM,qBACNC,OAAQ,KACRC,QAAS,oBACTvB,OAAQ,QAEV,CACE7E,GAAI,GACJyD,KAAM,eACN6B,MAAO,2BACPW,KAAM,aACNC,KAAM,mBACNC,OAAQ,IACRC,QAAS,qBACTvB,OAAQ,QAEV,CACE7E,GAAI,GACJyD,KAAM,eACN6B,MAAO,2BACPW,KAAM,aACNC,KAAM,qBACNC,OAAQ,IACRC,QAAS,qBACTvB,OAAQ,QAEV,CACE7E,GAAI,GACJyD,KAAM,YACN6B,MAAO,wBACPW,KAAM,aACNC,KAAM,aACNC,OAAQ,KACRC,QAAS,qBACTvB,OAAQ,QAEV,CACE7E,GAAI,GACJyD,KAAM,iBACN6B,MAAO,6BACPW,KAAM,aACNC,KAAM,kBACNC,OAAQ,KACRC,QAAS,qBACTvB,OAAQ,QAEV,CACE7E,GAAI,GACJyD,KAAM,iBACN6B,MAAO,6BACPW,KAAM,aACNC,KAAM,iBACNC,OAAQ,KACRC,QAAS,qBACTvB,OAAQ,QAEV,CACE7E,GAAI,GACJyD,KAAM,gBACN6B,MAAO,4BACPW,KAAM,aACNC,KAAM,iBACNC,OAAQ,KACRC,QAAS,qBACTvB,OAAQ,QAEV,CACE7E,GAAI,GACJyD,KAAM,oBACN6B,MAAO,gCACPW,KAAM,aACNC,KAAM,qBACNC,OAAQ,IACRC,QAAS,qBACTvB,OAAQ,QAEV,CACE7E,GAAI,GACJyD,KAAM,kBACN6B,MAAO,8BACPW,KAAM,aACNC,KAAM,iBACNC,OAAQ,IACRC,QAAS,qBACTvB,OAAQ,QAEV,CACE7E,GAAI,GACJyD,KAAM,iBACN6B,MAAO,6BACPW,KAAM,aACNC,KAAM,oBACNC,OAAQ,KACRC,QAAS,qBACTvB,OAAQ,QAEV,CACE7E,GAAI,GACJyD,KAAM,cACN6B,MAAO,0BACPW,KAAM,aACNC,KAAM,mBACNC,OAAQ,KACRC,QAAS,qBACTvB,OAAQ,QAEV,CACE7E,GAAI,GACJyD,KAAM,iBACN6B,MAAO,6BACPW,KAAM,aACNC,KAAM,uBACNC,OAAQ,IACRC,QAAS,qBACTvB,OAAQ,S,2CC9MNzK,EAAkB,CACpB,CACIoC,KAAM,IACNP,MAAO,GAEX,CACIO,KAAM,KACNP,MAAO,IAEX,CACIO,KAAM,KACNP,MAAO,IAEX,CACIO,KAAM,MACNP,MAAOyD,EAAAA,SAmJf,EA/Ie,WACX,IAAArF,GAAkCC,EAAAA,EAAAA,WAAS,GAAME,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA1CgM,EAAS7L,EAAA,GAAE8L,EAAY9L,EAAA,GAC9BG,GAAgCL,EAAAA,EAAAA,UAAS,IAAGQ,GAAAL,EAAAA,EAAAA,GAAAE,EAAA,GAArC4L,EAAQzL,EAAA,GAAE0L,EAAW1L,EAAA,GAGtB2L,EAAoB,SAAC1B,GACvBuB,GAAcD,GACdG,EAAYzB,EAEhB,EAEAnJ,GAAwCtB,EAAAA,EAAAA,UAAS,IAAGuB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAA7C8K,EAAY7K,EAAA,GAGb4D,GAH8B5D,EAAA,GAGpB,CACZ,CACIoE,OAAQ,KACR0G,SAAU,KACVhF,MAAM,GAEV,CACI1B,OAAQ,OACR0G,SAAU,OACVhF,MAAM,GAEV,CACI1B,OAAQ,QACR0G,SAAU,QACVhF,MAAM,GAEV,CACI1B,OAAQ,YACR0G,SAAU,OACVhF,MAAM,GAEV,CACI1B,OAAQ,OACR0G,SAAU,OACVhF,MAAM,EACNvB,KAAM,SAAAlG,GAAA,IAAG+B,EAAK/B,EAAL+B,MAAK,OAEV5C,EAAAA,EAAAA,MAACuN,EAAAA,EAAQ,CAAAzN,SAAA,EACLE,EAAAA,EAAAA,MAACuN,EAAAA,EAAAA,OAAe,CAACb,QAAQ,UAAU/F,GAAG,gBAAe7G,SAAA,CAChDuN,GAAgBzK,GACjBhD,EAAAA,EAAAA,KAAA,KAAGK,UAAU,2BAEjBD,EAAAA,EAAAA,MAACuN,EAAAA,EAAAA,KAAa,CAAC7F,MAAO,CAAE8F,SAAU,SAAU1N,SAAA,CAAC,KACzCF,EAAAA,EAAAA,KAAC2N,EAAAA,EAAAA,KAAa,CAAAzN,SAAE,wBAChBF,EAAAA,EAAAA,KAAC2N,EAAAA,EAAAA,KAAa,CAAAzN,SAAE,qBAChBF,EAAAA,EAAAA,KAAC2N,EAAAA,EAAAA,KAAa,CAAAzN,SAAE,wBAGb,GAKnB,CACI8G,OAAQ,SACR0G,SAAU,SACVhF,MAAM,EACNvB,KAAM,SAAApC,GAAA,IAAG/B,EAAK+B,EAAL/B,MAAK,OACV5C,EAAAA,EAAAA,MAAA,QAAAF,SAAA,CAAM,KAAG8C,IAAc,GAG/B,CACIgE,OAAQ,UACR0G,SAAU,UACVhF,MAAM,EACNvB,KAAM,kBACFnH,EAAAA,EAAAA,KAAC8D,EAAAA,GAAI,CAACC,GAAG,wBAAuB7D,UAC5BF,EAAAA,EAAAA,KAAC6M,EAAAA,EAAM,CAACC,QAAQ,UAAUzM,UAAU,2BAA0BH,SAAC,mBAG5D,GAGf,CACI8G,OAAQ,SACR0G,SAAU,SACVvG,KAAM,kBAEFnH,EAAAA,EAAAA,KAAC6M,EAAAA,EAAM,CAACC,QAAQ,QAAQzM,UAAU,2BAA2BwD,QAAS,kBAAM2J,EAAkB,SAAS,EAACtN,SAAC,QAAa,KAOlI,OACIE,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAA5C,SAAA,EACIF,EAAAA,EAAAA,KAAC6N,EAAAA,EAAS,CACNnN,gBAAiB,CACb,CAAEK,MAAO,YAAaC,KAAM,yBAEhCV,MAAO,uCAIXN,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAAAC,UACAF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAAD,UACAF,EAAAA,EAAAA,KAAC0M,EAAAA,EAAI,CAAAxM,UACDE,EAAAA,EAAAA,MAACsM,EAAAA,EAAAA,KAAS,CAAAxM,SAAA,EACNE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCH,SAAA,EAC3CE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,eAAcH,SAAC,qBAC7BF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,wBAAuBH,SAAC,gCAGzCF,EAAAA,EAAAA,KAAC6M,EAAAA,EAAM,CAACC,QAAQ,UAAUzM,UAAU,4CAA4CwD,QAAS,kBAAM2J,EAAkB,SAAS,EAACtN,SAAC,sBAGhIF,EAAAA,EAAAA,KAAC8N,EAAAA,EAAK,CACFtH,QAASA,EACTC,KAAMA,EACNxD,SAAU,GACV9B,gBAAiBA,EACjByE,YAAY,EACZC,YAAY,EACZF,cAAc,cAOlC3F,EAAAA,EAAAA,KAAC+N,EAAAA,EAAK,CAACC,KAAMZ,EAAWa,OAAQT,EAAmBU,UAAQ,EAAAhO,UACvDE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAA0ByH,MAAO,CAAEqG,SAAU,SAAUjO,SAAA,EAClEF,EAAAA,EAAAA,KAAC+N,EAAAA,EAAAA,OAAY,CAACK,aAAW,EAAAlO,UACrBF,EAAAA,EAAAA,KAAC+N,EAAAA,EAAAA,MAAW,CAAA7N,SAAC,4BAEjBF,EAAAA,EAAAA,KAAC+N,EAAAA,EAAAA,KAAU,CAAA7N,UAEPF,EAAAA,EAAAA,KAACqO,EAAAA,QAAU,CAACvC,IAAKwB,aAQzC,C,uECvKe,SAASgB,EAAeC,GACrC,IAAIC,ECFS,SAAuBxL,GACpC,IAAIyL,GAAWnJ,EAAAA,EAAAA,QAAOtC,GAEtB,OADAyL,EAASjJ,QAAUxC,EACZyL,CACT,CDFkBC,CAAcH,IAC9BxM,EAAAA,EAAAA,YAAU,WACR,OAAO,WACL,OAAOyM,EAAUhJ,SACnB,CACF,GAAG,GACL,C,6FEdamJ,EAAsB,SAAA3J,GACjC,IAAI/D,EAEJ,MAAwB,qBAAb2N,SAAiC,KACjC,MAAP5J,GAAoB6J,EAAAA,EAAAA,KAAgBC,MACrB,oBAAR9J,IAAoBA,EAAMA,KACjCA,GAAO,YAAaA,IAAKA,EAAMA,EAAIQ,SACnB,OAAfvE,EAAO+D,IAAgB/D,EAAK8N,UAAiB/J,GAC3C,KACT,EACe,SAASgK,EAAiBhK,EAAKiK,GAC5C,IAAA7N,GAA8BC,EAAAA,EAAAA,WAAS,kBAAMsN,EAAoB3J,EAAI,IAACzD,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA/DmE,EAAWhE,EAAA,GAAE2N,EAAM3N,EAAA,GAE1B,IAAKgE,EAAa,CAChB,IAAM4J,EAAWR,EAAoB3J,GACjCmK,GAAUD,EAAOC,EACvB,CAcA,OAZApN,EAAAA,EAAAA,YAAU,WACJkN,GAAc1J,GAChB0J,EAAW1J,EAEf,GAAG,CAAC0J,EAAY1J,KAChBxD,EAAAA,EAAAA,YAAU,WACR,IAAMqN,EAAUT,EAAoB3J,GAEhCoK,IAAY7J,GACd2J,EAAOE,EAEX,GAAG,CAACpK,EAAKO,IACFA,CACT,C,uBC3Be,SAAS8J,EAASC,EAASjP,GACxC,OAAIiP,EAAQC,YAAoBlP,GAAaiP,EAAQC,UAAUC,SAASnP,IACkC,KAAlG,KAAOiP,EAAQjP,UAAUoP,SAAWH,EAAQjP,WAAa,KAAKqP,QAAQ,IAAMrP,EAAY,IAClG,C","sources":["components/PageTitle.tsx","components/Pagination.tsx","components/Table.tsx","components/VerticalForm.tsx","components/FormInput.tsx","pages/apps/JobTask/CreateForm.tsx","pages/apps/JobTask/data.tsx","pages/apps/JobTask/Table.tsx","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/dom-helpers/esm/hasClass.js"],"sourcesContent":["import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <h4 className=\"page-title\">{props.title}</h4>\n          <div className=\"page-title-right\">\n            <Breadcrumb listProps={{ className: \"m-0 flex-col\" }}>\n              <Breadcrumb.Item href=\"/\">Shreyu</Breadcrumb.Item>\n\n              {(props.breadCrumbItems || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\ninterface PaginationProps {\n  tableProps: any;\n  sizePerPageList: {\n    text: string;\n    value: number;\n  }[];\n}\n\nconst Pagination = ({ tableProps, sizePerPageList }: PaginationProps) => {\n  /**\n   * pagination count , index\n   */\n  const [pageCount, setPageCount] = useState<number>(tableProps.pageCount);\n  const [pageIndex, setPageIndex] = useState<number>(\n    tableProps.state.pageIndex\n  );\n\n  useEffect(() => {\n    setPageCount(tableProps.pageCount);\n    setPageIndex(tableProps.state.pageIndex);\n  }, [tableProps.pageCount, tableProps.state.pageIndex]);\n\n  /**\n   * get filter pages\n   */\n  const filterPages = useCallback(\n    (visiblePages: any, totalPages: number) => {\n      return visiblePages.filter((page: any) => page <= pageCount);\n    },\n    [pageCount]\n  );\n\n  /**\n   * handle visible pages\n   */\n  const getVisiblePages = useCallback(\n    (page: number | null, total: number) => {\n      if (total < 7) {\n        return filterPages([1, 2, 3, 4, 5, 6], total);\n      } else {\n        if (page! % 5 >= 0 && page! > 4 && page! + 2 < total) {\n          return [1, page! - 1, page!, page! + 1, total];\n        } else if (page! % 5 >= 0 && page! > 4 && page! + 2 >= total) {\n          return [1, total - 3, total - 2, total - 1, total];\n        } else {\n          return [1, 2, 3, 4, 5, total];\n        }\n      }\n    },\n    [filterPages]\n  );\n\n  /**\n   * handle page change\n   * @param page - current page\n   * @returns\n   */\n  const changePage = (page: number) => {\n    const activePage = pageIndex + 1;\n\n    if (page === activePage) {\n      return;\n    }\n\n    const visiblePages = getVisiblePages(page, pageCount);\n    setVisiblePages(filterPages(visiblePages, pageCount));\n\n    tableProps.gotoPage(page - 1);\n  };\n\n  useEffect(() => {\n    const visiblePages = getVisiblePages(null, pageCount);\n    setVisiblePages(visiblePages);\n  }, [pageCount, getVisiblePages]);\n\n  const [visiblePages, setVisiblePages] = useState<number[]>(\n    getVisiblePages(null, pageCount)\n  );\n  const activePage: number = pageIndex + 1;\n\n  return (\n    <>\n      <div className=\"d-lg-flex align-items-center text-center pb-1\">\n        {sizePerPageList.length > 0 && (\n          <div className=\"d-inline-block me-3\">\n            <label className=\"me-1\">Display :</label>\n            <select\n              value={tableProps.state.pageSize}\n              onChange={(e: any) => {\n                tableProps.setPageSize(Number(e.target.value));\n              }}\n              className=\"form-select d-inline-block w-auto\"\n            >\n              {(sizePerPageList || []).map((pageSize, index) => {\n                return (\n                  <option key={index} value={pageSize.value}>\n                    {pageSize.text}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n        )}\n\n        <span className=\"me-3\">\n          Page{\" \"}\n          <strong>\n            {pageIndex + 1} of {tableProps.pageOptions.length}\n          </strong>{\" \"}\n        </span>\n\n        <span className=\"d-inline-block align-items-center text-sm-start text-center my-sm-0 my-2\">\n          <label>Go to page : </label>\n          <input\n            type=\"number\"\n            value={pageIndex + 1}\n            min=\"1\"\n            onChange={(e: any) => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0;\n              tableProps.gotoPage(page);\n              setPageIndex(tableProps.state.pageIndex);\n            }}\n            className=\"form-control w-25 ms-1 d-inline-block\"\n          />\n        </span>\n\n        <ul className=\"pagination pagination-rounded d-inline-flex ms-auto\">\n          <li\n            key=\"prevpage\"\n            className={classNames(\"page-item\", \"paginate_button\", \"previous\", {\n              disabled: activePage === 1,\n            })}\n            onClick={() => {\n              if (activePage === 1) return;\n              changePage(activePage - 1);\n            }}\n          >\n            <Link to=\"#\" className=\"page-link\">\n              <i className=\"uil uil-angle-left\"></i>\n            </Link>\n          </li>\n          {(visiblePages || []).map((page, index, array) => {\n            return array[index - 1] + 1 < page ? (\n              <React.Fragment key={page}>\n                <li className=\"page-item disabled d-none d-xl-inline-block\">\n                  <Link to=\"#\" className=\"page-link\">\n                    ...\n                  </Link>\n                </li>\n                <li\n                  className={classNames(\n                    \"page-item\",\n                    \"d-none\",\n                    \"d-xl-inline-block\",\n                    {\n                      active: activePage === page,\n                    }\n                  )}\n                  onClick={(e: any) => changePage(page)}\n                >\n                  <Link to=\"#\" className=\"page-link\">\n                    {page}\n                  </Link>\n                </li>\n              </React.Fragment>\n            ) : (\n              <li\n                key={page}\n                className={classNames(\n                  \"page-item\",\n                  \"d-none\",\n                  \"d-xl-inline-block\",\n                  {\n                    active: activePage === page,\n                  }\n                )}\n                onClick={(e: any) => changePage(page)}\n              >\n                <Link to=\"#\" className=\"page-link\">\n                  {page}\n                </Link>\n              </li>\n            );\n          })}\n          <li\n            key=\"nextpage\"\n            className={classNames(\"page-item\", \"paginate_button\", \"next\", {\n              disabled: activePage === tableProps.pageCount,\n            })}\n            onClick={() => {\n              if (activePage === tableProps.pageCount) return;\n              changePage(activePage + 1);\n            }}\n          >\n            <Link to=\"#\" className=\"page-link\">\n              <i className=\"uil uil-angle-right\"></i>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Pagination;\n","import React, { useRef, useEffect, forwardRef, useState } from \"react\";\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useRowSelect,\n  useGlobalFilter,\n  useAsyncDebounce,\n  useExpanded,\n} from \"react-table\";\nimport classNames from \"classnames\";\n\n// components\nimport Pagination from \"./Pagination\";\n\ninterface GlobalFilterProps {\n  preGlobalFilteredRows: any;\n  globalFilter: any;\n  setGlobalFilter: any;\n  searchBoxClass: any;\n}\n\n// Define a default UI for filtering\nconst GlobalFilter = ({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n  searchBoxClass,\n}: GlobalFilterProps) => {\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = useState<any>(globalFilter);\n  const onChange = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n\n  return (\n    <div className={classNames(searchBoxClass)}>\n      <span className=\"d-flex align-items-center\">\n        Search :{\" \"}\n        <input\n          type=\"search\"\n          value={value || \"\"}\n          onChange={(e: any) => {\n            setValue(e.target.value);\n            onChange(e.target.value);\n          }}\n          placeholder={`${count} records...`}\n          className=\"form-control w-auto ms-1\"\n        />\n      </span>\n    </div>\n  );\n};\n\ninterface IndeterminateCheckboxProps {\n  indeterminate: any;\n  children?: React.ReactNode;\n}\n\nconst IndeterminateCheckbox = forwardRef<\n  HTMLInputElement,\n  IndeterminateCheckboxProps\n>(({ indeterminate, ...rest }, ref) => {\n  const defaultRef = useRef();\n  const resolvedRef: any = ref || defaultRef;\n\n  useEffect(() => {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n\n  return (\n    <>\n      <div className=\"form-check\">\n        <input\n          type=\"checkbox\"\n          className=\"form-check-input\"\n          ref={resolvedRef}\n          {...rest}\n        />\n        <label htmlFor=\"form-check-input\" className=\"form-check-label\"></label>\n      </div>\n    </>\n  );\n});\n\ninterface TableProps {\n  isSearchable?: boolean;\n  isSortable?: boolean;\n  pagination?: boolean;\n  isSelectable?: boolean;\n  isExpandable?: boolean;\n  sizePerPageList?: {\n    text: string;\n    value: number;\n  }[];\n  columns: {\n    Header: string;\n    accessor: string;\n    sort?: boolean;\n    Cell?: any;\n    className?: string;\n  }[];\n  data: any[];\n  pageSize?: any;\n  searchBoxClass?: string;\n  tableClass?: string;\n  theadClass?: string;\n}\n\nconst Table = (props: TableProps) => {\n  const isSearchable = props[\"isSearchable\"] || false;\n  const isSortable = props[\"isSortable\"] || false;\n  const pagination = props[\"pagination\"] || false;\n  const isSelectable = props[\"isSelectable\"] || false;\n  const isExpandable = props[\"isExpandable\"] || false;\n  const sizePerPageList = props[\"sizePerPageList\"] || [];\n\n  let otherProps: any = {};\n\n  if (isSearchable) {\n    otherProps[\"useGlobalFilter\"] = useGlobalFilter;\n  }\n  if (isSortable) {\n    otherProps[\"useSortBy\"] = useSortBy;\n  }\n  if (isExpandable) {\n    otherProps[\"useExpanded\"] = useExpanded;\n  }\n  if (pagination) {\n    otherProps[\"usePagination\"] = usePagination;\n  }\n  if (isSelectable) {\n    otherProps[\"useRowSelect\"] = useRowSelect;\n  }\n\n  const dataTable = useTable(\n    {\n      columns: props[\"columns\"],\n      data: props[\"data\"],\n      initialState: { pageSize: props[\"pageSize\"] || 10 },\n    },\n    otherProps.hasOwnProperty(\"useGlobalFilter\") &&\n      otherProps[\"useGlobalFilter\"],\n    otherProps.hasOwnProperty(\"useSortBy\") && otherProps[\"useSortBy\"],\n    otherProps.hasOwnProperty(\"useExpanded\") && otherProps[\"useExpanded\"],\n    otherProps.hasOwnProperty(\"usePagination\") && otherProps[\"usePagination\"],\n    otherProps.hasOwnProperty(\"useRowSelect\") && otherProps[\"useRowSelect\"],\n    (hooks) => {\n      isSelectable &&\n        hooks.visibleColumns.push((columns: any) => [\n          // Let's make a column for selection\n          {\n            id: \"selection\",\n            // The header can use the table's getToggleAllRowsSelectedProps method\n            // to render a checkbox\n            Header: ({ getToggleAllPageRowsSelectedProps }: any) => (\n              <div>\n                <IndeterminateCheckbox\n                  {...getToggleAllPageRowsSelectedProps()}\n                />\n              </div>\n            ),\n            // The cell can use the individual row's getToggleRowSelectedProps method\n            // to the render a checkbox\n            Cell: ({ row }: any) => (\n              <div>\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n              </div>\n            ),\n          },\n          ...columns,\n        ]);\n\n      isExpandable &&\n        hooks.visibleColumns.push((columns: any) => [\n          // Let's make a column for selection\n          {\n            // Build our expander column\n            id: \"expander\", // Make sure it has an ID\n            Header: ({\n              getToggleAllRowsExpandedProps,\n              isAllRowsExpanded,\n            }: any) => (\n              <span {...getToggleAllRowsExpandedProps()}>\n                {isAllRowsExpanded ? \"-\" : \"+\"}\n              </span>\n            ),\n            Cell: ({ row }) =>\n              // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n              // to build the toggle for expanding a row\n              row.canExpand ? (\n                <span\n                  {...row.getToggleRowExpandedProps({\n                    style: {\n                      // We can even use the row.depth property\n                      // and paddingLeft to indicate the depth\n                      // of the row\n                      paddingLeft: `${row.depth * 2}rem`,\n                    },\n                  })}\n                >\n                  {row.isExpanded ? \"-\" : \"+\"}\n                </span>\n              ) : null,\n          },\n          ...columns,\n        ]);\n    }\n  );\n\n  let rows = pagination ? dataTable.page : dataTable.rows;\n\n  return (\n    <>\n      {isSearchable && (\n        <GlobalFilter\n          preGlobalFilteredRows={dataTable.preGlobalFilteredRows}\n          globalFilter={dataTable.state.globalFilter}\n          setGlobalFilter={dataTable.setGlobalFilter}\n          searchBoxClass={props[\"searchBoxClass\"]}\n        />\n      )}\n\n      <div className=\"table-responsive\">\n        <table\n          {...dataTable.getTableProps()}\n          className={classNames(\n            \"table table-centered react-table\",\n            props[\"tableClass\"]\n          )}\n        >\n          <thead className={props[\"theadClass\"]}>\n            {(dataTable.headerGroups || []).map((headerGroup: any) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {(headerGroup.headers || []).map((column: any) => (\n                  <th\n                    {...column.getHeaderProps(\n                      column.sort && column.getSortByToggleProps()\n                    )}\n                    className={classNames({\n                      sorting_desc: column.isSortedDesc === true,\n                      sorting_asc: column.isSortedDesc === false,\n                      sortable: column.sort === true,\n                    })}\n                  >\n                    {column.render(\"Header\")}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...dataTable.getTableBodyProps()}>\n            {(rows || []).map((row: any, i: number) => {\n              dataTable.prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {(row.cells || []).map((cell: any) => {\n                    return (\n                      <td\n                        {...cell.getCellProps([\n                          {\n                            className: cell.column.className,\n                          },\n                        ])}\n                      >\n                        {cell.render(\"Cell\")}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      {pagination && (\n        <Pagination tableProps={dataTable} sizePerPageList={sizePerPageList} />\n      )}\n    </>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport { useForm, Resolver, SubmitHandler } from \"react-hook-form\";\n\ninterface VerticalFromProps<TFormValues> {\n  defaultValues?: any;\n  resolver?: Resolver<TFormValues>;\n  children?: any;\n  onSubmit: SubmitHandler<TFormValues>;\n  formClass?: string;\n}\n\nconst VerticalForm = <\n  TFormValues extends Record<string, any> = Record<string, any>\n>({\n  defaultValues,\n  resolver,\n  children,\n  onSubmit,\n  formClass,\n}: VerticalFromProps<TFormValues>) => {\n  /*\n   * form methods\n   */\n  const methods = useForm<TFormValues>({ defaultValues, resolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n  } = methods;\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className={formClass} noValidate>\n      {Array.isArray(children)\n        ? children.map((child) => {\n            return child.props && child.props.name\n              ? React.createElement(child.type, {\n                  ...{\n                    ...child.props,\n                    register,\n                    key: child.props.name,\n                    errors,\n                    control,\n                  },\n                })\n              : child;\n          })\n        : children}\n    </form>\n  );\n};\n\nexport default VerticalForm;\n","import React, { InputHTMLAttributes } from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\n\nimport { FieldErrors, Control } from \"react-hook-form\";\n\ninterface FormInputProps extends InputHTMLAttributes<HTMLInputElement> {\n  startIcon?: any;\n  label?: string;\n  type?: string;\n  name: string;\n  comp?: string;\n  placeholder?: string;\n  register?: any;\n  errors?: FieldErrors;\n  control?: Control<any>;\n  className?: string;\n  labelClassName?: string;\n  containerClass?: string;\n  textClassName?: string;\n  refCallback?: any;\n  action?: any;\n  rows?: string | number;\n}\n\n// textual form-controls—like inputs, passwords, textareas etc.\nconst TextualInput = ({\n  type,\n  name,\n  placeholder,\n  register,\n  errors,\n  comp,\n  rows,\n  className,\n  refCallback,\n  ...otherProps\n}: FormInputProps) => {\n  return (\n    <>\n      <Form.Control\n        type={type}\n        placeholder={placeholder}\n        name={name}\n        as={comp}\n        id={name}\n        ref={(r: HTMLInputElement) => {\n          if (refCallback) refCallback(r);\n        }}\n        className={className}\n        isInvalid={errors && errors[name] ? true : false}\n        {...(register ? register(name) : {})}\n        rows={rows}\n        {...otherProps}\n      ></Form.Control>\n\n      {errors && errors[name] ? (\n        <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n          {errors[name][\"message\"]}\n        </Form.Control.Feedback>\n      ) : null}\n    </>\n  );\n};\n\n// non-textual checkbox and radio controls\nconst CheckInput = ({\n  type,\n  label,\n  name,\n  placeholder,\n  register,\n  errors,\n  comp,\n  rows,\n  className,\n  refCallback,\n  ...otherProps\n}: FormInputProps) => {\n  return (\n    <>\n      <Form.Check\n        type={type}\n        label={label}\n        name={name}\n        id={name}\n        ref={(r: HTMLInputElement) => {\n          if (refCallback) refCallback(r);\n        }}\n        className={className}\n        isInvalid={errors && errors[name] ? true : false}\n        {...(register ? register(name) : {})}\n        {...otherProps}\n      />\n\n      {errors && errors[name] ? (\n        <Form.Control.Feedback type=\"invalid\">\n          {errors[name][\"message\"]}\n        </Form.Control.Feedback>\n      ) : null}\n    </>\n  );\n};\n\n// handle select controls\nconst SelectInput = ({\n  type,\n  label,\n  name,\n  placeholder,\n  register,\n  errors,\n  comp,\n  rows,\n  className,\n  refCallback,\n  ...otherProps\n}: FormInputProps) => {\n  return (\n    <>\n      <Form.Select\n        type={type}\n        label={label}\n        name={name}\n        id={name}\n        ref={(r: HTMLInputElement) => {\n          if (refCallback) refCallback(r);\n        }}\n        className={className}\n        isInvalid={errors && errors[name] ? true : false}\n        {...(register ? register(name) : {})}\n        {...otherProps}\n      />\n\n      {errors && errors[name] ? (\n        <Form.Control.Feedback type=\"invalid\">\n          {errors[name][\"message\"]}\n        </Form.Control.Feedback>\n      ) : null}\n    </>\n  );\n};\n\n// extend textual form-controls with add-ons\nconst FormInputGroup = ({\n  startIcon,\n  type,\n  name,\n  placeholder,\n  comp,\n  register,\n  errors,\n  rows,\n  className,\n  textClassName,\n  refCallback,\n  ...otherProps\n}: FormInputProps) => {\n  return (\n    <InputGroup>\n      <InputGroup.Text className={textClassName}>{startIcon}</InputGroup.Text>\n      {type === \"select\" ? (\n        <SelectInput\n          type={type}\n          name={name}\n          placeholder={placeholder}\n          refCallback={refCallback}\n          comp={comp}\n          errors={errors}\n          register={register}\n          className={className}\n          rows={rows}\n          {...otherProps}\n        />\n      ) : (\n        <TextualInput\n          type={type}\n          name={name}\n          placeholder={placeholder}\n          refCallback={refCallback}\n          comp={comp}\n          errors={errors}\n          register={register}\n          className={className}\n          rows={rows}\n          {...otherProps}\n        />\n      )}\n    </InputGroup>\n  );\n};\n\nconst FormInput = ({\n  startIcon,\n  label,\n  type,\n  name,\n  placeholder,\n  register,\n  errors,\n  control,\n  className,\n  labelClassName,\n  containerClass,\n  textClassName,\n  refCallback,\n  action,\n  rows,\n  ...otherProps\n}: FormInputProps) => {\n  // handle input type\n  const comp =\n    type === \"textarea\" ? \"textarea\" : type === \"select\" ? \"select\" : \"input\";\n\n  return (\n    <>\n      {type === \"hidden\" ? (\n        <input\n          type={type}\n          name={name}\n          {...(register ? register(name) : {})}\n          {...otherProps}\n        />\n      ) : (\n        <>\n          {type === \"checkbox\" || type === \"radio\" ? (\n            <Form.Group className={containerClass}>\n              <CheckInput\n                type={type}\n                label={label}\n                name={name}\n                placeholder={placeholder}\n                refCallback={refCallback}\n                errors={errors}\n                register={register}\n                comp={comp}\n                className={className}\n                rows={rows}\n                {...otherProps}\n              />\n            </Form.Group>\n          ) : type === \"select\" ? (\n            <Form.Group className={containerClass}>\n              {label ? (\n                <>\n                  <Form.Label className={labelClassName}>{label}</Form.Label>\n                  {action && action}\n                </>\n              ) : null}\n              {startIcon ? (\n                <FormInputGroup\n                  type={type}\n                  startIcon={startIcon}\n                  name={name}\n                  comp={comp}\n                  textClassName={textClassName}\n                  placeholder={placeholder}\n                  refCallback={refCallback}\n                  errors={errors}\n                  register={register}\n                  className={className}\n                  rows={rows}\n                  {...otherProps}\n                />\n              ) : (\n                <SelectInput\n                  type={type}\n                  name={name}\n                  placeholder={placeholder}\n                  refCallback={refCallback}\n                  errors={errors}\n                  register={register}\n                  comp={comp}\n                  className={className}\n                  rows={rows}\n                  {...otherProps}\n                />\n              )}\n            </Form.Group>\n          ) : (\n            <Form.Group className={containerClass}>\n              {label ? (\n                <>\n                  <Form.Label className={labelClassName}>{label}</Form.Label>\n                  {action && action}\n                </>\n              ) : null}\n              {startIcon ? (\n                <FormInputGroup\n                  type={type}\n                  startIcon={startIcon}\n                  name={name}\n                  comp={comp}\n                  textClassName={textClassName}\n                  placeholder={placeholder}\n                  refCallback={refCallback}\n                  errors={errors}\n                  register={register}\n                  className={className}\n                  rows={rows}\n                  {...otherProps}\n                />\n              ) : (\n                <TextualInput\n                  type={type}\n                  name={name}\n                  placeholder={placeholder}\n                  refCallback={refCallback}\n                  errors={errors}\n                  register={register}\n                  comp={comp}\n                  className={className}\n                  rows={rows}\n                  {...otherProps}\n                />\n              )}\n            </Form.Group>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default FormInput;\n","import React from 'react';\r\nimport { FormInput, VerticalForm } from '../../../components';\r\nimport { Row, Col, Card, Button, InputGroup, Form } from \"react-bootstrap\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\ninterface UserData {\r\n    username: string;\r\n    email: string;\r\n    salary: number;\r\n    role: string;\r\n    JoinDate: number;\r\n}\r\ninterface CreateFormProps {\r\n    btn?: string; // Make btn prop optional by adding \"?\"\r\n}\r\n\r\nconst CreateForm: React.FC<CreateFormProps> = ({ btn }) => {\r\n    /*\r\n    form validation schema\r\n    */\r\n    const schemaResolver = yupResolver(\r\n        yup.object().shape({\r\n            username: yup.string().required(\"Please enter Username\"),\r\n            email: yup.string().required(\"Please enter Email address\"),\r\n            password: yup.string().required(\"Please enter Password\"),\r\n            confirmpassword: yup\r\n                .string()\r\n                .oneOf([yup.ref(\"password\"), null], \"Passwords don't match\")\r\n                .required(\"This value is required.\"),\r\n            checkbox: yup.bool().oneOf([true]),\r\n        })\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <Card>\r\n                <Card.Body>\r\n                    <VerticalForm<UserData>\r\n                        onSubmit={() => { }}\r\n                        resolver={schemaResolver}\r\n                        defaultValues={{ username: \"test\" }}\r\n                    >\r\n                        <FormInput\r\n                            label={\"Name\"}\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            placeholder=\"Enter your name\"\r\n                            containerClass={\"mb-3\"}\r\n                        />\r\n                        <FormInput\r\n                            label={\"Email address\"}\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            containerClass={\"mb-3\"}\r\n                        />\r\n                        <FormInput\r\n                            label={\"salary\"}\r\n                            type=\"number\"\r\n                            name=\"salary\"\r\n                            placeholder=\"salary\"\r\n                            containerClass={\"mb-3\"}\r\n                        />\r\n                        <FormInput\r\n                            label={\"Role\"}\r\n                            type=\"text\"\r\n                            name=\"role\"\r\n                            placeholder=\"role\"\r\n                            containerClass={\"mb-3\"}\r\n                        />\r\n                        <FormInput\r\n                            label={\"JoinDate\"}\r\n                            type=\"date\"\r\n                            name=\"date\"\r\n                            containerClass={\"mb-3\"}\r\n                        />\r\n\r\n                        <div className=\"text-md-end mb-0\">\r\n                            <Button variant=\"primary\" className=\"me-1\" type=\"submit\">\r\n                                {btn}\r\n                            </Button>\r\n                            <Button variant=\"secondary\" type=\"reset\">\r\n                                Cancel\r\n                            </Button>\r\n                        </div>\r\n                    </VerticalForm>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateForm;","interface Records {\n  id: number;\n  name: string;\n  email: string;\n  date: string;\n  role: string;\n  salary: number;\n  payslip: string;\n  action: string;\n}\n\ninterface ExpandableRecords {\n  id: number;\n  name: string;\n  email: string;\n  date: string;\n  role: string;\n  salary: number;\n  payslip: string;\n  action: string;\n  subRows: Records[];\n}\n\nconst records: Records[] = [\n  {\n    id: 1,\n    name: \"John Doe\",\n    email: \"john.doe@example.com\",\n    date: \"2024-05-01\",\n    role: \"Software Developer\",\n    salary: 60000,\n    payslip: \"link-to-payslip-1\",\n    action: \"edit\",\n  },\n  {\n    id: 2,\n    name: \"Jane Smith\",\n    email: \"jane.smith@example.com\",\n    date: \"2024-05-01\",\n    role: \"Software Tester\",\n    salary: 80000,\n    payslip: \"link-to-payslip-2\",\n    action: \"edit\",\n  },\n  {\n    id: 3,\n    name: \"Alice Johnson\",\n    email: \"alice.johnson@example.com\",\n    date: \"2024-05-02\",\n    role: \"Software Developer\",\n    salary: 55000,\n    payslip: \"link-to-payslip-3\",\n    action: \"edit\",\n  },\n  {\n    id: 4,\n    name: \"Bob Brown\",\n    email: \"bob.brown@example.com\",\n    date: \"2024-05-02\",\n    role: \"UI/UX Designer\",\n    salary: 65000,\n    payslip: \"link-to-payslip-4\",\n    action: \"edit\",\n  },\n  {\n    id: 5,\n    name: \"Emily Davis\",\n    email: \"emily.davis@example.com\",\n    date: \"2024-05-03\",\n    role: \"Software Developer\",\n    salary: 70000,\n    payslip: \"link-to-payslip-5\",\n    action: \"edit\",\n  },\n  {\n    id: 6,\n    name: \"Michael Wilson\",\n    email: \"michael.wilson@example.com\",\n    date: \"2024-05-03\",\n    role: \"Data Scientist\",\n    salary: 90000,\n    payslip: \"link-to-payslip-6\",\n    action: \"edit\",\n  },\n  {\n    id: 7,\n    name: \"Sarah Martinez\",\n    email: \"sarah.martinez@example.com\",\n    date: \"2024-05-04\",\n    role: \"Software Tester\",\n    salary: 85000,\n    payslip: \"link-to-payslip-7\",\n    action: \"edit\",\n  },\n  {\n    id: 8,\n    name: \"David Taylor\",\n    email: \"david.taylor@example.com\",\n    date: \"2024-05-04\",\n    role: \"UI/UX Designer\",\n    salary: 60000,\n    payslip: \"link-to-payslip-8\",\n    action: \"edit\",\n  },\n  {\n    id: 9,\n    name: \"Olivia Anderson\",\n    email: \"olivia.anderson@example.com\",\n    date: \"2024-05-05\",\n    role: \"Software Developer\",\n    salary: 55000,\n    payslip: \"link-to-payslip-9\",\n    action: \"edit\",\n  },\n  {\n    id: 10,\n    name: \"James Wilson\",\n    email: \"james.wilson@example.com\",\n    date: \"2024-05-05\",\n    role: \"Customer Service\",\n    salary: 50000,\n    payslip: \"link-to-payslip-10\",\n    action: \"edit\",\n  },\n  {\n    id: 11,\n    name: \"Sophia Brown\",\n    email: \"sophia.brown@example.com\",\n    date: \"2024-05-06\",\n    role: \"Software Developer\",\n    salary: 60000,\n    payslip: \"link-to-payslip-11\",\n    action: \"edit\",\n  },\n  {\n    id: 12,\n    name: \"Ethan Lee\",\n    email: \"ethan.lee@example.com\",\n    date: \"2024-05-06\",\n    role: \"IT Support\",\n    salary: 55000,\n    payslip: \"link-to-payslip-12\",\n    action: \"edit\",\n  },\n  {\n    id: 13,\n    name: \"Isabella Perez\",\n    email: \"isabella.perez@example.com\",\n    date: \"2024-05-07\",\n    role: \"Software Tester\",\n    salary: 75000,\n    payslip: \"link-to-payslip-13\",\n    action: \"edit\",\n  },\n  {\n    id: 14,\n    name: \"Mason Gonzalez\",\n    email: \"mason.gonzalez@example.com\",\n    date: \"2024-05-07\",\n    role: \"UI/UX Designer\",\n    salary: 65000,\n    payslip: \"link-to-payslip-14\",\n    action: \"edit\",\n  },\n  {\n    id: 15,\n    name: \"Ava Rodriguez\",\n    email: \"ava.rodriguez@example.com\",\n    date: \"2024-05-08\",\n    role: \"UI/UX Designer\",\n    salary: 45000,\n    payslip: \"link-to-payslip-15\",\n    action: \"edit\",\n  },\n  {\n    id: 16,\n    name: \"William Hernandez\",\n    email: \"william.hernandez@example.com\",\n    date: \"2024-05-08\",\n    role: \"Software Developer\",\n    salary: 60000,\n    payslip: \"link-to-payslip-16\",\n    action: \"edit\",\n  },\n  {\n    id: 17,\n    name: \"Elizabeth Scott\",\n    email: \"elizabeth.scott@example.com\",\n    date: \"2024-05-09\",\n    role: \"UI/UX Designer\",\n    salary: 80000,\n    payslip: \"link-to-payslip-17\",\n    action: \"edit\",\n  },\n  {\n    id: 18,\n    name: \"Alexander Wood\",\n    email: \"alexander.wood@example.com\",\n    date: \"2024-05-09\",\n    role: \"Quality Assurance\",\n    salary: 65000,\n    payslip: \"link-to-payslip-18\",\n    action: \"edit\",\n  },\n  {\n    id: 19,\n    name: \"Grace Green\",\n    email: \"grace.green@example.com\",\n    date: \"2024-05-10\",\n    role: \"Technical Writer\",\n    salary: 55000,\n    payslip: \"link-to-payslip-19\",\n    action: \"edit\",\n  },\n  {\n    id: 20,\n    name: \"Benjamin Adams\",\n    email: \"benjamin.adams@example.com\",\n    date: \"2024-05-10\",\n    role: \"Training Coordinator\",\n    salary: 60000,\n    payslip: \"link-to-payslip-20\",\n    action: \"edit\",\n  },\n];\n\n\nexport { records };\n","import PageTitle from '../../../components/PageTitle';\r\nimport { Row, Col, Card, Button, Modal, Dropdown } from \"react-bootstrap\";\r\nimport Table from \"../../../components/Table\";\r\n\r\n//dummy data\r\nimport { records as data } from \"./data\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { SetStateAction, useState } from 'react';\r\nimport CreateForm from './CreateForm';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface CellProps {\r\n    value: number; // Assuming the salary is a number type\r\n}\r\n\r\n\r\nconst sizePerPageList = [\r\n    {\r\n        text: \"5\",\r\n        value: 5,\r\n    },\r\n    {\r\n        text: \"10\",\r\n        value: 10,\r\n    },\r\n    {\r\n        text: \"25\",\r\n        value: 25,\r\n    },\r\n    {\r\n        text: \"All\",\r\n        value: data.length,\r\n    },\r\n];\r\n\r\nconst Tables = () => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [btnValue, setBtnValue] = useState(\"\"); // State to hold btn value\r\n\r\n\r\n    const handleModalToggle = (btn: SetStateAction<string>) => {\r\n        setShowModal(!showModal);\r\n        setBtnValue(btn); // Set btn value based on the parameter\r\n\r\n    };\r\n\r\n    const [selectedRole, setSelectedRole] = useState(\"\"); // State to hold selected role\r\n\r\n\r\n    const columns = [\r\n        {\r\n            Header: \"ID\",\r\n            accessor: \"id\",\r\n            sort: true,\r\n        },\r\n        {\r\n            Header: \"Name\",\r\n            accessor: \"name\",\r\n            sort: true,\r\n        },\r\n        {\r\n            Header: \"Email\",\r\n            accessor: \"email\",\r\n            sort: true,\r\n        },\r\n        {\r\n            Header: \"Join Date\",\r\n            accessor: \"date\",\r\n            sort: false,\r\n        },\r\n        {\r\n            Header: \"Role\",\r\n            accessor: \"role\",\r\n            sort: true,\r\n            Cell: ({ value }: CellProps) => (\r\n                // <Button variant=\"info\" className=\"waves-effect waves-light\">{value}</Button>\r\n                <Dropdown>\r\n                    <Dropdown.Toggle variant=\"primary\" id=\"dropdown-role\">\r\n                        {selectedRole || value}\r\n                        <i className=\"uil uil-angle-down\"></i>\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu style={{ minWidth: '400px' }}> {/* Adjust the width as per your requirement */}\r\n                        <Dropdown.Item >Software Developer</Dropdown.Item>\r\n                        <Dropdown.Item >Software Tester</Dropdown.Item>\r\n                        <Dropdown.Item >UI/UX Designer</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n\r\n                </Dropdown>\r\n\r\n\r\n            ),\r\n        },\r\n        {\r\n            Header: \"Salary\",\r\n            accessor: \"salary\",\r\n            sort: false,\r\n            Cell: ({ value }: CellProps) => ( // Specify the type of value\r\n                <span>$ {value}</span> // Render salary with dollar sign\r\n            ),\r\n        },\r\n        {\r\n            Header: \"Payslip\",\r\n            accessor: \"payslip\",\r\n            sort: false,\r\n            Cell: () => (\r\n                <Link to=\"/apps/JobTask/PaySlip\">\r\n                    <Button variant=\"primary\" className=\"waves-effect waves-light\">\r\n                        Generate Slip\r\n                    </Button>\r\n                </Link>\r\n            ),\r\n        },\r\n        {\r\n            Header: \"Action\",\r\n            accessor: \"action\",\r\n            Cell: () => (\r\n\r\n                <Button variant=\"light\" className=\"waves-effect waves-light\" onClick={() => handleModalToggle(\"update\")}>Edit</Button>\r\n\r\n            ),\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: \"dashboard\", path: \"/dashboard/ecommerce\" },\r\n                ]}\r\n                title={\"employee salary Information table\"}\r\n            />\r\n\r\n\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <div>\r\n                                    <h4 className=\"header-title\">Employee Salary</h4>\r\n                                    <p className=\"text-muted fs-14 mb-4\">A Table allowing search</p>\r\n                                </div>\r\n\r\n                                <Button variant=\"primary\" className=\"waves-effect waves-light float-right mb-5\" onClick={() => handleModalToggle(\"Create\")}> + Add Salary</Button>\r\n                            </div>\r\n\r\n                            <Table\r\n                                columns={columns}\r\n                                data={data}\r\n                                pageSize={10}\r\n                                sizePerPageList={sizePerPageList}\r\n                                isSortable={true}\r\n                                pagination={true}\r\n                                isSearchable={true}\r\n                            />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Modal show={showModal} onHide={handleModalToggle} centered>\r\n                <div className=\"modal-dialog-scrollable\" style={{ maxWidth: '100vw' }}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Edit Employee Salary</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {/* Add your form or content for editing here */}\r\n                        <CreateForm btn={btnValue}></CreateForm>\r\n                    </Modal.Body>\r\n                </div>\r\n            </Modal>\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Tables;\r\n","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport const resolveContainerRef = ref => {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}"],"names":["props","_jsx","Row","children","Col","_jsxs","className","title","Breadcrumb","listProps","href","breadCrumbItems","map","item","index","active","label","path","_ref","tableProps","sizePerPageList","_useState","useState","pageCount","_useState2","_slicedToArray","setPageCount","_useState3","state","pageIndex","_useState4","setPageIndex","useEffect","filterPages","useCallback","visiblePages","totalPages","filter","page","getVisiblePages","total","changePage","setVisiblePages","gotoPage","_useState5","_useState6","activePage","_Fragment","length","value","pageSize","onChange","e","setPageSize","Number","target","text","pageOptions","type","min","classNames","disabled","onClick","Link","to","array","React","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","searchBoxClass","count","setValue","useAsyncDebounce","undefined","placeholder","concat","IndeterminateCheckbox","forwardRef","_ref2","ref","indeterminate","rest","_objectWithoutProperties","_excluded","defaultRef","useRef","resolvedRef","current","_objectSpread","htmlFor","isSearchable","isSortable","pagination","isSelectable","isExpandable","otherProps","useGlobalFilter","useSortBy","useExpanded","usePagination","useRowSelect","dataTable","useTable","columns","data","initialState","hasOwnProperty","hooks","visibleColumns","push","id","Header","_ref3","getToggleAllPageRowsSelectedProps","Cell","_ref4","row","getToggleRowSelectedProps","_toConsumableArray","_ref5","getToggleAllRowsExpandedProps","isAllRowsExpanded","_ref6","canExpand","getToggleRowExpandedProps","style","paddingLeft","depth","isExpanded","rows","getTableProps","headerGroups","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","sort","getSortByToggleProps","sorting_desc","isSortedDesc","sorting_asc","sortable","render","getTableBodyProps","i","prepareRow","getRowProps","cells","cell","getCellProps","Pagination","defaultValues","resolver","onSubmit","formClass","methods","useForm","handleSubmit","register","control","errors","formState","noValidate","Array","isArray","child","name","key","TextualInput","comp","refCallback","Form","as","r","isInvalid","CheckInput","_excluded2","SelectInput","_excluded3","FormInputGroup","startIcon","textClassName","_excluded4","InputGroup","labelClassName","containerClass","action","_excluded5","btn","schemaResolver","yupResolver","yup","shape","username","required","email","password","confirmpassword","oneOf","checkbox","Card","VerticalForm","FormInput","Button","variant","records","date","role","salary","payslip","showModal","setShowModal","btnValue","setBtnValue","handleModalToggle","selectedRole","accessor","Dropdown","minWidth","PageTitle","Table","Modal","show","onHide","centered","maxWidth","closeButton","CreateForm","useWillUnmount","fn","onUnmount","valueRef","useUpdatedRef","resolveContainerRef","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","setRef","earlyRef","nextRef","hasClass","element","classList","contains","baseVal","indexOf"],"sourceRoot":""}