{"version":3,"file":"static/js/994.dba5c152.chunk.js","mappings":"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","sources":["pages/apps/Projects/index.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Button,\n  ButtonGroup,\n  Badge,\n  ProgressBar,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport FeatherIcons from \"feather-icons-react\";\n\n// dummy data\nimport { projects, ProjectTypes } from \"./data\";\n\n// single project\nconst SingleProject = (props: { project: ProjectTypes }) => {\n  const project = props.project || {};\n  const variant = project.state === \"Completed\" ? \"success\" : \"warning\";\n  const displayCount = 3;\n\n  let modifiedTeamMembers;\n\n  if (\n    project.teamMembers.length <= displayCount ||\n    project.teamMembers.length - displayCount === 1\n  ) {\n    modifiedTeamMembers = project.teamMembers;\n  } else {\n    modifiedTeamMembers = project.teamMembers.filter(\n      (m, index) => index < displayCount\n    );\n  }\n\n  return (\n    <Card>\n      <Card.Body>\n        <Badge bg={variant} className=\"float-end\">\n          {project.state}\n        </Badge>\n        <p\n          className={classNames(\n            \"text-\" + variant,\n            \"text-uppercase\",\n            \"fs-12\",\n            \"mb-2\"\n          )}\n        >\n          {project.technology}\n        </p>\n        <h5>\n          <Link to=\"#\" className=\"text-dark\">\n            {project.title}\n          </Link>\n        </h5>\n        <p className=\"text-muted mb-4\">{project.shortDesc}</p>\n\n        <div>\n          {(modifiedTeamMembers || []).map((member, index) => {\n            return (\n              <Link key={index} to=\"#\">\n                {member.image && (\n                  <img\n                    src={member.image}\n                    className=\"avatar-sm m-1 rounded-circle\"\n                    alt=\"\"\n                  />\n                )}\n                {member.variant && (\n                  <div className=\"avatar-sm fw-bold d-inline-block m-1\">\n                    <span\n                      className={classNames(\n                        \"avatar-title\",\n                        \"rounded-circle\",\n                        \"bg-soft-\" + member.variant,\n                        \"text-\" + member.variant\n                      )}\n                    >\n                      {member.name[0]}\n                    </span>\n                  </div>\n                )}\n              </Link>\n            );\n          })}\n          {project.teamMembers.length > modifiedTeamMembers.length && (\n            <Link to=\"#\">\n              <div className=\"avatar-sm fw-bold d-inline-block m-1\">\n                <span className=\"avatar-title rounded-circle bg-soft-warning text-warning\">\n                  {project.teamMembers.length - displayCount}+\n                </span>\n              </div>\n            </Link>\n          )}\n        </div>\n      </Card.Body>\n      <Card.Body className=\"border-top\">\n        <Row className=\"align-items-center\">\n          <Col sm=\"auto\">\n            <ul className=\"list-inline mb-0\">\n              <li className=\"list-inline-item pe-2\">\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={<Tooltip id=\"button-tooltip\">Due date</Tooltip>}\n                >\n                  <Link to=\"#\" className=\"text-muted d-inline-block\">\n                    {\" \"}\n                    <i className=\"uil uil-calender me-1\"></i> {project.endDate}{\" \"}\n                  </Link>\n                </OverlayTrigger>\n              </li>\n              <li className=\"list-inline-item pe-2\">\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={<Tooltip id=\"button-tooltip\">Tasks</Tooltip>}\n                >\n                  <Link to=\"#\" className=\"text-muted d-inline-block\">\n                    {\" \"}\n                    <i className=\"uil uil-bars me-1\"></i> {project.totalTasks}{\" \"}\n                  </Link>\n                </OverlayTrigger>\n              </li>\n              <li className=\"list-inline-item\">\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={<Tooltip id=\"button-tooltip\">Comments</Tooltip>}\n                >\n                  <Link to=\"#\" className=\"text-muted d-inline-block\">\n                    {\" \"}\n                    <i className=\"uil uil-comments-alt me-1\"></i>{\" \"}\n                    {project.totalComments}{\" \"}\n                  </Link>\n                </OverlayTrigger>\n              </li>\n            </ul>\n          </Col>\n          <Col sm={{ offset: 1 }}>\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={\n                <Tooltip id=\"button-tooltip\">\n                  {project.progress}% completed\n                </Tooltip>\n              }\n            >\n              <ProgressBar\n                now={project.progress}\n                variant={variant}\n                className=\"mt-4 mt-sm-0\"\n                style={{ height: \"5px\" }}\n              />\n            </OverlayTrigger>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst Projects = () => {\n  return (\n    <>\n      <Row>\n        <Col xs={12}>\n          <div className=\"page-title-box\">\n            <h4 className=\"page-title\">Projects List</h4>\n            <div className=\"page-title-right\">\n              <div className=\"mt-2 mt-md-0\">\n                <Button variant=\"danger\" className=\"me-4 mb-2 mb-sm-0\">\n                  <i className=\"uil-plus me-1\"></i> Create Project\n                </Button>\n                <ButtonGroup>\n                  <Button variant=\"primary\" className=\"mb-2 mb-sm-0\">\n                    All\n                  </Button>\n                </ButtonGroup>\n                <ButtonGroup className=\"ms-md-1\">\n                  <Button variant=\"white\" className=\"mb-2 mb-sm-0\">\n                    Ongoing\n                  </Button>\n                  <Button variant=\"white\" className=\"mb-2 mb-sm-0\">\n                    Finished\n                  </Button>\n                </ButtonGroup>\n                <ButtonGroup className=\"ms-2 d-none d-sm-inline-block me-1\">\n                  <Button>\n                    <i className=\"uil uil-apps\"></i>\n                  </Button>\n                </ButtonGroup>\n                <ButtonGroup className=\"d-none d-sm-inline-block\">\n                  <Button variant=\"white\">\n                    <i className=\"uil uil-align-left-justify\"></i>\n                  </Button>\n                </ButtonGroup>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n\n      <Row>\n        {(projects || []).map((project, i) => {\n          return (\n            <Col xl={4} md={6} key={\"proj-\" + project.id}>\n              <SingleProject project={project} />\n            </Col>\n          );\n        })}\n      </Row>\n\n      <Row className=\"mb-3 mt-2\">\n        <Col xs={12}>\n          <div className=\"text-center\">\n            <Button variant=\"white\">\n              <FeatherIcons icon=\"loader\" className=\"icon-dual icon-xs me-2\" />\n              Load more\n            </Button>\n          </div>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Projects;\n"],"names":["SingleProject","props","modifiedTeamMembers","project","variant","state","teamMembers","length","filter","m","index","_jsxs","Card","children","_jsx","Badge","bg","className","classNames","technology","Link","to","title","shortDesc","map","member","image","src","alt","name","Row","Col","sm","OverlayTrigger","placement","overlay","Tooltip","id","endDate","totalTasks","totalComments","offset","progress","ProgressBar","now","style","height","_Fragment","xs","Button","ButtonGroup","projects","i","xl","md","FeatherIcons","icon"],"sourceRoot":""}