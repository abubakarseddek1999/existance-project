{"version":3,"file":"static/js/9773.4c1474e1.chunk.js","mappings":"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","sources":["components/Datepicker.tsx","components/PageTitle.tsx","components/VerticalForm.tsx","components/FormInput.tsx","pages/apps/Tasks/Board/TaskDetails.tsx","pages/apps/Tasks/Board/Task.tsx","pages/apps/Tasks/Board/AddNewTask.tsx","pages/apps/Tasks/Board/data.tsx","pages/apps/Tasks/Board/index.tsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport classNames from \"classnames\";\n\ninterface DatepickerInputProps {\n  onClick?: () => void;\n  value?: string;\n  inputClass: string;\n  children?: React.ReactNode;\n}\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef<HTMLInputElement, DatepickerInputProps>(\n  (props, ref) => {\n    const onDateValueChange = () => {\n      console.log(\"date value changed\");\n    };\n    return (\n      <input\n        type=\"text\"\n        className={classNames(\"form-control\", props.inputClass)}\n        onClick={props.onClick}\n        value={props.value}\n        onChange={onDateValueChange}\n        ref={ref}\n      />\n    );\n  }\n);\n\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef<\n  HTMLInputElement,\n  DatepickerInputProps\n>((props, ref) => (\n  <div className=\"input-group input-group-sm\" ref={ref}>\n    <input\n      type=\"text\"\n      className={classNames(\"form-control\", props.inputClass)}\n      onClick={props.onClick}\n      value={props.value}\n      readOnly\n    />\n    <span className=\"input-group-text bg-blue border-blue text-white\">\n      <i className=\"mdi mdi-calendar-range\"></i>\n    </span>\n  </div>\n));\n\ninterface ShreyuDatepickerProps {\n  value?: Date;\n  selectsRange?: boolean;\n  startDate?: Date;\n  endDate?: Date;\n  calendarClassName?: string;\n  onChange: (date: any) => void;\n  hideAddon?: boolean;\n  inputClass?: string;\n  dateFormat?: string;\n  minDate?: Date;\n  maxDate?: Date;\n  showTimeSelect?: boolean;\n  tI?: number;\n  timeCaption?: string;\n  timeFormat?: string;\n  showTimeSelectOnly?: boolean;\n  monthsShown?: number;\n  inline?: boolean;\n}\n\nconst ShreyuDatepicker = (props: ShreyuDatepickerProps) => {\n  // handle custom input\n  const input =\n    (props.hideAddon || false) === true ? (\n      <DatepickerInput inputClass={props.inputClass!} />\n    ) : (\n      <DatepickerInputWithAddon inputClass={props.inputClass!} />\n    );\n\n  return (\n    <>\n      {/* date picker control */}\n      <DatePicker\n        calendarClassName={props.calendarClassName || \"shadow\"}\n        selectsRange={props.selectsRange}\n        startDate={props.startDate}\n        endDate={props.endDate}\n        selected={props.value}\n        onChange={(date) => props.onChange(date)}\n        customInput={input}\n        timeIntervals={props.tI}\n        showTimeSelect={props.showTimeSelect}\n        timeFormat={props.timeFormat || \"hh:mm a\"}\n        timeCaption={props.timeCaption}\n        dateFormat={props.dateFormat || \"MM/dd/yyyy\"}\n        minDate={props.minDate}\n        maxDate={props.maxDate}\n        monthsShown={props.monthsShown}\n        showTimeSelectOnly={props.showTimeSelectOnly}\n        inline={props.inline}\n        autoComplete=\"off\"\n      />\n    </>\n  );\n};\n\nexport default ShreyuDatepicker;\n","import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <h4 className=\"page-title\">{props.title}</h4>\n          <div className=\"page-title-right\">\n            <Breadcrumb listProps={{ className: \"m-0 flex-col\" }}>\n              <Breadcrumb.Item href=\"/\">Shreyu</Breadcrumb.Item>\n\n              {(props.breadCrumbItems || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React from \"react\";\nimport { useForm, Resolver, SubmitHandler } from \"react-hook-form\";\n\ninterface VerticalFromProps<TFormValues> {\n  defaultValues?: any;\n  resolver?: Resolver<TFormValues>;\n  children?: any;\n  onSubmit: SubmitHandler<TFormValues>;\n  formClass?: string;\n}\n\nconst VerticalForm = <\n  TFormValues extends Record<string, any> = Record<string, any>\n>({\n  defaultValues,\n  resolver,\n  children,\n  onSubmit,\n  formClass,\n}: VerticalFromProps<TFormValues>) => {\n  /*\n   * form methods\n   */\n  const methods = useForm<TFormValues>({ defaultValues, resolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n  } = methods;\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className={formClass} noValidate>\n      {Array.isArray(children)\n        ? children.map((child) => {\n            return child.props && child.props.name\n              ? React.createElement(child.type, {\n                  ...{\n                    ...child.props,\n                    register,\n                    key: child.props.name,\n                    errors,\n                    control,\n                  },\n                })\n              : child;\n          })\n        : children}\n    </form>\n  );\n};\n\nexport default VerticalForm;\n","import React, { InputHTMLAttributes } from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\n\nimport { FieldErrors, Control } from \"react-hook-form\";\n\ninterface FormInputProps extends InputHTMLAttributes<HTMLInputElement> {\n  startIcon?: any;\n  label?: string;\n  type?: string;\n  name: string;\n  comp?: string;\n  placeholder?: string;\n  register?: any;\n  errors?: FieldErrors;\n  control?: Control<any>;\n  className?: string;\n  labelClassName?: string;\n  containerClass?: string;\n  textClassName?: string;\n  refCallback?: any;\n  action?: any;\n  rows?: string | number;\n}\n\n// textual form-controls—like inputs, passwords, textareas etc.\nconst TextualInput = ({\n  type,\n  name,\n  placeholder,\n  register,\n  errors,\n  comp,\n  rows,\n  className,\n  refCallback,\n  ...otherProps\n}: FormInputProps) => {\n  return (\n    <>\n      <Form.Control\n        type={type}\n        placeholder={placeholder}\n        name={name}\n        as={comp}\n        id={name}\n        ref={(r: HTMLInputElement) => {\n          if (refCallback) refCallback(r);\n        }}\n        className={className}\n        isInvalid={errors && errors[name] ? true : false}\n        {...(register ? register(name) : {})}\n        rows={rows}\n        {...otherProps}\n      ></Form.Control>\n\n      {errors && errors[name] ? (\n        <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n          {errors[name][\"message\"]}\n        </Form.Control.Feedback>\n      ) : null}\n    </>\n  );\n};\n\n// non-textual checkbox and radio controls\nconst CheckInput = ({\n  type,\n  label,\n  name,\n  placeholder,\n  register,\n  errors,\n  comp,\n  rows,\n  className,\n  refCallback,\n  ...otherProps\n}: FormInputProps) => {\n  return (\n    <>\n      <Form.Check\n        type={type}\n        label={label}\n        name={name}\n        id={name}\n        ref={(r: HTMLInputElement) => {\n          if (refCallback) refCallback(r);\n        }}\n        className={className}\n        isInvalid={errors && errors[name] ? true : false}\n        {...(register ? register(name) : {})}\n        {...otherProps}\n      />\n\n      {errors && errors[name] ? (\n        <Form.Control.Feedback type=\"invalid\">\n          {errors[name][\"message\"]}\n        </Form.Control.Feedback>\n      ) : null}\n    </>\n  );\n};\n\n// handle select controls\nconst SelectInput = ({\n  type,\n  label,\n  name,\n  placeholder,\n  register,\n  errors,\n  comp,\n  rows,\n  className,\n  refCallback,\n  ...otherProps\n}: FormInputProps) => {\n  return (\n    <>\n      <Form.Select\n        type={type}\n        label={label}\n        name={name}\n        id={name}\n        ref={(r: HTMLInputElement) => {\n          if (refCallback) refCallback(r);\n        }}\n        className={className}\n        isInvalid={errors && errors[name] ? true : false}\n        {...(register ? register(name) : {})}\n        {...otherProps}\n      />\n\n      {errors && errors[name] ? (\n        <Form.Control.Feedback type=\"invalid\">\n          {errors[name][\"message\"]}\n        </Form.Control.Feedback>\n      ) : null}\n    </>\n  );\n};\n\n// extend textual form-controls with add-ons\nconst FormInputGroup = ({\n  startIcon,\n  type,\n  name,\n  placeholder,\n  comp,\n  register,\n  errors,\n  rows,\n  className,\n  textClassName,\n  refCallback,\n  ...otherProps\n}: FormInputProps) => {\n  return (\n    <InputGroup>\n      <InputGroup.Text className={textClassName}>{startIcon}</InputGroup.Text>\n      {type === \"select\" ? (\n        <SelectInput\n          type={type}\n          name={name}\n          placeholder={placeholder}\n          refCallback={refCallback}\n          comp={comp}\n          errors={errors}\n          register={register}\n          className={className}\n          rows={rows}\n          {...otherProps}\n        />\n      ) : (\n        <TextualInput\n          type={type}\n          name={name}\n          placeholder={placeholder}\n          refCallback={refCallback}\n          comp={comp}\n          errors={errors}\n          register={register}\n          className={className}\n          rows={rows}\n          {...otherProps}\n        />\n      )}\n    </InputGroup>\n  );\n};\n\nconst FormInput = ({\n  startIcon,\n  label,\n  type,\n  name,\n  placeholder,\n  register,\n  errors,\n  control,\n  className,\n  labelClassName,\n  containerClass,\n  textClassName,\n  refCallback,\n  action,\n  rows,\n  ...otherProps\n}: FormInputProps) => {\n  // handle input type\n  const comp =\n    type === \"textarea\" ? \"textarea\" : type === \"select\" ? \"select\" : \"input\";\n\n  return (\n    <>\n      {type === \"hidden\" ? (\n        <input\n          type={type}\n          name={name}\n          {...(register ? register(name) : {})}\n          {...otherProps}\n        />\n      ) : (\n        <>\n          {type === \"checkbox\" || type === \"radio\" ? (\n            <Form.Group className={containerClass}>\n              <CheckInput\n                type={type}\n                label={label}\n                name={name}\n                placeholder={placeholder}\n                refCallback={refCallback}\n                errors={errors}\n                register={register}\n                comp={comp}\n                className={className}\n                rows={rows}\n                {...otherProps}\n              />\n            </Form.Group>\n          ) : type === \"select\" ? (\n            <Form.Group className={containerClass}>\n              {label ? (\n                <>\n                  <Form.Label className={labelClassName}>{label}</Form.Label>\n                  {action && action}\n                </>\n              ) : null}\n              {startIcon ? (\n                <FormInputGroup\n                  type={type}\n                  startIcon={startIcon}\n                  name={name}\n                  comp={comp}\n                  textClassName={textClassName}\n                  placeholder={placeholder}\n                  refCallback={refCallback}\n                  errors={errors}\n                  register={register}\n                  className={className}\n                  rows={rows}\n                  {...otherProps}\n                />\n              ) : (\n                <SelectInput\n                  type={type}\n                  name={name}\n                  placeholder={placeholder}\n                  refCallback={refCallback}\n                  errors={errors}\n                  register={register}\n                  comp={comp}\n                  className={className}\n                  rows={rows}\n                  {...otherProps}\n                />\n              )}\n            </Form.Group>\n          ) : (\n            <Form.Group className={containerClass}>\n              {label ? (\n                <>\n                  <Form.Label className={labelClassName}>{label}</Form.Label>\n                  {action && action}\n                </>\n              ) : null}\n              {startIcon ? (\n                <FormInputGroup\n                  type={type}\n                  startIcon={startIcon}\n                  name={name}\n                  comp={comp}\n                  textClassName={textClassName}\n                  placeholder={placeholder}\n                  refCallback={refCallback}\n                  errors={errors}\n                  register={register}\n                  className={className}\n                  rows={rows}\n                  {...otherProps}\n                />\n              ) : (\n                <TextualInput\n                  type={type}\n                  name={name}\n                  placeholder={placeholder}\n                  refCallback={refCallback}\n                  errors={errors}\n                  register={register}\n                  comp={comp}\n                  className={className}\n                  rows={rows}\n                  {...otherProps}\n                />\n              )}\n            </Form.Group>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default FormInput;\n","import React from \"react\";\nimport { Card, Col, Dropdown, Row, Button } from \"react-bootstrap\";\nimport FeatherIcons from \"feather-icons-react\";\n\ninterface TaskDetailsProps {\n  newTask: (status: string, queue: string) => void;\n}\n\nconst TaskDetails = ({ newTask }: TaskDetailsProps) => {\n  return (\n    <Row>\n      <Col xs={12}>\n        <Card>\n          <Card.Body>\n            <Row className=\"align-items-center\">\n              <Col sm={\"auto\"}>\n                <label className=\"fw-bold d-inline-flex me-2\">\n                  <FeatherIcons\n                    icon=\"hard-drive\"\n                    className=\"icon-dual icon-xs me-2\"\n                  />\n                  Project :\n                </label>\n\n                <Dropdown className=\"d-inline-flex\">\n                  <Dropdown.Toggle\n                    as=\"a\"\n                    href=\"#\"\n                    className=\"cursor-pointer fw-bold\"\n                  >\n                    Shreyu Design\n                    <i className=\"uil uil-angle-down fs-16 align-middle\"></i>\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item>\n                      <FeatherIcons\n                        className=\"icon-dual icon-xs me-2\"\n                        icon=\"hard-drive\"\n                      ></FeatherIcons>\n                      Shreyu Design\n                    </Dropdown.Item>\n                    <Dropdown.Item>\n                      <FeatherIcons\n                        className=\"icon-dual icon-xs me-2\"\n                        icon=\"briefcase\"\n                      ></FeatherIcons>\n                      Development\n                    </Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item>\n                      <FeatherIcons\n                        className=\"icon-dual icon-xs me-2\"\n                        icon=\"folder-plus\"\n                      ></FeatherIcons>\n                      Shreyu Angular\n                    </Dropdown.Item>\n                    <Dropdown.Item>\n                      <FeatherIcons\n                        className=\"icon-dual icon-xs me-2\"\n                        icon=\"folder-plus\"\n                      ></FeatherIcons>\n                      Shreyu React\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n              <Col className=\"text-sm-end mt-sm-0 mt-2\">\n                <Button onClick={() => newTask(\"Pending\", \"todoTasks\")}>\n                  <i className=\"uil-plus me-1\"></i>Add New\n                </Button>\n              </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default TaskDetails;\n","import React from \"react\";\nimport { Card, Dropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// dummy data\nimport { TaskTypes } from \"./data\";\n\ninterface TaskItemProps {\n  task: TaskTypes;\n}\n\n// task item\nconst TaskItem = (props: TaskItemProps) => {\n  const task = props.task || {};\n\n  return (\n    <div className=\"task-list-items\">\n      <Card className=\"border mb-0\">\n        <Card.Body className=\"p-3\">\n          <Dropdown className=\"float-end\" align=\"end\">\n            <Dropdown.Toggle\n              as=\"a\"\n              className=\"cursor-pointer text-muted arrow-none\"\n            >\n              <i className=\"uil uil-ellipsis-v fs-14\"></i>\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              <Dropdown.Item>\n                <i className=\"uil uil-edit-alt me-2\"></i>Edit\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <i className=\"uil uil-user-plus me-2\"></i>Add People\n              </Dropdown.Item>\n              <Dropdown.Item className=\"text-warning\">\n                <i className=\"uil uil-exit me-2\"></i>Leave\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item className=\"text-danger\">\n                <i className=\"uil uil-trash me-2\"></i>Delete\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n\n          <h6 className=\"mt-0 mb-2 fs-15\">\n            <Link to=\"#\" className=\"text-body\">\n              {task.title}\n            </Link>\n          </h6>\n\n          <span\n            className={classNames(\"badge\", {\n              \"badge-soft-danger\": task.priority === \"High\",\n              \"badge-soft-warning\": task.priority === \"Medium\",\n              \"badge-soft-success\": task.priority === \"Low\",\n            })}\n          >\n            {task.priority}\n          </span>\n\n          <p className=\"mb-0 mt-4\">\n            <img\n              src={task.userAvatar}\n              alt=\"\"\n              className=\"avatar-xs rounded-circle me-2\"\n            />\n\n            <span className=\"text-nowrap align-middle fs-13 me-2\">\n              <i className=\"uil uil-comments-alt text-muted me-1\"></i>\n              {task.totalComments}\n            </span>\n\n            <span className=\"text-nowrap align-middle fs-13\">\n              <i className=\"uil uil-check-square me-1 text-muted\"></i>\n              {task.subTaskCompleted}/{task.totalSubTasks}\n            </span>\n            <small className=\"float-end text-muted\">{task.dueDate}</small>\n          </p>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default TaskItem;\n","import React from \"react\";\nimport { Modal, Button, Row, Col } from \"react-bootstrap\";\nimport { UseFormHandleSubmit, FieldErrors, Control } from \"react-hook-form\";\n\n// components\nimport ShreyuDatepicker from \"../../../../components/Datepicker\";\nimport { FormInput } from \"../../../../components/\";\n\ninterface AddNewTaskProps {\n  newTaskModal: boolean;\n  toggleNewTaskModal: () => void;\n  handleNewTask: (values: any) => void;\n  handleSubmit: UseFormHandleSubmit<any>;\n  newTaskDetails: any;\n  handleDateChange: (date: Date) => void;\n  errors: FieldErrors;\n  control?: Control<any>;\n  register?: any;\n}\n\nconst AddNewTask = ({\n  newTaskModal,\n  toggleNewTaskModal,\n  handleNewTask,\n  handleSubmit,\n  newTaskDetails,\n  handleDateChange,\n  register,\n  errors,\n  control,\n}: AddNewTaskProps) => {\n  return (\n    <Modal show={newTaskModal} onHide={toggleNewTaskModal} size=\"lg\" centered>\n      <Modal.Header closeButton>\n        <h4 className=\"modal-title\">Create New Task</h4>\n      </Modal.Header>\n      <Modal.Body>\n        <form onSubmit={handleSubmit(handleNewTask)} className=\"px-2\">\n          <FormInput\n            name=\"title\"\n            label=\"Title\"\n            placeholder=\"Enter title\"\n            type=\"text\"\n            containerClass=\"mb-3\"\n            register={register}\n            key=\"title\"\n            errors={errors}\n            control={control}\n          />\n\n          <FormInput\n            name=\"description\"\n            label=\"Description\"\n            type=\"textarea\"\n            containerClass=\"mb-3\"\n            rows=\"3\"\n            register={register}\n            key=\"description\"\n            errors={errors}\n            control={control}\n          />\n\n          <Row>\n            <Col md={6}>\n              <FormInput\n                name=\"priority\"\n                label=\"Priority\"\n                type=\"select\"\n                containerClass=\"mb-3\"\n                register={register}\n                key=\"priority\"\n                errors={errors}\n                control={control}\n                defaultValue=\"High\"\n              >\n                <option value=\"Low\">Low</option>\n                <option value=\"Medium\">Medium</option>\n                <option value=\"High\">High</option>\n              </FormInput>\n            </Col>\n            <Col md={6}>\n              <div className=\"form-group\">\n                <label className=\"form-label\">Due Date</label> <br />\n                <ShreyuDatepicker\n                  hideAddon\n                  dateFormat=\"yyyy-MM-dd\"\n                  value={newTaskDetails.dueDate}\n                  onChange={(date) => {\n                    handleDateChange(date);\n                  }}\n                />\n              </div>\n            </Col>\n          </Row>\n\n          <div className=\"text-end\">\n            <Button\n              variant=\"light\"\n              className=\"me-1\"\n              onClick={toggleNewTaskModal}\n            >\n              Cancel\n            </Button>\n            <Button variant=\"primary\" type=\"submit\">\n              Create\n            </Button>\n          </div>\n        </form>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default AddNewTask;\n","// images\nimport avatar2 from \"../../../../assets/images/users/avatar-2.jpg\";\nimport avatar3 from \"../../../../assets/images/users/avatar-3.jpg\";\nimport avatar4 from \"../../../../assets/images/users/avatar-4.jpg\";\nimport avatar5 from \"../../../../assets/images/users/avatar-5.jpg\";\nimport avatar6 from \"../../../../assets/images/users/avatar-6.jpg\";\nimport avatar7 from \"../../../../assets/images/users/avatar-7.jpg\";\nimport avatar8 from \"../../../../assets/images/users/avatar-8.jpg\";\n\nexport interface TaskTypes {\n  id: number;\n  title: string;\n  status: string;\n  priority: string;\n  userAvatar: string;\n  totalComments: number;\n  totalSubTasks: number;\n  subTaskCompleted: number;\n  dueDate: string;\n}\n\nconst tasks: TaskTypes[] = [\n  {\n    id: 1,\n    title: \"Ubold v3.0 - Redesign\",\n    status: \"Pending\",\n    priority: \"High\",\n    userAvatar: avatar5,\n    totalComments: 28,\n    totalSubTasks: 10,\n    subTaskCompleted: 1,\n    dueDate: \"Jul 18, 2019\",\n  },\n  {\n    id: 2,\n    title: \"Minton v3.0 - Redesign\",\n    status: \"Inprogress\",\n    priority: \"Low\",\n    userAvatar: avatar6,\n    totalComments: 21,\n    totalSubTasks: 7,\n    subTaskCompleted: 4,\n    dueDate: \"Jul 20, 2019\",\n  },\n  {\n    id: 3,\n    title: \"Shreyu v2.1 - Angular and Django\",\n    status: \"Review\",\n    priority: \"Low\",\n    userAvatar: avatar2,\n    totalComments: 24,\n    totalSubTasks: 2,\n    subTaskCompleted: 1,\n    dueDate: \"Jul 21, 2019\",\n  },\n  {\n    id: 4,\n    title: \"Shreyu v2.1 - React, Webpack\",\n    status: \"Done\",\n    priority: \"High\",\n    userAvatar: avatar7,\n    totalComments: 21,\n    totalSubTasks: 5,\n    subTaskCompleted: 5,\n    dueDate: \"Jul 22, 2019\",\n  },\n  {\n    id: 5,\n    title: \"Shreyu 2.2 - Vue.Js and Laravel\",\n    status: \"Pending\",\n    priority: \"Low\",\n    userAvatar: avatar3,\n    totalComments: 2,\n    totalSubTasks: 5,\n    subTaskCompleted: 2,\n    dueDate: \"Jul 18, 2019\",\n  },\n  {\n    id: 6,\n    title: \"Shreyu 2.3 - Rails, NodeJs, Mean\",\n    status: \"Pending\",\n    priority: \"Medium\",\n    userAvatar: avatar4,\n    totalComments: 24,\n    totalSubTasks: 8,\n    subTaskCompleted: 2,\n    dueDate: \"Jul 21, 2019\",\n  },\n  {\n    id: 7,\n    title: \"Shreyu - Landing page and UI Kit\",\n    status: \"Review\",\n    priority: \"Medium\",\n    userAvatar: avatar7,\n    totalComments: 11,\n    totalSubTasks: 6,\n    subTaskCompleted: 4,\n    dueDate: \"Jul 10, 2019\",\n  },\n  {\n    id: 8,\n    title: \"Shreyu 3.0 - Scoping\",\n    status: \"Inprogress\",\n    priority: \"High\",\n    userAvatar: avatar8,\n    totalComments: 10,\n    totalSubTasks: 4,\n    subTaskCompleted: 3,\n    dueDate: \"Jul 24, 2019\",\n  },\n];\n\nexport { tasks };\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Row, Col, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n} from \"react-beautiful-dnd\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\n// components\nimport PageTitle from \"../../../../components/PageTitle\";\n\nimport TaskDetails from \"./TaskDetails\";\nimport TaskItem from \"./Task\";\nimport AddNewTask from \"./AddNewTask\";\n\n// dummy data\nimport { tasks, TaskTypes } from \"./data\";\n\n// images\nimport defaultAvatar from \"../../../../assets/images/users/avatar-1.jpg\";\n\ninterface StateType {\n  todoTasks: TaskTypes[];\n  inprogressTasks: TaskTypes[];\n  reviewTasks: TaskTypes[];\n  doneTasks: TaskTypes[];\n}\n\n// kanban\nconst Kanban = () => {\n  const [state, setState] = useState<StateType>({\n    todoTasks: tasks.filter((t) => t.status === \"Pending\"),\n    inprogressTasks: tasks.filter((t) => t.status === \"Inprogress\"),\n    reviewTasks: tasks.filter((t) => t.status === \"Review\"),\n    doneTasks: tasks.filter((t) => t.status === \"Done\"),\n  });\n  const [totalTasks, setTotalTasks] = useState<number>(tasks.length);\n  const [newTaskModal, setNewTaskModal] = useState<boolean>(false);\n  const [newTaskDetails, setNewTaskDetails] = useState<any>(null);\n\n  /*\n   * Form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      title: yup.string().required(),\n      priority: yup.string().required(),\n    })\n  );\n\n  /*\n   * Form methods\n   */\n  const methods = useForm({ resolver: schemaResolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    reset,\n    formState: { errors },\n  } = methods;\n\n  /**\n   * Toggles the new task modal\n   */\n  const toggleNewTaskModal = () => {\n    setNewTaskModal((prevstate) => !prevstate);\n  };\n\n  /**\n   * Creates new empty task with given status\n   * @param status\n   * @param queue\n   */\n  const newTask = (status: string, queue: string) => {\n    setNewTaskDetails({\n      dueDate: new Date(),\n      userAvatar: [defaultAvatar],\n      status: status,\n      queue: queue,\n    });\n    setNewTaskModal(true);\n  };\n\n  /**\n   * When date changes\n   * @param {} date\n   */\n  const handleDateChange = (date: Date) => {\n    if (newTaskDetails) {\n      setNewTaskDetails({ ...newTaskDetails, dueDate: date });\n    }\n  };\n\n  // a little function to help us with reordering the result\n  const reorder = (list: any[], startIndex: number, endIndex: number) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n  };\n\n  /**\n   * Moves an item from one list to another list.\n   */\n  const move = (\n    source: Iterable<unknown> | ArrayLike<unknown>,\n    destination: Iterable<unknown> | ArrayLike<unknown>,\n    droppableSource: { index: number; droppableId: string | number },\n    droppableDestination: { index: number; droppableId: string | number }\n  ) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n    destClone.splice(droppableDestination.index, 0, removed);\n    const result: any = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n  };\n\n  /**\n   * Gets the list\n   */\n  const getList = (id: string) => {\n    const modifiedState: any = { ...state };\n    const stateTasks: any = modifiedState[id] && modifiedState[id];\n    return stateTasks;\n  };\n\n  /**\n   * On drag end\n   */\n  const onDragEnd = (result: DropResult) => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder(\n        getList(source.droppableId),\n        source.index,\n        destination.index\n      );\n      let localState: any = { ...state };\n      localState[source.droppableId] = items;\n      setState(localState);\n    } else {\n      const result = move(\n        getList(source.droppableId),\n        getList(destination.droppableId),\n        source,\n        destination\n      );\n      const localState = { ...state, ...result };\n      setState(localState);\n    }\n  };\n\n  /**\n   * Handles the new task form submission\n   */\n  const handleNewTask = (values: any) => {\n    const formData = {\n      title: values[\"title\"],\n      priority: values[\"priority\"],\n    };\n\n    const newTask = {\n      ...newTaskDetails,\n      ...formData,\n      id: totalTasks + 1,\n      dueDate: newTaskDetails.dueDate.toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      }),\n      totalComments: 18,\n      totalSubTasks: 12,\n      subTaskCompleted: 2,\n    };\n\n    let modifiedState: any = { ...state };\n    let tasks = [...getList(newTaskDetails.queue), newTask];\n    modifiedState[newTaskDetails.queue] = [...tasks];\n\n    setState(modifiedState);\n    setNewTaskModal(false);\n    setTotalTasks(totalTasks + 1);\n    reset();\n  };\n\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Tasks\", path: \"apps/tasks/kanban\" },\n          { label: \"Kanban Board\", path: \"apps/tasks/kanban\", active: true },\n        ]}\n        title={\"Kanban Board\"}\n      />\n\n      <TaskDetails newTask={newTask} />\n\n      <Row>\n        <Col xs={12}>\n          <DragDropContext onDragEnd={onDragEnd}>\n            <div className=\"board\">\n              {/* todo */}\n              <Droppable droppableId=\"todoTasks\">\n                {(provided, snapshot) => (\n                  <div className=\"tasks border\" ref={provided.innerRef}>\n                    <OverlayTrigger\n                      key=\"bottom\"\n                      placement=\"bottom\"\n                      overlay={<Tooltip>Add New Todo Task</Tooltip>}\n                    >\n                      <button\n                        className=\"btn btn-link p-0 text-secondary float-end shadow-none px-0 py-2\"\n                        id=\"addNewTodo\"\n                        onClick={() => newTask(\"Pending\", \"todoTasks\")}\n                      >\n                        <i className=\"uil-plus\"></i>\n                      </button>\n                    </OverlayTrigger>\n                    <h5 className=\"mt-0 task-header header-title\">\n                      TODO{\" \"}\n                      <span className=\"fs-13\">({state.todoTasks.length})</span>\n                    </h5>\n\n                    {state.todoTasks.length === 0 && (\n                      <p className=\"text-center text-muted pt-2 mb-0\">\n                        No Tasks\n                      </p>\n                    )}\n\n                    {state.todoTasks.map((item, index) => (\n                      <Draggable\n                        key={item.id}\n                        draggableId={item.id + \"\"}\n                        index={index}\n                      >\n                        {(provided, snapshot) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                          >\n                            <TaskItem task={item} />\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n\n              {/* in progress */}\n              <Droppable droppableId=\"inprogressTasks\">\n                {(provided, snapshot) => (\n                  <div ref={provided.innerRef} className=\"tasks border\">\n                    <OverlayTrigger\n                      key=\"bottom\"\n                      placement=\"bottom\"\n                      overlay={<Tooltip>Add New In Progress Task</Tooltip>}\n                    >\n                      <button\n                        className=\"btn btn-link p-0 text-secondary float-end shadow-none px-0 py-2\"\n                        id=\"addInprogressTask\"\n                        onClick={() => newTask(\"Inprogress\", \"inprogressTasks\")}\n                      >\n                        <i className=\"uil-plus\"></i>\n                      </button>\n                    </OverlayTrigger>\n                    <h5 className=\"mt-0 task-header header-title\">\n                      In Progress{\" \"}\n                      <span className=\"fs-13\">\n                        ({state.inprogressTasks.length})\n                      </span>\n                    </h5>\n                    {state.inprogressTasks.length === 0 && (\n                      <p className=\"text-center text-muted pt-2 mb-0\">\n                        No Tasks\n                      </p>\n                    )}\n\n                    {state.inprogressTasks.map((item, index) => (\n                      <Draggable\n                        key={item.id}\n                        draggableId={item.id + \"\"}\n                        index={index}\n                      >\n                        {(provided, snapshot) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                          >\n                            <TaskItem task={item} />\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n\n              {/* review */}\n              <Droppable droppableId=\"reviewTasks\">\n                {(provided, snapshot) => (\n                  <div ref={provided.innerRef} className=\"tasks\">\n                    <OverlayTrigger\n                      key=\"bottom\"\n                      placement=\"bottom\"\n                      overlay={<Tooltip>Add New Review Task</Tooltip>}\n                    >\n                      <button\n                        className=\"btn btn-link p-0 text-secondary float-end shadow-none px-0 py-2\"\n                        id=\"addReviewTask\"\n                        onClick={() => newTask(\"Review\", \"reviewTasks\")}\n                      >\n                        <i className=\"uil-plus\"></i>\n                      </button>\n                    </OverlayTrigger>\n                    <h5 className=\"mt-0 task-header header-title\">\n                      Review ({state.reviewTasks.length})\n                    </h5>\n                    {state.reviewTasks.length === 0 && (\n                      <p className=\"text-center text-muted pt-2 mb-0\">\n                        No Tasks\n                      </p>\n                    )}\n\n                    {state.reviewTasks.map((item, index) => (\n                      <Draggable\n                        key={item.id}\n                        draggableId={item.id + \"\"}\n                        index={index}\n                      >\n                        {(provided, snapshot) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                          >\n                            <TaskItem task={item} />\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n\n              {/* done */}\n              <Droppable droppableId=\"doneTasks\">\n                {(provided, snapshot) => (\n                  <div ref={provided.innerRef} className=\"tasks\">\n                    <OverlayTrigger\n                      key=\"bottom\"\n                      placement=\"bottom\"\n                      overlay={<Tooltip>Add New Done Task</Tooltip>}\n                    >\n                      <button\n                        className=\"btn btn-link p-0 text-secondary float-end shadow-none px-0 py-2\"\n                        id=\"addNewDone\"\n                        onClick={() => newTask(\"Done\", \"doneTasks\")}\n                      >\n                        <i className=\"uil-plus\"></i>\n                      </button>\n                    </OverlayTrigger>\n                    <h5 className=\"mt-0 task-header header-title\">\n                      Done ({state.doneTasks.length})\n                    </h5>\n                    {state.doneTasks.length === 0 && (\n                      <p className=\"text-center text-muted pt-2 mb-0\">\n                        No Tasks\n                      </p>\n                    )}\n\n                    {state.doneTasks.map((item, index) => (\n                      <Draggable\n                        key={item.id}\n                        draggableId={item.id + \"\"}\n                        index={index}\n                      >\n                        {(provided, snapshot) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                          >\n                            <TaskItem task={item} />\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </div>\n          </DragDropContext>\n        </Col>\n      </Row>\n\n      {/* add new task modal */}\n      {newTaskModal && (\n        <AddNewTask\n          newTaskModal={newTaskModal}\n          toggleNewTaskModal={toggleNewTaskModal}\n          handleNewTask={handleNewTask}\n          handleSubmit={handleSubmit}\n          newTaskDetails={newTaskDetails}\n          handleDateChange={handleDateChange}\n          register={register}\n          errors={errors}\n          control={control}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Kanban;\n"],"names":["DatepickerInput","forwardRef","props","ref","_jsx","type","className","classNames","inputClass","onClick","value","onChange","console","log","DatepickerInputWithAddon","_jsxs","children","readOnly","input","hideAddon","_Fragment","DatePicker","calendarClassName","selectsRange","startDate","endDate","selected","date","customInput","timeIntervals","tI","showTimeSelect","timeFormat","timeCaption","dateFormat","minDate","maxDate","monthsShown","showTimeSelectOnly","inline","autoComplete","Row","Col","title","Breadcrumb","listProps","href","breadCrumbItems","map","item","index","active","label","path","_ref","defaultValues","resolver","onSubmit","formClass","methods","useForm","handleSubmit","register","control","errors","formState","noValidate","Array","isArray","child","name","React","_objectSpread","key","TextualInput","placeholder","comp","rows","refCallback","otherProps","_objectWithoutProperties","_excluded","Form","as","id","r","isInvalid","CheckInput","_ref2","_excluded2","SelectInput","_ref3","_excluded3","FormInputGroup","_ref4","startIcon","textClassName","_excluded4","InputGroup","_ref5","labelClassName","containerClass","action","_excluded5","newTask","xs","Card","sm","FeatherIcons","icon","Dropdown","Button","task","align","Link","to","priority","src","userAvatar","alt","totalComments","subTaskCompleted","totalSubTasks","dueDate","newTaskModal","toggleNewTaskModal","handleNewTask","newTaskDetails","handleDateChange","Modal","show","onHide","size","centered","closeButton","FormInput","md","defaultValue","ShreyuDatepicker","variant","tasks","status","avatar5","avatar6","avatar2","avatar7","avatar3","avatar4","_useState","useState","todoTasks","filter","t","inprogressTasks","reviewTasks","doneTasks","_useState2","_slicedToArray","state","setState","_useState3","length","_useState4","totalTasks","setTotalTasks","_useState5","_useState6","setNewTaskModal","_useState7","_useState8","setNewTaskDetails","schemaResolver","yupResolver","yup","shape","required","reset","queue","Date","defaultAvatar","getList","modifiedState","PageTitle","TaskDetails","DragDropContext","onDragEnd","result","source","destination","droppableId","items","list","startIndex","endIndex","from","_result$splice","splice","removed","reorder","localState","droppableSource","droppableDestination","sourceClone","destClone","_sourceClone$splice","move","Droppable","provided","snapshot","innerRef","OverlayTrigger","placement","overlay","Tooltip","Draggable","draggableId","draggableProps","dragHandleProps","TaskItem","AddNewTask","prevstate","values","formData","toLocaleDateString","year","month","day","concat","_toConsumableArray"],"sourceRoot":""}