{"version":3,"file":"static/js/4850.963d4ec3.chunk.js","mappings":"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","sources":["components/Datepicker.tsx","components/PageTitle.tsx","pages/forms/Advanced.tsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport classNames from \"classnames\";\n\ninterface DatepickerInputProps {\n  onClick?: () => void;\n  value?: string;\n  inputClass: string;\n  children?: React.ReactNode;\n}\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef<HTMLInputElement, DatepickerInputProps>(\n  (props, ref) => {\n    const onDateValueChange = () => {\n      console.log(\"date value changed\");\n    };\n    return (\n      <input\n        type=\"text\"\n        className={classNames(\"form-control\", props.inputClass)}\n        onClick={props.onClick}\n        value={props.value}\n        onChange={onDateValueChange}\n        ref={ref}\n      />\n    );\n  }\n);\n\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef<\n  HTMLInputElement,\n  DatepickerInputProps\n>((props, ref) => (\n  <div className=\"input-group input-group-sm\" ref={ref}>\n    <input\n      type=\"text\"\n      className={classNames(\"form-control\", props.inputClass)}\n      onClick={props.onClick}\n      value={props.value}\n      readOnly\n    />\n    <span className=\"input-group-text bg-blue border-blue text-white\">\n      <i className=\"mdi mdi-calendar-range\"></i>\n    </span>\n  </div>\n));\n\ninterface ShreyuDatepickerProps {\n  value?: Date;\n  selectsRange?: boolean;\n  startDate?: Date;\n  endDate?: Date;\n  calendarClassName?: string;\n  onChange: (date: any) => void;\n  hideAddon?: boolean;\n  inputClass?: string;\n  dateFormat?: string;\n  minDate?: Date;\n  maxDate?: Date;\n  showTimeSelect?: boolean;\n  tI?: number;\n  timeCaption?: string;\n  timeFormat?: string;\n  showTimeSelectOnly?: boolean;\n  monthsShown?: number;\n  inline?: boolean;\n}\n\nconst ShreyuDatepicker = (props: ShreyuDatepickerProps) => {\n  // handle custom input\n  const input =\n    (props.hideAddon || false) === true ? (\n      <DatepickerInput inputClass={props.inputClass!} />\n    ) : (\n      <DatepickerInputWithAddon inputClass={props.inputClass!} />\n    );\n\n  return (\n    <>\n      {/* date picker control */}\n      <DatePicker\n        calendarClassName={props.calendarClassName || \"shadow\"}\n        selectsRange={props.selectsRange}\n        startDate={props.startDate}\n        endDate={props.endDate}\n        selected={props.value}\n        onChange={(date) => props.onChange(date)}\n        customInput={input}\n        timeIntervals={props.tI}\n        showTimeSelect={props.showTimeSelect}\n        timeFormat={props.timeFormat || \"hh:mm a\"}\n        timeCaption={props.timeCaption}\n        dateFormat={props.dateFormat || \"MM/dd/yyyy\"}\n        minDate={props.minDate}\n        maxDate={props.maxDate}\n        monthsShown={props.monthsShown}\n        showTimeSelectOnly={props.showTimeSelectOnly}\n        inline={props.inline}\n        autoComplete=\"off\"\n      />\n    </>\n  );\n};\n\nexport default ShreyuDatepicker;\n","import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <h4 className=\"page-title\">{props.title}</h4>\n          <div className=\"page-title-right\">\n            <Breadcrumb listProps={{ className: \"m-0 flex-col\" }}>\n              <Breadcrumb.Item href=\"/\">Shreyu</Breadcrumb.Item>\n\n              {(props.breadCrumbItems || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React, { useState } from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport MaskedInput from \"react-text-mask\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport ShreyuDatepicker from \"../../components/Datepicker\";\n\nconst ReactSelect = () => {\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">\n          <Link\n            rel=\"noreferrer\"\n            to={{ pathname: \"https://github.com/JedWatson/react-select\" }}\n            target=\"_blank\"\n          >\n            React select\n          </Link>\n        </h4>\n        <p className=\"mb-1 mt-3 fw-bold\">Single Selection</p>\n        <p className=\"text-muted fs-14\">React-Select based Select element</p>\n        <Select\n          className=\"react-select react-select-container\"\n          classNamePrefix=\"react-select\"\n          options={[\n            { value: \"chocolate\", label: \"Chocolate\" },\n            { value: \"strawberry\", label: \"Strawberry\" },\n            { value: \"vanilla\", label: \"Vanilla\" },\n          ]}\n        ></Select>\n\n        <p className=\"mb-1 mt-3 fw-bold\">Multiple Selection</p>\n        <p className=\"text-muted fs-14\">\n          React-Select based Select (Multiple) element\n        </p>\n        <Select\n          isMulti={true}\n          options={[\n            { value: \"chocolate\", label: \"Chocolate\" },\n            { value: \"strawberry\", label: \"Strawberry\" },\n            { value: \"vanilla\", label: \"Vanilla\" },\n          ]}\n          className=\"react-select react-select-container\"\n          classNamePrefix=\"react-select\"\n        ></Select>\n      </Card.Body>\n    </Card>\n  );\n};\n\ninterface OptionTypes {\n  id: number | string;\n  value: string;\n  label: string;\n}\nconst Typeaheads = () => {\n  const [singleSelections, setSingleSelections] = useState<OptionTypes[]>([]);\n  const [multiSelections, setMultiSelections] = useState<OptionTypes[]>([]);\n\n  const options: Array<OptionTypes> = [\n    { id: 1, value: \"chocolate\", label: \"Chocolate\" },\n    { id: 2, value: \"strawberry\", label: \"Strawberry\" },\n    { id: 3, value: \"vanilla\", label: \"Vanilla\" },\n  ];\n\n  const onChangeSingleSelection = (selected: OptionTypes[]) => {\n    setSingleSelections(selected);\n  };\n\n  const onChangeMultipleSelection = (selected: OptionTypes[]) => {\n    setMultiSelections(selected);\n  };\n\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">\n          <Link\n            rel=\"noreferrer\"\n            to={{\n              pathname: \"http://ericgio.github.io/react-bootstrap-typeahead/\",\n            }}\n            target=\"_blank\"\n          >\n            Typeahead\n          </Link>\n        </h4>\n        <p className=\"mb-1 mt-3 fw-bold\">Single Selection</p>\n        <p className=\"text-muted fs-14\">Typeahead based Select element</p>\n        <Typeahead\n          id=\"select2\"\n          labelKey={\"label\"}\n          multiple={false}\n          onChange={onChangeSingleSelection}\n          options={options}\n          placeholder=\"Choose a state...\"\n          selected={singleSelections}\n        />\n\n        <p className=\"mb-1 mt-3 fw-bold\">Multiple Selection</p>\n        <p className=\"text-muted fs-14\">\n          Typeahead based Select (Multiple) element\n        </p>\n        <Typeahead\n          id=\"select3\"\n          labelKey=\"label\"\n          multiple\n          onChange={onChangeMultipleSelection}\n          options={options}\n          placeholder=\"Choose a state...\"\n          selected={multiSelections}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst DatePickers = () => {\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date());\n\n  /*\n   * handle date change\n   */\n  const onDateChange = (date: Date) => {\n    if (date) {\n      setSelectedDate(date);\n    }\n  };\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">Date &amp; Time Picker</h4>\n        <p className=\"text-muted fs-14\">\n          A simple date picker using{\" \"}\n          <Link\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            to={{ pathname: \"https://reactdatepicker.com/\" }}\n          >\n            ReactJS Datepicker\n          </Link>\n        </p>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Single Date</label> <br />\n              <ShreyuDatepicker\n                hideAddon={true}\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">\n                Single Date with multiple months\n              </label>{\" \"}\n              <br />\n              <ShreyuDatepicker\n                hideAddon={true}\n                monthsShown={2}\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Custom date format</label> <br />\n              <ShreyuDatepicker\n                hideAddon={true}\n                dateFormat=\"yyyy-MM-dd\"\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Specific date range</label> <br />\n              <ShreyuDatepicker\n                hideAddon={true}\n                minDate={new Date()}\n                maxDate={new Date(new Date().setDate(new Date().getDate() + 7))}\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Select Time</label> <br />\n              <ShreyuDatepicker\n                hideAddon={true}\n                showTimeSelect\n                timeFormat=\"HH:mm\"\n                tI={60}\n                dateFormat=\"MMMM d, yyyy h:mm aa\"\n                timeCaption=\"time\"\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Time only</label> <br />\n              <ShreyuDatepicker\n                hideAddon={true}\n                showTimeSelect\n                showTimeSelectOnly\n                tI={60}\n                dateFormat=\"h:mm aa\"\n                timeCaption=\"Time\"\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst InputMasks = () => {\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">Input Masks</h4>\n        <p className=\"text-muted fs-14\">\n          Input masks by{\" \"}\n          <Link\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            to={{\n              pathname:\n                \"https://github.com/text-mask/text-mask/tree/master/react#readme\",\n            }}\n          >\n            react-text-mask\n          </Link>\n        </p>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Phone Number with Area Code</label>{\" \"}\n              <br />\n              <MaskedInput\n                mask={[\n                  \"(\",\n                  /[1-9]/,\n                  /\\d/,\n                  \")\",\n                  \" \",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  \"-\",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                ]}\n                placeholder=\"(__) ____-____\"\n                className=\"form-control\"\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">US Phone Number</label> <br />\n              <MaskedInput\n                mask={[\n                  \"(\",\n                  /[1-9]/,\n                  /\\d/,\n                  /\\d/,\n                  \")\",\n                  \" \",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  \"-\",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                ]}\n                placeholder=\"(___) ___-____\"\n                className=\"form-control\"\n              />\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Date</label> <br />\n              <MaskedInput\n                mask={[\n                  /\\d/,\n                  /\\d/,\n                  \"/\",\n                  /\\d/,\n                  /\\d/,\n                  \"/\",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                ]}\n                placeholder=\"__/__/____\"\n                className=\"form-control\"\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Time</label> <br />\n              <MaskedInput\n                mask={[/\\d/, /\\d/, \":\", /\\d/, /\\d/, \":\", /\\d/, /\\d/]}\n                placeholder=\"__:__:__\"\n                className=\"form-control\"\n              />\n            </div>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst FormAdvanced = () => {\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Forms\", path: \"/forms/advanced\" },\n          { label: \"Form Advanced\", path: \"/forms/advanced\", active: true },\n        ]}\n        title={\"Form Advanced\"}\n      />\n\n      <Row>\n        <Col lg={6}>\n          <ReactSelect />\n        </Col>\n        <Col lg={6}>\n          <Typeaheads />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <DatePickers />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <InputMasks />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default FormAdvanced;\n"],"names":["DatepickerInput","forwardRef","props","ref","_jsx","type","className","classNames","inputClass","onClick","value","onChange","console","log","DatepickerInputWithAddon","_jsxs","children","readOnly","input","hideAddon","_Fragment","DatePicker","calendarClassName","selectsRange","startDate","endDate","selected","date","customInput","timeIntervals","tI","showTimeSelect","timeFormat","timeCaption","dateFormat","minDate","maxDate","monthsShown","showTimeSelectOnly","inline","autoComplete","Row","Col","title","Breadcrumb","listProps","href","breadCrumbItems","map","item","index","active","label","path","ReactSelect","Card","Link","rel","to","pathname","target","Select","classNamePrefix","options","isMulti","Typeaheads","_useState","useState","_useState2","_slicedToArray","singleSelections","setSingleSelections","_useState3","_useState4","multiSelections","setMultiSelections","id","Typeahead","labelKey","multiple","placeholder","DatePickers","_useState5","Date","_useState6","selectedDate","setSelectedDate","onDateChange","lg","ShreyuDatepicker","setDate","getDate","InputMasks","MaskedInput","mask","React","PageTitle"],"sourceRoot":""}