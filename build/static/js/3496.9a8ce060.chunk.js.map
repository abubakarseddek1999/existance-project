{"version":3,"file":"static/js/3496.9a8ce060.chunk.js","mappings":"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","sources":["components/Loader.tsx","components/PageTitle.tsx","components/Scrollbar.tsx","components/VerticalForm.tsx","components/FormInput.tsx","pages/apps/Chat/data.tsx","pages/apps/Chat/ChatUsers.tsx","pages/apps/Chat/ProfileModal.tsx","pages/apps/Chat/VideocallModal.tsx","pages/apps/Chat/VoicecallModal.tsx","pages/apps/Chat/ChatArea.tsx","pages/apps/Chat/index.tsx","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/Collapse.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React from \"react\";\n\n/**\n * Renders the preloader\n */\nconst Loader = () => {\n  return (\n    <div className=\"preloader\" id=\"preloader\">\n      <div className=\"status\" id=\"status\">\n        <div className=\"spinner\">\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <h4 className=\"page-title\">{props.title}</h4>\n          <div className=\"page-title-right\">\n            <Breadcrumb listProps={{ className: \"m-0 flex-col\" }}>\n              <Breadcrumb.Item href=\"/\">Shreyu</Breadcrumb.Item>\n\n              {(props.breadCrumbItems || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React from \"react\";\nimport SimpleBar from \"simplebar-react\";\n\ninterface ScrollbarProps extends SimpleBar.Props {\n  className?: string;\n  style?: any;\n  children?: any;\n}\n\nconst Scrollbar = ({\n  className,\n  style,\n  children,\n  ...otherProps\n}: ScrollbarProps) => {\n  return (\n    <SimpleBar className={className} style={style} {...otherProps}>\n      {children}\n    </SimpleBar>\n  );\n};\n\nexport default Scrollbar;\n","import React from \"react\";\nimport { useForm, Resolver, SubmitHandler } from \"react-hook-form\";\n\ninterface VerticalFromProps<TFormValues> {\n  defaultValues?: any;\n  resolver?: Resolver<TFormValues>;\n  children?: any;\n  onSubmit: SubmitHandler<TFormValues>;\n  formClass?: string;\n}\n\nconst VerticalForm = <\n  TFormValues extends Record<string, any> = Record<string, any>\n>({\n  defaultValues,\n  resolver,\n  children,\n  onSubmit,\n  formClass,\n}: VerticalFromProps<TFormValues>) => {\n  /*\n   * form methods\n   */\n  const methods = useForm<TFormValues>({ defaultValues, resolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n  } = methods;\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className={formClass} noValidate>\n      {Array.isArray(children)\n        ? children.map((child) => {\n            return child.props && child.props.name\n              ? React.createElement(child.type, {\n                  ...{\n                    ...child.props,\n                    register,\n                    key: child.props.name,\n                    errors,\n                    control,\n                  },\n                })\n              : child;\n          })\n        : children}\n    </form>\n  );\n};\n\nexport default VerticalForm;\n","import React, { InputHTMLAttributes } from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\n\nimport { FieldErrors, Control } from \"react-hook-form\";\n\ninterface FormInputProps extends InputHTMLAttributes<HTMLInputElement> {\n  startIcon?: any;\n  label?: string;\n  type?: string;\n  name: string;\n  comp?: string;\n  placeholder?: string;\n  register?: any;\n  errors?: FieldErrors;\n  control?: Control<any>;\n  className?: string;\n  labelClassName?: string;\n  containerClass?: string;\n  textClassName?: string;\n  refCallback?: any;\n  action?: any;\n  rows?: string | number;\n}\n\n// textual form-controls—like inputs, passwords, textareas etc.\nconst TextualInput = ({\n  type,\n  name,\n  placeholder,\n  register,\n  errors,\n  comp,\n  rows,\n  className,\n  refCallback,\n  ...otherProps\n}: FormInputProps) => {\n  return (\n    <>\n      <Form.Control\n        type={type}\n        placeholder={placeholder}\n        name={name}\n        as={comp}\n        id={name}\n        ref={(r: HTMLInputElement) => {\n          if (refCallback) refCallback(r);\n        }}\n        className={className}\n        isInvalid={errors && errors[name] ? true : false}\n        {...(register ? register(name) : {})}\n        rows={rows}\n        {...otherProps}\n      ></Form.Control>\n\n      {errors && errors[name] ? (\n        <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n          {errors[name][\"message\"]}\n        </Form.Control.Feedback>\n      ) : null}\n    </>\n  );\n};\n\n// non-textual checkbox and radio controls\nconst CheckInput = ({\n  type,\n  label,\n  name,\n  placeholder,\n  register,\n  errors,\n  comp,\n  rows,\n  className,\n  refCallback,\n  ...otherProps\n}: FormInputProps) => {\n  return (\n    <>\n      <Form.Check\n        type={type}\n        label={label}\n        name={name}\n        id={name}\n        ref={(r: HTMLInputElement) => {\n          if (refCallback) refCallback(r);\n        }}\n        className={className}\n        isInvalid={errors && errors[name] ? true : false}\n        {...(register ? register(name) : {})}\n        {...otherProps}\n      />\n\n      {errors && errors[name] ? (\n        <Form.Control.Feedback type=\"invalid\">\n          {errors[name][\"message\"]}\n        </Form.Control.Feedback>\n      ) : null}\n    </>\n  );\n};\n\n// handle select controls\nconst SelectInput = ({\n  type,\n  label,\n  name,\n  placeholder,\n  register,\n  errors,\n  comp,\n  rows,\n  className,\n  refCallback,\n  ...otherProps\n}: FormInputProps) => {\n  return (\n    <>\n      <Form.Select\n        type={type}\n        label={label}\n        name={name}\n        id={name}\n        ref={(r: HTMLInputElement) => {\n          if (refCallback) refCallback(r);\n        }}\n        className={className}\n        isInvalid={errors && errors[name] ? true : false}\n        {...(register ? register(name) : {})}\n        {...otherProps}\n      />\n\n      {errors && errors[name] ? (\n        <Form.Control.Feedback type=\"invalid\">\n          {errors[name][\"message\"]}\n        </Form.Control.Feedback>\n      ) : null}\n    </>\n  );\n};\n\n// extend textual form-controls with add-ons\nconst FormInputGroup = ({\n  startIcon,\n  type,\n  name,\n  placeholder,\n  comp,\n  register,\n  errors,\n  rows,\n  className,\n  textClassName,\n  refCallback,\n  ...otherProps\n}: FormInputProps) => {\n  return (\n    <InputGroup>\n      <InputGroup.Text className={textClassName}>{startIcon}</InputGroup.Text>\n      {type === \"select\" ? (\n        <SelectInput\n          type={type}\n          name={name}\n          placeholder={placeholder}\n          refCallback={refCallback}\n          comp={comp}\n          errors={errors}\n          register={register}\n          className={className}\n          rows={rows}\n          {...otherProps}\n        />\n      ) : (\n        <TextualInput\n          type={type}\n          name={name}\n          placeholder={placeholder}\n          refCallback={refCallback}\n          comp={comp}\n          errors={errors}\n          register={register}\n          className={className}\n          rows={rows}\n          {...otherProps}\n        />\n      )}\n    </InputGroup>\n  );\n};\n\nconst FormInput = ({\n  startIcon,\n  label,\n  type,\n  name,\n  placeholder,\n  register,\n  errors,\n  control,\n  className,\n  labelClassName,\n  containerClass,\n  textClassName,\n  refCallback,\n  action,\n  rows,\n  ...otherProps\n}: FormInputProps) => {\n  // handle input type\n  const comp =\n    type === \"textarea\" ? \"textarea\" : type === \"select\" ? \"select\" : \"input\";\n\n  return (\n    <>\n      {type === \"hidden\" ? (\n        <input\n          type={type}\n          name={name}\n          {...(register ? register(name) : {})}\n          {...otherProps}\n        />\n      ) : (\n        <>\n          {type === \"checkbox\" || type === \"radio\" ? (\n            <Form.Group className={containerClass}>\n              <CheckInput\n                type={type}\n                label={label}\n                name={name}\n                placeholder={placeholder}\n                refCallback={refCallback}\n                errors={errors}\n                register={register}\n                comp={comp}\n                className={className}\n                rows={rows}\n                {...otherProps}\n              />\n            </Form.Group>\n          ) : type === \"select\" ? (\n            <Form.Group className={containerClass}>\n              {label ? (\n                <>\n                  <Form.Label className={labelClassName}>{label}</Form.Label>\n                  {action && action}\n                </>\n              ) : null}\n              {startIcon ? (\n                <FormInputGroup\n                  type={type}\n                  startIcon={startIcon}\n                  name={name}\n                  comp={comp}\n                  textClassName={textClassName}\n                  placeholder={placeholder}\n                  refCallback={refCallback}\n                  errors={errors}\n                  register={register}\n                  className={className}\n                  rows={rows}\n                  {...otherProps}\n                />\n              ) : (\n                <SelectInput\n                  type={type}\n                  name={name}\n                  placeholder={placeholder}\n                  refCallback={refCallback}\n                  errors={errors}\n                  register={register}\n                  comp={comp}\n                  className={className}\n                  rows={rows}\n                  {...otherProps}\n                />\n              )}\n            </Form.Group>\n          ) : (\n            <Form.Group className={containerClass}>\n              {label ? (\n                <>\n                  <Form.Label className={labelClassName}>{label}</Form.Label>\n                  {action && action}\n                </>\n              ) : null}\n              {startIcon ? (\n                <FormInputGroup\n                  type={type}\n                  startIcon={startIcon}\n                  name={name}\n                  comp={comp}\n                  textClassName={textClassName}\n                  placeholder={placeholder}\n                  refCallback={refCallback}\n                  errors={errors}\n                  register={register}\n                  className={className}\n                  rows={rows}\n                  {...otherProps}\n                />\n              ) : (\n                <TextualInput\n                  type={type}\n                  name={name}\n                  placeholder={placeholder}\n                  refCallback={refCallback}\n                  errors={errors}\n                  register={register}\n                  comp={comp}\n                  className={className}\n                  rows={rows}\n                  {...otherProps}\n                />\n              )}\n            </Form.Group>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default FormInput;\n","// images\nimport avatar1 from \"../../../assets/images/users/avatar-1.jpg\";\nimport avatar2 from \"../../../assets/images/users/avatar-2.jpg\";\nimport avatar3 from \"../../../assets/images/users/avatar-3.jpg\";\nimport avatar5 from \"../../../assets/images/users/avatar-5.jpg\";\nimport avatar6 from \"../../../assets/images/users/avatar-6.jpg\";\nimport avatar8 from \"../../../assets/images/users/avatar-8.jpg\";\nimport avatar9 from \"../../../assets/images/users/avatar-9.jpg\";\nimport avatar10 from \"../../../assets/images/users/avatar-10.jpg\";\n\nexport interface ChatUserType {\n  id?: number;\n  name?: string;\n  avatar?: string;\n  lastMessage?: string;\n  totalUnread?: number;\n  lastMessageOn?: string;\n  userStatus?: \"busy\" | \"online\" | \"away\" | \"offline\";\n}\n\nexport interface MessageItem {\n  id: number;\n  from: ChatUserType;\n  to: ChatUserType;\n  messages: {\n    type?: string;\n    value?: any;\n  }[];\n  sendOn?: string;\n}\n\nexport interface ChatMessage {\n  id: number;\n  day: string;\n  messages: MessageItem[];\n}\n\n// list of chat users\nconst USERS: ChatUserType[] = [\n  {\n    id: 1,\n    name: \"Brandon Smith\",\n    avatar: avatar2,\n    lastMessage: \"How are you today?\",\n    totalUnread: 3,\n    lastMessageOn: \"5:30am\",\n    userStatus: \"offline\",\n  },\n  {\n    id: 2,\n    name: \"Maria C\",\n    avatar: avatar10,\n    lastMessage: \"Hey! a reminder for tomorrow's meeting?\",\n    totalUnread: 0,\n    lastMessageOn: \"Thu\",\n    userStatus: \"online\",\n  },\n  {\n    id: 3,\n    name: \"Dominic A\",\n    avatar: avatar8,\n    lastMessage: \"Are we going to have this week's planning meeting?\",\n    totalUnread: 0,\n    lastMessageOn: \"4:30 am\",\n    userStatus: \"busy\",\n  },\n  {\n    id: 4,\n    name: \"Ronda D\",\n    avatar: avatar9,\n    lastMessage: \"Please check these design assets..\",\n    totalUnread: 0,\n    lastMessageOn: \"Wed\",\n    userStatus: \"online\",\n  },\n  {\n    id: 5,\n    name: \"Michael H\",\n    avatar: avatar3,\n    lastMessage: \"Are you free for 15 mins? I would like to discuss something\",\n    totalUnread: 25,\n    lastMessageOn: \"Tue\",\n    userStatus: \"offline\",\n  },\n  {\n    id: 6,\n    name: \"Thomas R\",\n    avatar: avatar5,\n    lastMessage: \"Let's have meeting today between me, you and Tony...\",\n    totalUnread: 0,\n    lastMessageOn: \"Tue\",\n    userStatus: \"offline\",\n  },\n  {\n    id: 7,\n    name: \"Thomas J\",\n    avatar: avatar6,\n    lastMessage: \"How are you?\",\n    totalUnread: 1,\n    lastMessageOn: \"Tue\",\n    userStatus: \"offline\",\n  },\n  {\n    id: 8,\n    name: \"Rikcy J\",\n    avatar: avatar1,\n    lastMessage: \"Are you interested in learning?\",\n    totalUnread: 0,\n    lastMessageOn: \"Mon\",\n    userStatus: \"away\",\n  },\n];\n\nconst defaultTo: ChatUserType = {\n  id: 9,\n  name: \"Shreyu N\",\n  avatar: avatar2,\n};\n\nconst YESTERDAYMESSAGES: MessageItem[] = [];\nconst TODAYMESSAGES: MessageItem[] = [];\n\nfor (const user of USERS) {\n  YESTERDAYMESSAGES.push(\n    {\n      id: 1,\n      messages: [\n        {\n          type: \"text\",\n          value: \"Hello!\",\n        },\n      ],\n      to: defaultTo,\n      from: user,\n      sendOn: \"8:18 am\",\n    },\n    {\n      id: 2,\n      messages: [\n        {\n          type: \"text\",\n          value: \"Hi, How are you? What about our next meeting?\",\n        },\n      ],\n      to: user,\n      from: defaultTo,\n      sendOn: \"8:20 am\",\n    }\n  );\n  TODAYMESSAGES.push(\n    {\n      id: 1,\n      messages: [\n        {\n          type: \"text\",\n          value: \"Yeah everything is fine\",\n        },\n        {\n          type: \"text\",\n          value: \"Let's have it today if you are free\",\n        },\n      ],\n      to: defaultTo,\n      from: user,\n      sendOn: \"8:21 am\",\n    },\n    {\n      id: 2,\n      messages: [\n        {\n          type: \"text\",\n          value: \"Sure thing! let me know if 2pm works for you\",\n        },\n      ],\n      to: user,\n      from: defaultTo,\n      sendOn: \"8:25 am\",\n    },\n    {\n      id: 3,\n      messages: [\n        {\n          type: \"text\",\n          value:\n            \"Sorry, I have another meeting scheduled at 2pm. Can we have it at 3pm instead?\",\n        },\n      ],\n      to: defaultTo,\n      from: user,\n      sendOn: \"8:26 am\",\n    },\n    {\n      id: 4,\n      messages: [\n        {\n          type: \"text\",\n          value:\n            \"2pm it is. sure, we can also discuss about the presentation talk format if you have some extra mins\",\n        },\n        {\n          type: \"text\",\n          value:\n            \"Sure, let's discuss about presentation format, it would be great to finalize today.\",\n        },\n      ],\n      to: user,\n      from: defaultTo,\n      sendOn: \"8:27 am\",\n    },\n    {\n      id: 5,\n      messages: [\n        {\n          type: \"text\",\n          value: \"Ok. I am attaching the last year format and assets here....\",\n        },\n        {\n          type: \"file\",\n          value: {\n            file: \"Shreyu-sketch.zip\",\n            size: \"2.3MB\",\n          },\n        },\n      ],\n      to: defaultTo,\n      from: user,\n      sendOn: \"8:32 am\",\n    }\n  );\n}\n// list of chat messages\nconst CHATHISTORY: ChatMessage[] = [\n  {\n    id: 1,\n    day: \"Yesterday\",\n    messages: [...YESTERDAYMESSAGES],\n  },\n  {\n    id: 2,\n    day: \"Today\",\n    messages: [...TODAYMESSAGES],\n  },\n];\n\nexport { USERS, CHATHISTORY };\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Dropdown } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\n// components\nimport Scrollbar from \"../../../components/Scrollbar\";\n\n// dummy data\nimport { USERS, ChatUserType } from \"./data\";\n\n// images\nimport profilePic from \"../../../assets/images/users/avatar-2.jpg\";\n\ninterface ChatUsersProps {\n  onUserSelect: (value: ChatUserType) => void;\n}\n\n// ChatUsers\nconst ChatUsers = ({ onUserSelect }: ChatUsersProps) => {\n  const [user, setUser] = useState<ChatUserType[]>([...USERS]);\n  const [selectedUser, setSelectedUser] = useState<ChatUserType>(USERS[1]);\n\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n  /*\n   * toggle apps-dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  /**\n   * Search the user\n   * @param {*} text\n   */\n  const search = (text: string) => {\n    setUser(\n      text\n        ? [...USERS].filter(\n            (u) => u.name!.toLowerCase().indexOf(text.toLowerCase()) >= 0\n          )\n        : [...USERS]\n    );\n  };\n\n  /**\n   * Activates the user\n   * @param {*} user\n   */\n  const activateUser = (user: ChatUserType) => {\n    setSelectedUser(user);\n    if (onUserSelect) {\n      onUserSelect(user);\n    }\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <div className=\"d-flex pb-2 border-bottom align-items-center\">\n            <img\n              src={profilePic}\n              className=\"me-2 rounded-circle\"\n              height=\"48\"\n              alt=\"\"\n            />\n            <div>\n              <h5 className=\"my-0 fs-14\">Shreyu N</h5>\n            </div>\n\n            <div className=\"flex-grow-1\">\n              <ul className=\"list-inline text-end mb-0\">\n                <Dropdown\n                  show={dropdownOpen}\n                  as=\"li\"\n                  onToggle={toggleDropdown}\n                  className=\"list-inline-item fs-18\"\n                >\n                  <Dropdown.Toggle\n                    id=\"dropdown-apps\"\n                    as=\"a\"\n                    onClick={toggleDropdown}\n                    className={classNames(\"text-dark\", \"cursor-pointer\", {\n                      show: dropdownOpen,\n                    })}\n                  >\n                    <i className=\"bi bi-three-dots-vertical\"></i>\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu className=\"dropdown-menu-end\">\n                    <Dropdown.Item href=\"#/\">\n                      <i className=\"bi bi-people fs-16 me-2\"></i>New Group\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#/\">\n                      <i className=\"bi bi-person-lines-fill fs-16 me-2\"></i>\n                      Contacts\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#/\">\n                      <i className=\"bi bi-bookmark fs-16 me-2\"></i>Saved Message\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#/\">\n                      <i className=\"bi bi-person-plus fs-16 me-2\"></i>Invite\n                      Friends\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#/\">\n                      <i className=\"bi bi-question-circle fs-16 me-2\"></i>Help\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#/\">\n                      <i className=\"bi bi-gear fs-16 me-2\"></i>Setting\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </ul>\n            </div>\n          </div>\n\n          <div>\n            <form className=\"chat-search\">\n              <div className=\"chat-search-box\">\n                <div className=\"input-group\">\n                  <button className=\"btn input-group-text\" type=\"submit\">\n                    <i className=\"uil uil-search\"></i>\n                  </button>\n                  <input\n                    type=\"search\"\n                    className=\"form-control\"\n                    placeholder=\"Search...\"\n                    id=\"top-search\"\n                    onKeyUp={(e: any) => search(e.target.value)}\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n\n          <div className=\"pe-2\">\n            <Scrollbar style={{ height: \"549px\", width: \"100%\" }}>\n              {(user || []).map((user, index) => {\n                return (\n                  <Link\n                    to=\"#\"\n                    key={index}\n                    className=\"text-body\"\n                    onClick={(e: any) => {\n                      activateUser(user);\n                    }}\n                  >\n                    <div\n                      className={classNames(\n                        \"d-flex\",\n                        \"align-items-start\",\n                        \"p-2\",\n                        {\n                          \"bg-light\": user.id === selectedUser.id,\n                        }\n                      )}\n                    >\n                      <div className=\"position-relative\">\n                        <span\n                          className={classNames(\"user-status\", {\n                            \"bg-success\": user.userStatus === \"online\",\n                            \"bg-danger\": user.userStatus === \"busy\",\n                            \"bg-warning\": user.userStatus === \"away\",\n                          })}\n                        ></span>\n                        <img\n                          src={user.avatar}\n                          className=\"me-2 rounded-circle\"\n                          height=\"48\"\n                          alt=\"\"\n                        />\n                      </div>\n\n                      <div className=\"w-100 overflow-hidden\">\n                        <h5 className=\"mt-0 mb-0 fs-14\">\n                          <span className=\"float-end text-muted fs-12\">\n                            {user.lastMessageOn}\n                          </span>\n                          {user.name}\n                        </h5>\n                        <p className=\"mt-1 mb-0 text-muted fs-14\">\n                          {user.totalUnread !== 0 && (\n                            <span className=\"float-end badge bg-danger text-white\">\n                              {user.totalUnread}\n                            </span>\n                          )}\n                          <span\n                            className={classNames(\"w-75\", {\n                              \"text-dark\": user.totalUnread,\n                            })}\n                          >\n                            {user.lastMessage}\n                          </span>\n                        </p>\n                      </div>\n                    </div>\n                  </Link>\n                );\n              })}\n            </Scrollbar>\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default ChatUsers;\n","import React, { useState } from \"react\";\nimport { Card, Col, Collapse, Modal, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n// images\nimport img1 from \"../../../assets/images/users/avatar-5.jpg\";\n\ninterface ProfileModalProps {\n  show: boolean;\n  handleClose: () => void;\n}\n\nconst ProfileModal = ({ show, handleClose }: ProfileModalProps) => {\n  const [showAbout, setShowAbout] = useState<boolean>(false);\n  const [showOtherInfo, setShowOtherInfo] = useState<boolean>(false);\n\n  return (\n    <Modal centered show={show} onHide={handleClose}>\n      <div className=\" m-2\">\n        <Modal.Header closeButton></Modal.Header>\n        <div className=\"text-center mb-3\">\n          <img\n            src={img1}\n            className=\"rounded-circle avatar-lg\"\n            height=\"48\"\n            alt=\"Rhonda D\"\n          />\n        </div>\n        <div className=\"text-center mb-3\">\n          <h5 className=\"mt-0 mb-0 fs-18\">Rhonda D</h5>\n        </div>\n        <div className=\"text-center mb-3\">\n          <div\n            className=\"avatar-sm fw-bold d-inline-block me-2\"\n            data-bs-toggle=\"modal\"\n            data-bs-target=\"#voicecall\"\n            data-bs-dismiss=\"modal\"\n          >\n            <Link\n              to=\"$\"\n              className=\"avatar-title rounded-circle border border-secondary text-dark\"\n            >\n              <i className=\"bi bi-telephone\"></i>\n            </Link>\n          </div>\n          <div\n            className=\"avatar-sm fw-bold d-inline-block me-2\"\n            data-bs-toggle=\"modal\"\n            data-bs-target=\"#videocall\"\n            data-bs-dismiss=\"modal\"\n          >\n            <Link\n              to=\"$\"\n              className=\"avatar-title rounded-circle border border-secondary text-dark\"\n            >\n              <i className=\"bi bi-camera-video\"></i>\n            </Link>\n          </div>\n          <div\n            className=\"avatar-sm fw-bold d-inline-block me-2\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n          >\n            <Link\n              to=\"$\"\n              className=\"avatar-title rounded-circle border border-secondary text-dark\"\n            >\n              <i className=\"bi bi-chat-left-dots\"></i>\n            </Link>\n          </div>\n        </div>\n\n        <Modal.Body>\n          <div className=\"accordion custom-accordionwitharrow\">\n            <Card className=\"mb-1 shadow-none border-0\">\n              <Link\n                to=\"#\"\n                onClick={() => setShowAbout(!showAbout)}\n                className=\"text-dark\"\n              >\n                <Card.Header className=\"border-0\">\n                  <h5 className=\"m-0 fs-16\">\n                    About\n                    <i className=\"uil uil-angle-down float-end accordion-arrow\"></i>\n                  </h5>\n                </Card.Header>\n              </Link>\n\n              <Collapse in={showAbout}>\n                <div>\n                  <Card.Body className=\"pt-0 text-muted\">\n                    <Row>\n                      <Col xs={4} className=\"p-2\">\n                        <i className=\"bi bi-telephone fs-18 me-2\"></i>Phone\n                      </Col>\n                      <Col xs={8} className=\"p-2 border-bottom\">\n                        (415) 281 - 1649\n                      </Col>\n                      <Col xs={4} className=\"p-2\">\n                        <i className=\"bi bi-envelope fs-18 me-2\"></i>Email\n                      </Col>\n                      <Col xs={8} className=\"p-2 border-bottom\">\n                        shreyu.abc@gmail.com\n                      </Col>\n                    </Row>\n                  </Card.Body>\n                </div>\n              </Collapse>\n            </Card>\n\n            <Card className=\"mb-1 shadow-none border-0\">\n              <Link\n                to=\"#\"\n                onClick={() => setShowOtherInfo(!showOtherInfo)}\n                className=\"text-dark\"\n              >\n                <Card.Header className=\"border-0\">\n                  <h5 className=\"m-0 fs-16\">\n                    Media, Links and Docs\n                    <i className=\"uil uil-angle-down float-end accordion-arrow\"></i>\n                  </h5>\n                </Card.Header>\n              </Link>\n\n              <Collapse in={showOtherInfo}>\n                <div>\n                  <Card.Body className=\"pt-0 text-muted\">\n                    <div className=\"d-inline-block me-2\">\n                      <i className=\"bi bi-file-earmark-pdf h2\"></i>\n                    </div>\n                    <div className=\"d-inline-block me-2\">\n                      <i className=\"bi bi-file-earmark-word h2\"></i>\n                    </div>\n                    <div className=\"d-inline-block me-2\">\n                      <i className=\"bi bi-images h2\"></i>\n                    </div>\n                    <div className=\"d-inline-block me-2\">\n                      <i className=\"bi bi-file-earmark-ppt h2\"></i>\n                    </div>\n                  </Card.Body>\n                </div>\n              </Collapse>\n            </Card>\n          </div>\n        </Modal.Body>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ProfileModal;\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n// images\nimport img1 from \"../../../assets/images/users/avatar-2.jpg\";\n\ninterface VideocallModalProps {\n  show: boolean;\n  handleClose: () => void;\n}\n\nconst VideocallModal = ({ show, handleClose }: VideocallModalProps) => {\n  return (\n    <Modal\n      centered\n      size=\"sm\"\n      show={show}\n      onHide={handleClose}\n      contentClassName=\"video-call\"\n    >\n      <Modal.Header className=\"mb-5 justify-content-end\">\n        <div className=\"video-call-head\">\n          <img src={img1} className=\"rounded\" alt=\"Rhonda D\" />\n        </div>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"video-call-action text-center pt-4 pb-2\">\n          <ul className=\"list-inline\">\n            <li className=\"list-inline-item avatar-sm fw-bold me-2\">\n              <Link\n                to=\"#\"\n                className=\"avatar-title rounded-circle bg-soft-light text-white fs-16\"\n              >\n                <i className=\"bi bi-mic-mute\"></i>\n              </Link>\n            </li>\n            <li className=\"list-inline-item avatar fw-bold me-2\">\n              <Link\n                to=\"#\"\n                className=\"avatar-title rounded-circle bg-danger text-white fs-18\"\n              >\n                <i className=\"bi bi-telephone\" data-bs-dismiss=\"modal\"></i>\n              </Link>\n            </li>\n            <li className=\"list-inline-item avatar-sm fw-bold\">\n              <Link\n                to=\"#\"\n                className=\"avatar-title rounded-circle bg-soft-light text-white fs-16\"\n              >\n                <i className=\"bi bi-camera-video\"></i>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default VideocallModal;\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n// images\nimport img1 from \"../../../assets/images/users/avatar-2.jpg\";\n\ninterface VoicecallModalProps {\n  show: boolean;\n  handleClose: () => void;\n}\n\nconst VoicecallModal = ({ show, handleClose }: VoicecallModalProps) => {\n  return (\n    <Modal\n      centered\n      size=\"sm\"\n      show={show}\n      onHide={handleClose}\n      contentClassName=\"voice-call\"\n    >\n      <Modal.Header className=\"mt-5 justify-content-center\">\n        <div className=\"voice-call-head\">\n          <img src={img1} className=\"rounded-circle\" alt=\"\" />\n        </div>\n      </Modal.Header>\n      <Modal.Body className=\"pt-0 text-center\">\n        <p className=\"mb-5\">Calling...</p>\n\n        <div className=\"voice-call-action pt-4 pb-2\">\n          <ul className=\"list-inline\">\n            <li className=\"list-inline-item avatar-sm fw-bold me-2\">\n              <Link\n                to=\"#\"\n                className=\"avatar-title rounded-circle bg-soft-secondary text-dark fs-16\"\n              >\n                <i className=\"bi bi-mic-mute\"></i>\n              </Link>\n            </li>\n            <li\n              className=\"list-inline-item avatar fw-bold me-2\"\n              data-bs-dismiss=\"modal\"\n            >\n              <Link\n                to=\"#\"\n                className=\"avatar-title rounded-circle bg-danger text-white fs-18\"\n              >\n                <i className=\"bi bi-telephone\"></i>\n              </Link>\n            </li>\n            <li className=\"list-inline-item avatar-sm fw-bold\">\n              <Link\n                to=\"#\"\n                className=\"avatar-title rounded-circle bg-soft-secondary text-dark fs-16\"\n              >\n                <i className=\"bi bi-volume-up\"></i>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default VoicecallModal;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Dropdown, Row, Col } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\n// components\nimport { FormInput } from \"../../../components/\";\nimport Scrollbar from \"../../../components/Scrollbar\";\nimport Loader from \"../../../components/Loader\";\n\nimport ProfileModal from \"./ProfileModal\";\nimport VideocallModal from \"./VideocallModal\";\nimport VoicecallModal from \"./VoicecallModal\";\n\n// default data\nimport { CHATHISTORY, ChatUserType, ChatMessage, MessageItem } from \"./data\";\n\n// images\nimport avatar1 from \"../../../assets/images/users/avatar-2.jpg\";\n\ninterface ChatHeaderProps {\n  selectedUser: ChatUserType;\n}\n\nconst ChatHeader = ({ selectedUser }: ChatHeaderProps) => {\n  // handle profile modal\n  const [showProfileModal, setShowProfileModal] = useState<boolean>(false);\n\n  const handleProfileModalClose = () => setShowProfileModal(false);\n  const handleProfileModalShow = () => setShowProfileModal(true);\n\n  // handle video modal\n  const [showVideocallModal, setShowVideocallModal] = useState<boolean>(false);\n\n  const handleVideocallModalClose = () => setShowVideocallModal(false);\n  const handleVideocallModalShow = () => setShowVideocallModal(true);\n\n  // handle voice modal\n  const [showVoicelModal, setShowVoicelModal] = useState<boolean>(false);\n\n  const handleVoicelModalClose = () => setShowVoicelModal(false);\n  const handleVoicelModalShow = () => setShowVoicelModal(true);\n\n  return (\n    <>\n      <div className=\"d-flex pb-2 border-bottom align-items-center\">\n        <img\n          src={selectedUser.avatar}\n          className=\"me-2 rounded-circle\"\n          height=\"48\"\n          alt=\"\"\n        />\n        <div>\n          <h5 className=\"mt-0 mb-0 fs-14\">{selectedUser.name}</h5>\n          <p className=\"mb-0\">Online</p>\n        </div>\n        <div className=\"flex-grow-1\">\n          <ul className=\"list-inline float-end mb-0\">\n            <Dropdown as=\"li\" className=\"list-inline-item fs-18 me-3\">\n              <Dropdown.Toggle\n                id=\"dropdown-apps\"\n                as=\"a\"\n                className=\"cursor-pointer text-dark\"\n              >\n                <i\n                  className=\"bi bi-telephone-plus\"\n                  onClick={() => handleVoicelModalShow()}\n                ></i>\n              </Dropdown.Toggle>\n            </Dropdown>\n\n            <Dropdown as=\"li\" className=\"list-inline-item fs-18 me-3\">\n              <Dropdown.Toggle\n                id=\"dropdown-apps\"\n                as=\"a\"\n                className=\"cursor-pointer text-dark\"\n              >\n                <i\n                  className=\"bi bi-camera-video\"\n                  onClick={() => handleVideocallModalShow()}\n                ></i>\n              </Dropdown.Toggle>\n            </Dropdown>\n\n            <Dropdown as=\"li\" className=\"list-inline-item fs-18\">\n              <Dropdown.Toggle\n                id=\"dropdown-apps\"\n                as=\"a\"\n                className=\"cursor-pointer text-dark\"\n              >\n                <i className=\"bi bi-three-dots-vertical\"></i>\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu className=\"dropdown-menu-end\">\n                <Dropdown.Item\n                  href=\"#/\"\n                  onClick={() => handleProfileModalShow()}\n                >\n                  {\" \"}\n                  <i className=\"bi bi-person-circle fs-18 me-2\"></i>View Profile\n                </Dropdown.Item>\n                <Dropdown.Item href=\"#/\">\n                  <i className=\"bi bi-music-note-list fs-18 me-2\"></i>Media,\n                  Links and Docs\n                </Dropdown.Item>\n                <Dropdown.Item href=\"#/\">\n                  <i className=\"bi bi-search fs-18 me-2\"></i>Search\n                </Dropdown.Item>\n                <Dropdown.Item href=\"#/\">\n                  <i className=\"bi bi-image fs-18 me-2\"></i>Wallpaper\n                </Dropdown.Item>\n                <Dropdown.Item href=\"#/\">\n                  <i className=\"bi bi-arrow-right-circle fs-18 me-2\"></i>More\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </ul>\n        </div>\n      </div>\n\n      {/* Profile Modal */}\n      <ProfileModal\n        show={showProfileModal}\n        handleClose={handleProfileModalClose}\n      />\n\n      {/* video call Modal */}\n      <VideocallModal\n        show={showVideocallModal}\n        handleClose={handleVideocallModalClose}\n      />\n\n      {/* Voice call Modal */}\n      <VoicecallModal\n        show={showVoicelModal}\n        handleClose={handleVoicelModalClose}\n      />\n    </>\n  );\n};\n\ninterface UserMessageProps {\n  message: MessageItem;\n  toUser: ChatUserType;\n}\n// user messages\nconst UserMessage = ({ message, toUser }: UserMessageProps) => {\n  return (\n    <>\n      {(message.messages || []).map((item, index) => {\n        return (\n          <li\n            key={index}\n            className={classNames(\"clearfix\", {\n              odd: message.from.id === toUser.id,\n              \"mb-1\":\n                message.messages.length > 1 &&\n                index !== message.messages.length - 1,\n            })}\n          >\n            <div className=\"conversation-text ms-0\">\n              <div\n                className={classNames(\"d-flex\", {\n                  \"justify-content-end\": message.from.id === toUser.id,\n                })}\n              >\n                {message.from.id === toUser.id && (\n                  <Dropdown className=\"conversation-actions\">\n                    <Dropdown.Toggle\n                      as=\"a\"\n                      className=\"cursor-pointer text-dark pe-1\"\n                    >\n                      <i className=\"bi bi-three-dots-vertical fs-14\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu align=\"end\">\n                      <Dropdown.Item>\n                        <i className=\"bi bi-reply fs-18 me-2\"></i>Reply\n                      </Dropdown.Item>\n                      <Dropdown.Item>\n                        <i className=\"bi bi-star fs-18 me-2\"></i>Reply\n                      </Dropdown.Item>\n                      <Dropdown.Item>\n                        <i className=\"bi bi-trash fs-18 me-2\"></i>Delete\n                      </Dropdown.Item>\n                      <Dropdown.Item>\n                        <i className=\"bi bi-files fs-18 me-2\"></i>Copy\n                      </Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                )}\n\n                {item.type === \"text\" && (\n                  <div className=\"ctext-wrap\">\n                    <p>{item.value}</p>\n                  </div>\n                )}\n\n                {item.type === \"file\" && (\n                  <Card className=\"mb-1 shadow-none border text-start\">\n                    <div className=\"p-2\">\n                      <Row className=\"align-items-center\">\n                        <Col className=\"col-auto\">\n                          <div className=\"avatar-sm bg-primary text-white\">\n                            <span className=\"avatar-title rounded\">.ZIP</span>\n                          </div>\n                        </Col>\n                        <Col className=\"ps-0\">\n                          <Link to=\"#\" className=\"text-muted fw-bold\">\n                            {item.value.file}\n                          </Link>\n                          <p className=\"mb-0\">{item.value.size}</p>\n                        </Col>\n                        <Col className=\"col-auto\">\n                          <Link to=\"#\" className=\"ps-3 fs-24\">\n                            <i className=\"bi bi-arrow-down-square\"></i>\n                          </Link>\n                        </Col>\n                      </Row>\n                    </div>\n                  </Card>\n                )}\n\n                {message.from.id !== toUser.id && (\n                  <Dropdown className=\"conversation-actions\">\n                    <Dropdown.Toggle\n                      as=\"a\"\n                      className=\"cursor-pointer text-dark ps-1\"\n                    >\n                      <i className=\"bi bi-three-dots-vertical fs-14\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu align=\"start\">\n                      <Dropdown.Item>\n                        <i className=\"bi bi-reply fs-18 me-2\"></i>Reply\n                      </Dropdown.Item>\n                      <Dropdown.Item>\n                        <i className=\"bi bi-star fs-18 me-2\"></i>Reply\n                      </Dropdown.Item>\n                      <Dropdown.Item>\n                        <i className=\"bi bi-trash fs-18 me-2\"></i>Delete\n                      </Dropdown.Item>\n                      <Dropdown.Item>\n                        <i className=\"bi bi-files fs-18 me-2\"></i>Copy\n                      </Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                )}\n              </div>\n              {index === message.messages.length - 1 && (\n                <p className=\"text-muted fs-12 mb-0 mt-1\">\n                  {message.sendOn}\n                  {message.from.id === toUser.id && (\n                    <i className=\"bi bi-check2-all ms-1 text-success\"></i>\n                  )}\n                </p>\n              )}\n            </div>\n          </li>\n        );\n      })}\n    </>\n  );\n};\n\ninterface ChatAreaProps {\n  selectedUser: ChatUserType;\n}\n\n// ChatArea\nconst ChatArea = ({ selectedUser }: ChatAreaProps) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [chatHistory, setChatHistory] = useState<ChatMessage[]>([]);\n  const [toUser] = useState<ChatUserType>({\n    id: 9,\n    name: \"Shreyu N\",\n    avatar: avatar1,\n  });\n\n  /*\n   *  Fetches the messages for selected user\n   */\n  const getMessagesForUser = useCallback(() => {\n    if (selectedUser) {\n      setLoading(true);\n      setTimeout(() => {\n        const modifiedChatHistory = [...CHATHISTORY].map((record) => {\n          const test = {\n            id: record.id,\n            day: record.day,\n            messages: [...record.messages].filter(\n              (m) =>\n                (m.to.id === toUser.id && m.from.id === selectedUser.id) ||\n                (toUser.id === m.from.id && m.to.id === selectedUser.id)\n            ),\n          };\n          return test;\n        });\n        setChatHistory([...modifiedChatHistory]);\n        setLoading(false);\n      }, 750);\n    }\n  }, [selectedUser, toUser.id]);\n\n  useEffect(() => {\n    getMessagesForUser();\n  }, [getMessagesForUser]);\n\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      newMessage: yup.string().required(\"Please enter your messsage\"),\n    })\n  );\n\n  /*\n   * form methods\n   */\n  const methods = useForm({ resolver: schemaResolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n    reset,\n  } = methods;\n\n  /**\n   * sends the chat message\n   */\n  const sendChatMessage = (values: { newMessage: string }) => {\n    let newUserMessages = [...chatHistory[chatHistory.length - 1].messages];\n    newUserMessages.push({\n      id: chatHistory[chatHistory.length - 1].messages.length + 1,\n      from: toUser,\n      to: selectedUser,\n      messages: [{ type: \"text\", value: values[\"newMessage\"] }],\n      sendOn: new Date().getHours() + \":\" + new Date().getMinutes(),\n    });\n\n    const modifiedChatHistory = [...chatHistory].map((record, index) => {\n      const test = {\n        id: record.id,\n        day: record.day,\n        messages:\n          index === chatHistory.length - 1 ? newUserMessages : record.messages,\n      };\n      return test;\n    });\n    setChatHistory([...modifiedChatHistory]);\n    reset();\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          {loading && <Loader />}\n          <ChatHeader selectedUser={selectedUser} />\n\n          <div className=\"mt-1\">\n            <Scrollbar style={{ height: \"509px\", width: \"100%\" }}>\n              <ul className=\"conversation-list px-0 h-100\">\n                {(chatHistory || []).map((item, index) => {\n                  return (\n                    <React.Fragment key={index}>\n                      <li className=\"position-relative\">\n                        <hr />\n                        <h4>\n                          <span className=\"badge bg-light text-dark position-absolute top-0 start-50 translate-middle\">\n                            {item.day}\n                          </span>\n                        </h4>\n                      </li>\n                      {(item.messages || []).map((message, index) => {\n                        return (\n                          <UserMessage\n                            key={index}\n                            message={message}\n                            toUser={toUser}\n                          />\n                        );\n                      })}\n                    </React.Fragment>\n                  );\n                })}\n              </ul>\n            </Scrollbar>\n\n            <div className=\"mt-2 bg-light p-3 rounded\">\n              <form\n                noValidate\n                name=\"chat-form\"\n                id=\"chat-form\"\n                onSubmit={handleSubmit(sendChatMessage)}\n              >\n                <div className=\"row\">\n                  <div className=\"col mb-2 mb-sm-0\">\n                    <FormInput\n                      type=\"text\"\n                      name=\"newMessage\"\n                      className=\"border-0\"\n                      placeholder=\"Enter your text\"\n                      register={register}\n                      key=\"newMessage\"\n                      errors={errors}\n                      control={control}\n                    />\n                  </div>\n                  <div className=\"col-sm-auto\">\n                    <div className=\"btn-group\">\n                      <Link to=\"#\" className=\"btn btn-light\">\n                        <i className=\"bi bi-emoji-smile fs-18\"></i>\n                      </Link>\n                      <Link to=\"#\" className=\"btn btn-light\">\n                        <i className=\"bi bi-paperclip fs-18\"></i>\n                      </Link>\n                      <Link to=\"#\" className=\"btn btn-light\">\n                        <i className=\"bi bi-camera fs-18\"></i>\n                      </Link>\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-success chat-send\"\n                      >\n                        <i className=\"uil uil-message\"></i>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default ChatArea;\n","import React, { useState } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle\";\n\nimport ChatUsers from \"./ChatUsers\";\nimport ChatArea from \"./ChatArea\";\n// dummy data\nimport { USERS, ChatUserType } from \"./data\";\n\n// ChatApp\nconst ChatApp = () => {\n  const [selectedUser, setSelectedUser] = useState<ChatUserType>(USERS[1]);\n\n  /**\n   * On user change\n   */\n  const onUserChange = (user: ChatUserType) => {\n    setSelectedUser(user);\n  };\n\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Apps\", path: \"/apps/chat\" },\n          { label: \"Chat\", path: \"/apps/chat\", active: true },\n        ]}\n        title={\"Chat\"}\n      />\n\n      <Row>\n        <Col lg={5} xxl={3}>\n          <ChatUsers onUserSelect={onUserChange} />\n        </Col>\n        <Col lg={7} xxl={9}>\n          <ChatArea selectedUser={selectedUser} />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default ChatApp;\n","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport const resolveContainerRef = ref => {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n}); // @ts-ignore\n\n// @ts-ignore\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["_jsx","className","id","children","_jsxs","props","Row","Col","title","Breadcrumb","listProps","href","breadCrumbItems","map","item","index","active","label","path","_ref","style","otherProps","_objectWithoutProperties","_excluded","SimpleBar","_objectSpread","defaultValues","resolver","onSubmit","formClass","methods","useForm","handleSubmit","register","control","errors","formState","noValidate","Array","isArray","child","name","React","type","key","TextualInput","placeholder","comp","rows","refCallback","_Fragment","Form","as","ref","r","isInvalid","CheckInput","_ref2","_excluded2","SelectInput","_ref3","_excluded3","FormInputGroup","_ref4","startIcon","textClassName","_excluded4","InputGroup","_ref5","labelClassName","containerClass","action","_excluded5","USERS","avatar","avatar2","lastMessage","totalUnread","lastMessageOn","userStatus","avatar10","avatar8","avatar9","avatar3","avatar5","avatar6","avatar1","defaultTo","YESTERDAYMESSAGES","TODAYMESSAGES","_i","_USERS","length","user","push","messages","value","to","from","sendOn","file","size","CHATHISTORY","day","concat","onUserSelect","_useState","useState","_toConsumableArray","_useState2","_slicedToArray","setUser","_useState3","_useState4","selectedUser","setSelectedUser","_useState5","_useState6","dropdownOpen","setDropdownOpen","toggleDropdown","Card","src","profilePic","height","alt","Dropdown","show","onToggle","onClick","classNames","onKeyUp","e","text","target","filter","u","toLowerCase","indexOf","Scrollbar","width","Link","activateUser","handleClose","showAbout","setShowAbout","showOtherInfo","setShowOtherInfo","Modal","centered","onHide","closeButton","img1","Collapse","in","xs","contentClassName","ChatHeader","showProfileModal","setShowProfileModal","showVideocallModal","setShowVideocallModal","showVoicelModal","setShowVoicelModal","ProfileModal","VideocallModal","VoicecallModal","UserMessage","message","toUser","odd","align","_useState7","_useState8","loading","setLoading","_useState9","_useState10","chatHistory","setChatHistory","_useState11","getMessagesForUser","useCallback","setTimeout","modifiedChatHistory","record","m","useEffect","schemaResolver","yupResolver","yup","shape","newMessage","required","reset","Loader","values","newUserMessages","Date","getHours","getMinutes","FormInput","PageTitle","lg","xxl","ChatUsers","ChatArea","useWillUnmount","fn","onUnmount","valueRef","useRef","current","useUpdatedRef","resolveContainerRef","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","resolvedRef","setRef","earlyRef","nextRef","hasClass","element","classList","contains","baseVal","_len","arguments","funcs","_key","f","reduce","acc","Error","_len2","args","_key2","apply","this","MARGINS","getDefaultDimensionValue","dimension","elem","toUpperCase","slice","margins","parseInt","css","collapseStyles","_collapseStyles","_defineProperty","EXITED","EXITING","ENTERING","ENTERED","defaultProps","timeout","mountOnEnter","unmountOnExit","appear","getDimensionValue","onEnter","onEntering","onEntered","onExit","onExiting","_ref$dimension","_ref$getDimensionValu","computedDimension","handleEnter","useMemo","createChainedFunction","handleEntering","scroll","handleEntered","handleExit","triggerBrowserReflow","handleExiting","TransitionWrapper","addEndListener","transitionEndListener","role","childRef","state","innerProps","DEVICE_SIZES","bsPrefix","_ref$as","Component","decoratedBsPrefix","useBootstrapPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","displayName"],"sourceRoot":""}